(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[81],{

/***/ "./node_modules/@swc/wasm-web/wasm.js":
/*!********************************************!*\
  !*** ./node_modules/@swc/wasm-web/wasm.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n      function getAbsoluteUrl(relativeUrl) {\n        const publicPath = __webpack_require__.p;\n\n        let url = '';\n\n        if (!publicPath || publicPath.indexOf('://') < 0) {\n          url += window.location.protocol + '//' + window.location.host;\n        }\n\n        if (publicPath) {\n          url += publicPath;\n        } else {\n          url += '/';\n        }\n\n        return url + relativeUrl;\n      }\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.minifySync = minifySync;\nexports.parseSync = parseSync;\nexports.printSync = printSync;\nexports.transformSync = transformSync;\nlet wasm;\nlet cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nlet cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\nlet cachedTextEncoder = new TextEncoder('utf-8');\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length);\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len);\n  const mem = getUint8Memory0();\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32Memory0;\n}\n/**\n* @param {string} s\n* @param {any} opts\n* @returns {any}\n*/\n\n\nfunction minifySync(s, opts) {\n  var ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ret = wasm.minifySync(ptr0, len0, addHeapObject(opts));\n  return takeObject(ret);\n}\n/**\n* @param {string} s\n* @param {any} opts\n* @returns {any}\n*/\n\n\nfunction parseSync(s, opts) {\n  var ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ret = wasm.parseSync(ptr0, len0, addHeapObject(opts));\n  return takeObject(ret);\n}\n/**\n* @param {any} s\n* @param {any} opts\n* @returns {any}\n*/\n\n\nfunction printSync(s, opts) {\n  var ret = wasm.printSync(addHeapObject(s), addHeapObject(opts));\n  return takeObject(ret);\n}\n/**\n* @param {string} s\n* @param {any} opts\n* @returns {any}\n*/\n\n\nfunction transformSync(s, opts) {\n  var ptr0 = passStringToWasm0(s, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ret = wasm.transformSync(ptr0, len0, addHeapObject(opts));\n  return takeObject(ret);\n}\n\nasync function load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get('Content-Type') != 'application/wasm') {\n          console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    if (instance instanceof WebAssembly.Instance) {\n      return {\n        instance,\n        module\n      };\n    } else {\n      return instance;\n    }\n  }\n}\n\nasync function init(input) {\n  if (typeof input === 'undefined') {\n    input = new URL('wasm_bg.wasm', ({ url: getAbsoluteUrl('node_modules/@swc/wasm-web/wasm.js') }).url);\n  }\n\n  const imports = {};\n  imports.wbg = {};\n\n  imports.wbg.__wbindgen_string_new = function (arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n\n  imports.wbg.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n  };\n\n  imports.wbg.__wbindgen_json_serialize = function (arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n\n  imports.wbg.__wbindgen_json_parse = function (arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n\n  imports.wbg.__wbg_new0_fd3a3a290b25cdac = function () {\n    var ret = new Date();\n    return addHeapObject(ret);\n  };\n\n  imports.wbg.__wbg_getTime_10d33f4f2959e5dd = function (arg0) {\n    var ret = getObject(arg0).getTime();\n    return ret;\n  };\n\n  imports.wbg.__wbg_getTimezoneOffset_d3e5a22a1b7fb1d8 = function (arg0) {\n    var ret = getObject(arg0).getTimezoneOffset();\n    return ret;\n  };\n\n  imports.wbg.__wbg_new_693216e109162396 = function () {\n    var ret = new Error();\n    return addHeapObject(ret);\n  };\n\n  imports.wbg.__wbg_stack_0ddaca5d1abfb52f = function (arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n\n  imports.wbg.__wbg_error_09919627ac0992f5 = function (arg0, arg1) {\n    try {\n      console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n      wasm.__wbindgen_free(arg0, arg1);\n    }\n  };\n\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n\n  imports.wbg.__wbindgen_rethrow = function (arg0) {\n    throw takeObject(arg0);\n  };\n\n  if (typeof input === 'string' || typeof Request === 'function' && input instanceof Request || typeof URL === 'function' && input instanceof URL) {\n    input = fetch(input);\n  }\n\n  const {\n    instance,\n    module\n  } = await load(await input, imports);\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n  return wasm;\n}\n\nvar _default = init;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@swc/wasm-web/wasm.js\n");

/***/ })

}]);