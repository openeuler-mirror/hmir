(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[35],{

/***/ "./node_modules/css-tree/cjs/convertor/create.cjs":
/*!********************************************************!*\
  !*** ./node_modules/css-tree/cjs/convertor/create.cjs ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst List = __webpack_require__(/*! ../utils/List.cjs */ \"./node_modules/css-tree/cjs/utils/List.cjs\");\n\nfunction createConvertor(walk) {\n    return {\n        fromPlainObject: function(ast) {\n            walk(ast, {\n                enter: function(node) {\n                    if (node.children && node.children instanceof List.List === false) {\n                        node.children = new List.List().fromArray(node.children);\n                    }\n                }\n            });\n\n            return ast;\n        },\n        toPlainObject: function(ast) {\n            walk(ast, {\n                leave: function(node) {\n                    if (node.children && node.children instanceof List.List) {\n                        node.children = node.children.toArray();\n                    }\n                }\n            });\n\n            return ast;\n        }\n    };\n}\n\nexports.createConvertor = createConvertor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2NvbnZlcnRvci9jcmVhdGUuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9jb252ZXJ0b3IvY3JlYXRlLmNqcz81ZTllIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTGlzdCA9IHJlcXVpcmUoJy4uL3V0aWxzL0xpc3QuY2pzJyk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbnZlcnRvcih3YWxrKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZnJvbVBsYWluT2JqZWN0OiBmdW5jdGlvbihhc3QpIHtcbiAgICAgICAgICAgIHdhbGsoYXN0LCB7XG4gICAgICAgICAgICAgICAgZW50ZXI6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUuY2hpbGRyZW4gJiYgbm9kZS5jaGlsZHJlbiBpbnN0YW5jZW9mIExpc3QuTGlzdCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUuY2hpbGRyZW4gPSBuZXcgTGlzdC5MaXN0KCkuZnJvbUFycmF5KG5vZGUuY2hpbGRyZW4pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJldHVybiBhc3Q7XG4gICAgICAgIH0sXG4gICAgICAgIHRvUGxhaW5PYmplY3Q6IGZ1bmN0aW9uKGFzdCkge1xuICAgICAgICAgICAgd2Fsayhhc3QsIHtcbiAgICAgICAgICAgICAgICBsZWF2ZTogZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5jaGlsZHJlbiAmJiBub2RlLmNoaWxkcmVuIGluc3RhbmNlb2YgTGlzdC5MaXN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLmNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbi50b0FycmF5KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIGFzdDtcbiAgICAgICAgfVxuICAgIH07XG59XG5cbmV4cG9ydHMuY3JlYXRlQ29udmVydG9yID0gY3JlYXRlQ29udmVydG9yO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/convertor/create.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs":
/*!*********************************************************************!*\
  !*** ./node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst createCustomError = __webpack_require__(/*! ../utils/create-custom-error.cjs */ \"./node_modules/css-tree/cjs/utils/create-custom-error.cjs\");\n\nfunction SyntaxError(message, input, offset) {\n    return Object.assign(createCustomError.createCustomError('SyntaxError', message), {\n        input,\n        offset,\n        rawMessage: message,\n        message: message + '\\n' +\n            '  ' + input + '\\n' +\n            '--' + new Array((offset || input.length) + 1).join('-') + '^'\n    });\n}\n\nexports.SyntaxError = SyntaxError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2RlZmluaXRpb24tc3ludGF4L1N5bnRheEVycm9yLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvZGVmaW5pdGlvbi1zeW50YXgvU3ludGF4RXJyb3IuY2pzPzBiNzciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBjcmVhdGVDdXN0b21FcnJvciA9IHJlcXVpcmUoJy4uL3V0aWxzL2NyZWF0ZS1jdXN0b20tZXJyb3IuY2pzJyk7XG5cbmZ1bmN0aW9uIFN5bnRheEVycm9yKG1lc3NhZ2UsIGlucHV0LCBvZmZzZXQpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihjcmVhdGVDdXN0b21FcnJvci5jcmVhdGVDdXN0b21FcnJvcignU3ludGF4RXJyb3InLCBtZXNzYWdlKSwge1xuICAgICAgICBpbnB1dCxcbiAgICAgICAgb2Zmc2V0LFxuICAgICAgICByYXdNZXNzYWdlOiBtZXNzYWdlLFxuICAgICAgICBtZXNzYWdlOiBtZXNzYWdlICsgJ1xcbicgK1xuICAgICAgICAgICAgJyAgJyArIGlucHV0ICsgJ1xcbicgK1xuICAgICAgICAgICAgJy0tJyArIG5ldyBBcnJheSgob2Zmc2V0IHx8IGlucHV0Lmxlbmd0aCkgKyAxKS5qb2luKCctJykgKyAnXidcbiAgICB9KTtcbn1cblxuZXhwb3J0cy5TeW50YXhFcnJvciA9IFN5bnRheEVycm9yO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/definition-syntax/generate.cjs":
/*!******************************************************************!*\
  !*** ./node_modules/css-tree/cjs/definition-syntax/generate.cjs ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction noop(value) {\n    return value;\n}\n\nfunction generateMultiplier(multiplier) {\n    const { min, max, comma } = multiplier;\n\n    if (min === 0 && max === 0) {\n        return '*';\n    }\n\n    if (min === 0 && max === 1) {\n        return '?';\n    }\n\n    if (min === 1 && max === 0) {\n        return comma ? '#' : '+';\n    }\n\n    if (min === 1 && max === 1) {\n        return '';\n    }\n\n    return (\n        (comma ? '#' : '') +\n        (min === max\n            ? '{' + min + '}'\n            : '{' + min + ',' + (max !== 0 ? max : '') + '}'\n        )\n    );\n}\n\nfunction generateTypeOpts(node) {\n    switch (node.type) {\n        case 'Range':\n            return (\n                ' [' +\n                (node.min === null ? '-∞' : node.min) +\n                ',' +\n                (node.max === null ? '∞' : node.max) +\n                ']'\n            );\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n    const combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    const result = node.terms\n        .map(term => internalGenerate(term, decorate, forceBraces, compact))\n        .join(combinator);\n\n    if (node.explicit || forceBraces) {\n        return (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n}\n\nfunction internalGenerate(node, decorate, forceBraces, compact) {\n    let result;\n\n    switch (node.type) {\n        case 'Group':\n            result =\n                generateSequence(node, decorate, forceBraces, compact) +\n                (node.disallowEmpty ? '!' : '');\n            break;\n\n        case 'Multiplier':\n            // return since node is a composition\n            return (\n                internalGenerate(node.term, decorate, forceBraces, compact) +\n                decorate(generateMultiplier(node), node)\n            );\n\n        case 'Type':\n            result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n            break;\n\n        case 'Property':\n            result = '<\\'' + node.name + '\\'>';\n            break;\n\n        case 'Keyword':\n            result = node.name;\n            break;\n\n        case 'AtKeyword':\n            result = '@' + node.name;\n            break;\n\n        case 'Function':\n            result = node.name + '(';\n            break;\n\n        case 'String':\n        case 'Token':\n            result = node.value;\n            break;\n\n        case 'Comma':\n            result = ',';\n            break;\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n}\n\nfunction generate(node, options) {\n    let decorate = noop;\n    let forceBraces = false;\n    let compact = false;\n\n    if (typeof options === 'function') {\n        decorate = options;\n    } else if (options) {\n        forceBraces = Boolean(options.forceBraces);\n        compact = Boolean(options.compact);\n        if (typeof options.decorate === 'function') {\n            decorate = options.decorate;\n        }\n    }\n\n    return internalGenerate(node, decorate, forceBraces, compact);\n}\n\nexports.generate = generate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2RlZmluaXRpb24tc3ludGF4L2dlbmVyYXRlLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvZGVmaW5pdGlvbi1zeW50YXgvZ2VuZXJhdGUuY2pzP2NhMGQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBub29wKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZU11bHRpcGxpZXIobXVsdGlwbGllcikge1xuICAgIGNvbnN0IHsgbWluLCBtYXgsIGNvbW1hIH0gPSBtdWx0aXBsaWVyO1xuXG4gICAgaWYgKG1pbiA9PT0gMCAmJiBtYXggPT09IDApIHtcbiAgICAgICAgcmV0dXJuICcqJztcbiAgICB9XG5cbiAgICBpZiAobWluID09PSAwICYmIG1heCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gJz8nO1xuICAgIH1cblxuICAgIGlmIChtaW4gPT09IDEgJiYgbWF4ID09PSAwKSB7XG4gICAgICAgIHJldHVybiBjb21tYSA/ICcjJyA6ICcrJztcbiAgICB9XG5cbiAgICBpZiAobWluID09PSAxICYmIG1heCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgKGNvbW1hID8gJyMnIDogJycpICtcbiAgICAgICAgKG1pbiA9PT0gbWF4XG4gICAgICAgICAgICA/ICd7JyArIG1pbiArICd9J1xuICAgICAgICAgICAgOiAneycgKyBtaW4gKyAnLCcgKyAobWF4ICE9PSAwID8gbWF4IDogJycpICsgJ30nXG4gICAgICAgIClcbiAgICApO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVR5cGVPcHRzKG5vZGUpIHtcbiAgICBzd2l0Y2ggKG5vZGUudHlwZSkge1xuICAgICAgICBjYXNlICdSYW5nZSc6XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICcgWycgK1xuICAgICAgICAgICAgICAgIChub2RlLm1pbiA9PT0gbnVsbCA/ICct4oieJyA6IG5vZGUubWluKSArXG4gICAgICAgICAgICAgICAgJywnICtcbiAgICAgICAgICAgICAgICAobm9kZS5tYXggPT09IG51bGwgPyAn4oieJyA6IG5vZGUubWF4KSArXG4gICAgICAgICAgICAgICAgJ10nXG4gICAgICAgICAgICApO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gbm9kZSB0eXBlIGAnICsgbm9kZS50eXBlICsgJ2AnKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlU2VxdWVuY2Uobm9kZSwgZGVjb3JhdGUsIGZvcmNlQnJhY2VzLCBjb21wYWN0KSB7XG4gICAgY29uc3QgY29tYmluYXRvciA9IG5vZGUuY29tYmluYXRvciA9PT0gJyAnIHx8IGNvbXBhY3QgPyBub2RlLmNvbWJpbmF0b3IgOiAnICcgKyBub2RlLmNvbWJpbmF0b3IgKyAnICc7XG4gICAgY29uc3QgcmVzdWx0ID0gbm9kZS50ZXJtc1xuICAgICAgICAubWFwKHRlcm0gPT4gaW50ZXJuYWxHZW5lcmF0ZSh0ZXJtLCBkZWNvcmF0ZSwgZm9yY2VCcmFjZXMsIGNvbXBhY3QpKVxuICAgICAgICAuam9pbihjb21iaW5hdG9yKTtcblxuICAgIGlmIChub2RlLmV4cGxpY2l0IHx8IGZvcmNlQnJhY2VzKSB7XG4gICAgICAgIHJldHVybiAoY29tcGFjdCB8fCByZXN1bHRbMF0gPT09ICcsJyA/ICdbJyA6ICdbICcpICsgcmVzdWx0ICsgKGNvbXBhY3QgPyAnXScgOiAnIF0nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBpbnRlcm5hbEdlbmVyYXRlKG5vZGUsIGRlY29yYXRlLCBmb3JjZUJyYWNlcywgY29tcGFjdCkge1xuICAgIGxldCByZXN1bHQ7XG5cbiAgICBzd2l0Y2ggKG5vZGUudHlwZSkge1xuICAgICAgICBjYXNlICdHcm91cCc6XG4gICAgICAgICAgICByZXN1bHQgPVxuICAgICAgICAgICAgICAgIGdlbmVyYXRlU2VxdWVuY2Uobm9kZSwgZGVjb3JhdGUsIGZvcmNlQnJhY2VzLCBjb21wYWN0KSArXG4gICAgICAgICAgICAgICAgKG5vZGUuZGlzYWxsb3dFbXB0eSA/ICchJyA6ICcnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ011bHRpcGxpZXInOlxuICAgICAgICAgICAgLy8gcmV0dXJuIHNpbmNlIG5vZGUgaXMgYSBjb21wb3NpdGlvblxuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICBpbnRlcm5hbEdlbmVyYXRlKG5vZGUudGVybSwgZGVjb3JhdGUsIGZvcmNlQnJhY2VzLCBjb21wYWN0KSArXG4gICAgICAgICAgICAgICAgZGVjb3JhdGUoZ2VuZXJhdGVNdWx0aXBsaWVyKG5vZGUpLCBub2RlKVxuICAgICAgICAgICAgKTtcblxuICAgICAgICBjYXNlICdUeXBlJzpcbiAgICAgICAgICAgIHJlc3VsdCA9ICc8JyArIG5vZGUubmFtZSArIChub2RlLm9wdHMgPyBkZWNvcmF0ZShnZW5lcmF0ZVR5cGVPcHRzKG5vZGUub3B0cyksIG5vZGUub3B0cykgOiAnJykgKyAnPic7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdQcm9wZXJ0eSc6XG4gICAgICAgICAgICByZXN1bHQgPSAnPFxcJycgKyBub2RlLm5hbWUgKyAnXFwnPic7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdLZXl3b3JkJzpcbiAgICAgICAgICAgIHJlc3VsdCA9IG5vZGUubmFtZTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ0F0S2V5d29yZCc6XG4gICAgICAgICAgICByZXN1bHQgPSAnQCcgKyBub2RlLm5hbWU7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdGdW5jdGlvbic6XG4gICAgICAgICAgICByZXN1bHQgPSBub2RlLm5hbWUgKyAnKCc7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlICdTdHJpbmcnOlxuICAgICAgICBjYXNlICdUb2tlbic6XG4gICAgICAgICAgICByZXN1bHQgPSBub2RlLnZhbHVlO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAnQ29tbWEnOlxuICAgICAgICAgICAgcmVzdWx0ID0gJywnO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBub2RlIHR5cGUgYCcgKyBub2RlLnR5cGUgKyAnYCcpO1xuICAgIH1cblxuICAgIHJldHVybiBkZWNvcmF0ZShyZXN1bHQsIG5vZGUpO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlLCBvcHRpb25zKSB7XG4gICAgbGV0IGRlY29yYXRlID0gbm9vcDtcbiAgICBsZXQgZm9yY2VCcmFjZXMgPSBmYWxzZTtcbiAgICBsZXQgY29tcGFjdCA9IGZhbHNlO1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGRlY29yYXRlID0gb3B0aW9ucztcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgZm9yY2VCcmFjZXMgPSBCb29sZWFuKG9wdGlvbnMuZm9yY2VCcmFjZXMpO1xuICAgICAgICBjb21wYWN0ID0gQm9vbGVhbihvcHRpb25zLmNvbXBhY3QpO1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuZGVjb3JhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGRlY29yYXRlID0gb3B0aW9ucy5kZWNvcmF0ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBpbnRlcm5hbEdlbmVyYXRlKG5vZGUsIGRlY29yYXRlLCBmb3JjZUJyYWNlcywgY29tcGFjdCk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/definition-syntax/generate.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/definition-syntax/index.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/css-tree/cjs/definition-syntax/index.cjs ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst _SyntaxError = __webpack_require__(/*! ./SyntaxError.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs\");\nconst generate = __webpack_require__(/*! ./generate.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/generate.cjs\");\nconst parse = __webpack_require__(/*! ./parse.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/parse.cjs\");\nconst walk = __webpack_require__(/*! ./walk.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/walk.cjs\");\n\n\n\nexports.SyntaxError = _SyntaxError.SyntaxError;\nexports.generate = generate.generate;\nexports.parse = parse.parse;\nexports.walk = walk.walk;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2RlZmluaXRpb24tc3ludGF4L2luZGV4LmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvZGVmaW5pdGlvbi1zeW50YXgvaW5kZXguY2pzPzU3M2EiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBfU3ludGF4RXJyb3IgPSByZXF1aXJlKCcuL1N5bnRheEVycm9yLmNqcycpO1xuY29uc3QgZ2VuZXJhdGUgPSByZXF1aXJlKCcuL2dlbmVyYXRlLmNqcycpO1xuY29uc3QgcGFyc2UgPSByZXF1aXJlKCcuL3BhcnNlLmNqcycpO1xuY29uc3Qgd2FsayA9IHJlcXVpcmUoJy4vd2Fsay5janMnKTtcblxuXG5cbmV4cG9ydHMuU3ludGF4RXJyb3IgPSBfU3ludGF4RXJyb3IuU3ludGF4RXJyb3I7XG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGUuZ2VuZXJhdGU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2UucGFyc2U7XG5leHBvcnRzLndhbGsgPSB3YWxrLndhbGs7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/definition-syntax/index.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/definition-syntax/parse.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/css-tree/cjs/definition-syntax/parse.cjs ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst tokenizer = __webpack_require__(/*! ./tokenizer.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/tokenizer.cjs\");\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\nconst EXCLAMATIONMARK = 33;    // !\nconst NUMBERSIGN = 35;         // #\nconst AMPERSAND = 38;          // &\nconst APOSTROPHE = 39;         // '\nconst LEFTPARENTHESIS = 40;    // (\nconst RIGHTPARENTHESIS = 41;   // )\nconst ASTERISK = 42;           // *\nconst PLUSSIGN = 43;           // +\nconst COMMA = 44;              // ,\nconst HYPERMINUS = 45;         // -\nconst LESSTHANSIGN = 60;       // <\nconst GREATERTHANSIGN = 62;    // >\nconst QUESTIONMARK = 63;       // ?\nconst COMMERCIALAT = 64;       // @\nconst LEFTSQUAREBRACKET = 91;  // [\nconst RIGHTSQUAREBRACKET = 93; // ]\nconst LEFTCURLYBRACKET = 123;  // {\nconst VERTICALLINE = 124;      // |\nconst RIGHTCURLYBRACKET = 125; // }\nconst INFINITY = 8734;         // ∞\nconst NAME_CHAR = new Uint8Array(128).map((_, idx) =>\n    /[a-zA-Z0-9\\-]/.test(String.fromCharCode(idx)) ? 1 : 0\n);\nconst COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n};\n\nfunction scanSpaces(tokenizer) {\n    return tokenizer.substringToPos(\n        tokenizer.findWsEnd(tokenizer.pos)\n    );\n}\n\nfunction scanWord(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code >= 128 || NAME_CHAR[code] === 0) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a keyword');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanNumber(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code < 48 || code > 57) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a number');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanString(tokenizer) {\n    const end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\n\n    if (end === -1) {\n        tokenizer.pos = tokenizer.str.length;\n        tokenizer.error('Expect an apostrophe');\n    }\n\n    return tokenizer.substringToPos(end + 1);\n}\n\nfunction readMultiplierRange(tokenizer) {\n    let min = null;\n    let max = null;\n\n    tokenizer.eat(LEFTCURLYBRACKET);\n\n    min = scanNumber(tokenizer);\n\n    if (tokenizer.charCode() === COMMA) {\n        tokenizer.pos++;\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\n            max = scanNumber(tokenizer);\n        }\n    } else {\n        max = min;\n    }\n\n    tokenizer.eat(RIGHTCURLYBRACKET);\n\n    return {\n        min: Number(min),\n        max: max ? Number(max) : 0\n    };\n}\n\nfunction readMultiplier(tokenizer) {\n    let range = null;\n    let comma = false;\n\n    switch (tokenizer.charCode()) {\n        case ASTERISK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 0\n            };\n\n            break;\n\n        case PLUSSIGN:\n            tokenizer.pos++;\n\n            range = {\n                min: 1,\n                max: 0\n            };\n\n            break;\n\n        case QUESTIONMARK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 1\n            };\n\n            break;\n\n        case NUMBERSIGN:\n            tokenizer.pos++;\n\n            comma = true;\n\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\n                range = readMultiplierRange(tokenizer);\n            } else {\n                range = {\n                    min: 1,\n                    max: 0\n                };\n            }\n\n            break;\n\n        case LEFTCURLYBRACKET:\n            range = readMultiplierRange(tokenizer);\n            break;\n\n        default:\n            return null;\n    }\n\n    return {\n        type: 'Multiplier',\n        comma,\n        min: range.min,\n        max: range.max,\n        term: null\n    };\n}\n\nfunction maybeMultiplied(tokenizer, node) {\n    const multiplier = readMultiplier(tokenizer);\n\n    if (multiplier !== null) {\n        multiplier.term = node;\n        return multiplier;\n    }\n\n    return node;\n}\n\nfunction maybeToken(tokenizer) {\n    const ch = tokenizer.peek();\n\n    if (ch === '') {\n        return null;\n    }\n\n    return {\n        type: 'Token',\n        value: ch\n    };\n}\n\nfunction readProperty(tokenizer) {\n    let name;\n\n    tokenizer.eat(LESSTHANSIGN);\n    tokenizer.eat(APOSTROPHE);\n\n    name = scanWord(tokenizer);\n\n    tokenizer.eat(APOSTROPHE);\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Property',\n        name\n    });\n}\n\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\n// 4.1. Range Restrictions and Range Definition Notation\n//\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\n// indicating a closed range between (and including) min and max.\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\nfunction readTypeRange(tokenizer) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    let min = null; // -Infinity\n    let max = null; // Infinity\n    let sign = 1;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n\n    if (tokenizer.charCode() === HYPERMINUS) {\n        tokenizer.peek();\n        sign = -1;\n    }\n\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        min = sign * Number(scanNumber(tokenizer));\n    }\n\n    scanSpaces(tokenizer);\n    tokenizer.eat(COMMA);\n    scanSpaces(tokenizer);\n\n    if (tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        sign = 1;\n\n        if (tokenizer.charCode() === HYPERMINUS) {\n            tokenizer.peek();\n            sign = -1;\n        }\n\n        max = sign * Number(scanNumber(tokenizer));\n    }\n\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    // If no range is indicated, either by using the bracketed range notation\n    // or in the property description, then [−∞,∞] is assumed.\n    if (min === null && max === null) {\n        return null;\n    }\n\n    return {\n        type: 'Range',\n        min,\n        max\n    };\n}\n\nfunction readType(tokenizer) {\n    let name;\n    let opts = null;\n\n    tokenizer.eat(LESSTHANSIGN);\n    name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\n        tokenizer.pos += 2;\n        name += '()';\n    }\n\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\n        scanSpaces(tokenizer);\n        opts = readTypeRange(tokenizer);\n    }\n\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Type',\n        name,\n        opts\n    });\n}\n\nfunction readKeywordOrFunction(tokenizer) {\n    const name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\n        tokenizer.pos++;\n\n        return {\n            type: 'Function',\n            name\n        };\n    }\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Keyword',\n        name\n    });\n}\n\nfunction regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n        return {\n            type: 'Group',\n            terms,\n            combinator,\n            disallowEmpty: false,\n            explicit: false\n        };\n    }\n\n    let combinator;\n\n    combinators = Object.keys(combinators)\n        .sort((a, b) => COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b]);\n\n    while (combinators.length > 0) {\n        combinator = combinators.shift();\n\n        let i = 0;\n        let subgroupStart = 0;\n\n        for (; i < terms.length; i++) {\n            const term = terms[i];\n\n            if (term.type === 'Combinator') {\n                if (term.value === combinator) {\n                    if (subgroupStart === -1) {\n                        subgroupStart = i - 1;\n                    }\n                    terms.splice(i, 1);\n                    i--;\n                } else {\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\n                        terms.splice(\n                            subgroupStart,\n                            i - subgroupStart,\n                            createGroup(terms.slice(subgroupStart, i), combinator)\n                        );\n                        i = subgroupStart + 1;\n                    }\n                    subgroupStart = -1;\n                }\n            }\n        }\n\n        if (subgroupStart !== -1 && combinators.length) {\n            terms.splice(\n                subgroupStart,\n                i - subgroupStart,\n                createGroup(terms.slice(subgroupStart, i), combinator)\n            );\n        }\n    }\n\n    return combinator;\n}\n\nfunction readImplicitGroup(tokenizer) {\n    const terms = [];\n    const combinators = {};\n    let token;\n    let prevToken = null;\n    let prevTokenPos = tokenizer.pos;\n\n    while (token = peek(tokenizer)) {\n        if (token.type !== 'Spaces') {\n            if (token.type === 'Combinator') {\n                // check for combinator in group beginning and double combinator sequence\n                if (prevToken === null || prevToken.type === 'Combinator') {\n                    tokenizer.pos = prevTokenPos;\n                    tokenizer.error('Unexpected combinator');\n                }\n\n                combinators[token.value] = true;\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n                combinators[' '] = true;  // a b\n                terms.push({\n                    type: 'Combinator',\n                    value: ' '\n                });\n            }\n\n            terms.push(token);\n            prevToken = token;\n            prevTokenPos = tokenizer.pos;\n        }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n        tokenizer.pos -= prevTokenPos;\n        tokenizer.error('Unexpected combinator');\n    }\n\n    return {\n        type: 'Group',\n        terms,\n        combinator: regroupTerms(terms, combinators) || ' ',\n        disallowEmpty: false,\n        explicit: false\n    };\n}\n\nfunction readGroup(tokenizer) {\n    let result;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(tokenizer);\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    result.explicit = true;\n\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\n        tokenizer.pos++;\n        result.disallowEmpty = true;\n    }\n\n    return result;\n}\n\nfunction peek(tokenizer) {\n    let code = tokenizer.charCode();\n\n    if (code < 128 && NAME_CHAR[code] === 1) {\n        return readKeywordOrFunction(tokenizer);\n    }\n\n    switch (code) {\n        case RIGHTSQUAREBRACKET:\n            // don't eat, stop scan a group\n            break;\n\n        case LEFTSQUAREBRACKET:\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\n\n        case LESSTHANSIGN:\n            return tokenizer.nextCharCode() === APOSTROPHE\n                ? readProperty(tokenizer)\n                : readType(tokenizer);\n\n        case VERTICALLINE:\n            return {\n                type: 'Combinator',\n                value: tokenizer.substringToPos(\n                    tokenizer.pos + (tokenizer.nextCharCode() === VERTICALLINE ? 2 : 1)\n                )\n            };\n\n        case AMPERSAND:\n            tokenizer.pos++;\n            tokenizer.eat(AMPERSAND);\n\n            return {\n                type: 'Combinator',\n                value: '&&'\n            };\n\n        case COMMA:\n            tokenizer.pos++;\n            return {\n                type: 'Comma'\n            };\n\n        case APOSTROPHE:\n            return maybeMultiplied(tokenizer, {\n                type: 'String',\n                value: scanString(tokenizer)\n            });\n\n        case SPACE:\n        case TAB:\n        case N:\n        case R:\n        case F:\n            return {\n                type: 'Spaces',\n                value: scanSpaces(tokenizer)\n            };\n\n        case COMMERCIALAT:\n            code = tokenizer.nextCharCode();\n\n            if (code < 128 && NAME_CHAR[code] === 1) {\n                tokenizer.pos++;\n                return {\n                    type: 'AtKeyword',\n                    name: scanWord(tokenizer)\n                };\n            }\n\n            return maybeToken(tokenizer);\n\n        case ASTERISK:\n        case PLUSSIGN:\n        case QUESTIONMARK:\n        case NUMBERSIGN:\n        case EXCLAMATIONMARK:\n            // prohibited tokens (used as a multiplier start)\n            break;\n\n        case LEFTCURLYBRACKET:\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n            // check next char isn't a number, because it's likely a disjoined multiplier\n            code = tokenizer.nextCharCode();\n\n            if (code < 48 || code > 57) {\n                return maybeToken(tokenizer);\n            }\n\n            break;\n\n        default:\n            return maybeToken(tokenizer);\n    }\n}\n\nfunction parse(source) {\n    const tokenizer$1 = new tokenizer.Tokenizer(source);\n    const result = readImplicitGroup(tokenizer$1);\n\n    if (tokenizer$1.pos !== source.length) {\n        tokenizer$1.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n        return result.terms[0];\n    }\n\n    return result;\n}\n\nexports.parse = parse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/definition-syntax/parse.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/definition-syntax/tokenizer.cjs":
/*!*******************************************************************!*\
  !*** ./node_modules/css-tree/cjs/definition-syntax/tokenizer.cjs ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst _SyntaxError = __webpack_require__(/*! ./SyntaxError.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs\");\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\n\nclass Tokenizer {\n    constructor(str) {\n        this.str = str;\n        this.pos = 0;\n    }\n    charCodeAt(pos) {\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    }\n    charCode() {\n        return this.charCodeAt(this.pos);\n    }\n    nextCharCode() {\n        return this.charCodeAt(this.pos + 1);\n    }\n    nextNonWsCode(pos) {\n        return this.charCodeAt(this.findWsEnd(pos));\n    }\n    findWsEnd(pos) {\n        for (; pos < this.str.length; pos++) {\n            const code = this.str.charCodeAt(pos);\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n                break;\n            }\n        }\n\n        return pos;\n    }\n    substringToPos(end) {\n        return this.str.substring(this.pos, this.pos = end);\n    }\n    eat(code) {\n        if (this.charCode() !== code) {\n            this.error('Expect `' + String.fromCharCode(code) + '`');\n        }\n\n        this.pos++;\n    }\n    peek() {\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    }\n    error(message) {\n        throw new _SyntaxError.SyntaxError(message, this.str, this.pos);\n    }\n}\n\nexports.Tokenizer = Tokenizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2RlZmluaXRpb24tc3ludGF4L3Rva2VuaXplci5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2RlZmluaXRpb24tc3ludGF4L3Rva2VuaXplci5janM/OWE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IF9TeW50YXhFcnJvciA9IHJlcXVpcmUoJy4vU3ludGF4RXJyb3IuY2pzJyk7XG5cbmNvbnN0IFRBQiA9IDk7XG5jb25zdCBOID0gMTA7XG5jb25zdCBGID0gMTI7XG5jb25zdCBSID0gMTM7XG5jb25zdCBTUEFDRSA9IDMyO1xuXG5jbGFzcyBUb2tlbml6ZXIge1xuICAgIGNvbnN0cnVjdG9yKHN0cikge1xuICAgICAgICB0aGlzLnN0ciA9IHN0cjtcbiAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgIH1cbiAgICBjaGFyQ29kZUF0KHBvcykge1xuICAgICAgICByZXR1cm4gcG9zIDwgdGhpcy5zdHIubGVuZ3RoID8gdGhpcy5zdHIuY2hhckNvZGVBdChwb3MpIDogMDtcbiAgICB9XG4gICAgY2hhckNvZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYXJDb2RlQXQodGhpcy5wb3MpO1xuICAgIH1cbiAgICBuZXh0Q2hhckNvZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYXJDb2RlQXQodGhpcy5wb3MgKyAxKTtcbiAgICB9XG4gICAgbmV4dE5vbldzQ29kZShwb3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hhckNvZGVBdCh0aGlzLmZpbmRXc0VuZChwb3MpKTtcbiAgICB9XG4gICAgZmluZFdzRW5kKHBvcykge1xuICAgICAgICBmb3IgKDsgcG9zIDwgdGhpcy5zdHIubGVuZ3RoOyBwb3MrKykge1xuICAgICAgICAgICAgY29uc3QgY29kZSA9IHRoaXMuc3RyLmNoYXJDb2RlQXQocG9zKTtcbiAgICAgICAgICAgIGlmIChjb2RlICE9PSBSICYmIGNvZGUgIT09IE4gJiYgY29kZSAhPT0gRiAmJiBjb2RlICE9PSBTUEFDRSAmJiBjb2RlICE9PSBUQUIpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBwb3M7XG4gICAgfVxuICAgIHN1YnN0cmluZ1RvUG9zKGVuZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdHIuc3Vic3RyaW5nKHRoaXMucG9zLCB0aGlzLnBvcyA9IGVuZCk7XG4gICAgfVxuICAgIGVhdChjb2RlKSB7XG4gICAgICAgIGlmICh0aGlzLmNoYXJDb2RlKCkgIT09IGNvZGUpIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IoJ0V4cGVjdCBgJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSkgKyAnYCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5wb3MrKztcbiAgICB9XG4gICAgcGVlaygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zIDwgdGhpcy5zdHIubGVuZ3RoID8gdGhpcy5zdHIuY2hhckF0KHRoaXMucG9zKyspIDogJyc7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IF9TeW50YXhFcnJvci5TeW50YXhFcnJvcihtZXNzYWdlLCB0aGlzLnN0ciwgdGhpcy5wb3MpO1xuICAgIH1cbn1cblxuZXhwb3J0cy5Ub2tlbml6ZXIgPSBUb2tlbml6ZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/definition-syntax/tokenizer.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/definition-syntax/walk.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/definition-syntax/walk.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction walk(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    let enter = noop;\n    let leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node);\n}\n\nexports.walk = walk;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2RlZmluaXRpb24tc3ludGF4L3dhbGsuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9kZWZpbml0aW9uLXN5bnRheC93YWxrLmNqcz9iOGY4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3Qgbm9vcCA9IGZ1bmN0aW9uKCkge307XG5cbmZ1bmN0aW9uIGVuc3VyZUZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyA/IHZhbHVlIDogbm9vcDtcbn1cblxuZnVuY3Rpb24gd2Fsayhub2RlLCBvcHRpb25zLCBjb250ZXh0KSB7XG4gICAgZnVuY3Rpb24gd2Fsayhub2RlKSB7XG4gICAgICAgIGVudGVyLmNhbGwoY29udGV4dCwgbm9kZSk7XG5cbiAgICAgICAgc3dpdGNoIChub2RlLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ0dyb3VwJzpcbiAgICAgICAgICAgICAgICBub2RlLnRlcm1zLmZvckVhY2god2Fsayk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgJ011bHRpcGxpZXInOlxuICAgICAgICAgICAgICAgIHdhbGsobm9kZS50ZXJtKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAnVHlwZSc6XG4gICAgICAgICAgICBjYXNlICdQcm9wZXJ0eSc6XG4gICAgICAgICAgICBjYXNlICdLZXl3b3JkJzpcbiAgICAgICAgICAgIGNhc2UgJ0F0S2V5d29yZCc6XG4gICAgICAgICAgICBjYXNlICdGdW5jdGlvbic6XG4gICAgICAgICAgICBjYXNlICdTdHJpbmcnOlxuICAgICAgICAgICAgY2FzZSAnVG9rZW4nOlxuICAgICAgICAgICAgY2FzZSAnQ29tbWEnOlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biB0eXBlOiAnICsgbm9kZS50eXBlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxlYXZlLmNhbGwoY29udGV4dCwgbm9kZSk7XG4gICAgfVxuXG4gICAgbGV0IGVudGVyID0gbm9vcDtcbiAgICBsZXQgbGVhdmUgPSBub29wO1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGVudGVyID0gb3B0aW9ucztcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMpIHtcbiAgICAgICAgZW50ZXIgPSBlbnN1cmVGdW5jdGlvbihvcHRpb25zLmVudGVyKTtcbiAgICAgICAgbGVhdmUgPSBlbnN1cmVGdW5jdGlvbihvcHRpb25zLmxlYXZlKTtcbiAgICB9XG5cbiAgICBpZiAoZW50ZXIgPT09IG5vb3AgJiYgbGVhdmUgPT09IG5vb3ApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOZWl0aGVyIGBlbnRlcmAgbm9yIGBsZWF2ZWAgd2Fsa2VyIGhhbmRsZXIgaXMgc2V0IG9yIGJvdGggYXJlblxcJ3QgYSBmdW5jdGlvbicpO1xuICAgIH1cblxuICAgIHdhbGsobm9kZSk7XG59XG5cbmV4cG9ydHMud2FsayA9IHdhbGs7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/definition-syntax/walk.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/generator/create.cjs":
/*!********************************************************!*\
  !*** ./node_modules/css-tree/cjs/generator/create.cjs ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst index = __webpack_require__(/*! ../tokenizer/index.cjs */ \"./node_modules/css-tree/cjs/tokenizer/index.cjs\");\nconst sourceMap = __webpack_require__(/*! ./sourceMap.cjs */ \"./node_modules/css-tree/cjs/generator/sourceMap.cjs\");\nconst tokenBefore = __webpack_require__(/*! ./token-before.cjs */ \"./node_modules/css-tree/cjs/generator/token-before.cjs\");\nconst types = __webpack_require__(/*! ../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n\nconst REVERSESOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nfunction processChildren(node, delimeter) {\n    if (typeof delimeter === 'function') {\n        let prev = null;\n\n        node.children.forEach(node => {\n            if (prev !== null) {\n                delimeter.call(this, prev);\n            }\n\n            this.node(node);\n            prev = node;\n        });\n\n        return;\n    }\n\n    node.children.forEach(this.node, this);\n}\n\nfunction processChunk(chunk) {\n    index.tokenize(chunk, (type, start, end) => {\n        this.token(type, chunk.slice(start, end));\n    });\n}\n\nfunction createGenerator(config) {\n    const types$1 = new Map();\n\n    for (let name in config.node) {\n        types$1.set(name, config.node[name].generate);\n    }\n\n    return function(node, options) {\n        let buffer = '';\n        let prevCode = 0;\n        let handlers = {\n            node(node) {\n                if (types$1.has(node.type)) {\n                    types$1.get(node.type).call(publicApi, node);\n                } else {\n                    throw new Error('Unknown node type: ' + node.type);\n                }\n            },\n            tokenBefore: tokenBefore.safe,\n            token(type, value) {\n                prevCode = this.tokenBefore(prevCode, type, value);\n\n                this.emit(value, type, false);\n\n                if (type === types.Delim && value.charCodeAt(0) === REVERSESOLIDUS) {\n                    this.emit('\\n', types.WhiteSpace, true);\n                }\n            },\n            emit(value) {\n                buffer += value;\n            },\n            result() {\n                return buffer;\n            }\n        };\n\n        if (options) {\n            if (typeof options.decorator === 'function') {\n                handlers = options.decorator(handlers);\n            }\n\n            if (options.sourceMap) {\n                handlers = sourceMap.generateSourceMap(handlers);\n            }\n\n            if (options.mode in tokenBefore) {\n                handlers.tokenBefore = tokenBefore[options.mode];\n            }\n        }\n\n        const publicApi = {\n            node: (node) => handlers.node(node),\n            children: processChildren,\n            token: (type, value) => handlers.token(type, value),\n            tokenize: processChunk\n        };\n\n        handlers.node(node);\n\n        return handlers.result();\n    };\n}\n\nexports.createGenerator = createGenerator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2dlbmVyYXRvci9jcmVhdGUuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9nZW5lcmF0b3IvY3JlYXRlLmNqcz9jOGY3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgaW5kZXggPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvaW5kZXguY2pzJyk7XG5jb25zdCBzb3VyY2VNYXAgPSByZXF1aXJlKCcuL3NvdXJjZU1hcC5janMnKTtcbmNvbnN0IHRva2VuQmVmb3JlID0gcmVxdWlyZSgnLi90b2tlbi1iZWZvcmUuY2pzJyk7XG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcblxuY29uc3QgUkVWRVJTRVNPTElEVVMgPSAweDAwNWM7IC8vIFUrMDA1QyBSRVZFUlNFIFNPTElEVVMgKFxcKVxuXG5mdW5jdGlvbiBwcm9jZXNzQ2hpbGRyZW4obm9kZSwgZGVsaW1ldGVyKSB7XG4gICAgaWYgKHR5cGVvZiBkZWxpbWV0ZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgbGV0IHByZXYgPSBudWxsO1xuXG4gICAgICAgIG5vZGUuY2hpbGRyZW4uZm9yRWFjaChub2RlID0+IHtcbiAgICAgICAgICAgIGlmIChwcmV2ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZGVsaW1ldGVyLmNhbGwodGhpcywgcHJldik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMubm9kZShub2RlKTtcbiAgICAgICAgICAgIHByZXYgPSBub2RlO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbm9kZS5jaGlsZHJlbi5mb3JFYWNoKHRoaXMubm9kZSwgdGhpcyk7XG59XG5cbmZ1bmN0aW9uIHByb2Nlc3NDaHVuayhjaHVuaykge1xuICAgIGluZGV4LnRva2VuaXplKGNodW5rLCAodHlwZSwgc3RhcnQsIGVuZCkgPT4ge1xuICAgICAgICB0aGlzLnRva2VuKHR5cGUsIGNodW5rLnNsaWNlKHN0YXJ0LCBlbmQpKTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlR2VuZXJhdG9yKGNvbmZpZykge1xuICAgIGNvbnN0IHR5cGVzJDEgPSBuZXcgTWFwKCk7XG5cbiAgICBmb3IgKGxldCBuYW1lIGluIGNvbmZpZy5ub2RlKSB7XG4gICAgICAgIHR5cGVzJDEuc2V0KG5hbWUsIGNvbmZpZy5ub2RlW25hbWVdLmdlbmVyYXRlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24obm9kZSwgb3B0aW9ucykge1xuICAgICAgICBsZXQgYnVmZmVyID0gJyc7XG4gICAgICAgIGxldCBwcmV2Q29kZSA9IDA7XG4gICAgICAgIGxldCBoYW5kbGVycyA9IHtcbiAgICAgICAgICAgIG5vZGUobm9kZSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlcyQxLmhhcyhub2RlLnR5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGVzJDEuZ2V0KG5vZGUudHlwZSkuY2FsbChwdWJsaWNBcGksIG5vZGUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBub2RlIHR5cGU6ICcgKyBub2RlLnR5cGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0b2tlbkJlZm9yZTogdG9rZW5CZWZvcmUuc2FmZSxcbiAgICAgICAgICAgIHRva2VuKHR5cGUsIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgcHJldkNvZGUgPSB0aGlzLnRva2VuQmVmb3JlKHByZXZDb2RlLCB0eXBlLCB2YWx1ZSk7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmVtaXQodmFsdWUsIHR5cGUsIGZhbHNlKTtcblxuICAgICAgICAgICAgICAgIGlmICh0eXBlID09PSB0eXBlcy5EZWxpbSAmJiB2YWx1ZS5jaGFyQ29kZUF0KDApID09PSBSRVZFUlNFU09MSURVUykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXQoJ1xcbicsIHR5cGVzLldoaXRlU3BhY2UsIHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbWl0KHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgYnVmZmVyICs9IHZhbHVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc3VsdCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYnVmZmVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChvcHRpb25zKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMuZGVjb3JhdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlcnMgPSBvcHRpb25zLmRlY29yYXRvcihoYW5kbGVycyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChvcHRpb25zLnNvdXJjZU1hcCkge1xuICAgICAgICAgICAgICAgIGhhbmRsZXJzID0gc291cmNlTWFwLmdlbmVyYXRlU291cmNlTWFwKGhhbmRsZXJzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG9wdGlvbnMubW9kZSBpbiB0b2tlbkJlZm9yZSkge1xuICAgICAgICAgICAgICAgIGhhbmRsZXJzLnRva2VuQmVmb3JlID0gdG9rZW5CZWZvcmVbb3B0aW9ucy5tb2RlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHB1YmxpY0FwaSA9IHtcbiAgICAgICAgICAgIG5vZGU6IChub2RlKSA9PiBoYW5kbGVycy5ub2RlKG5vZGUpLFxuICAgICAgICAgICAgY2hpbGRyZW46IHByb2Nlc3NDaGlsZHJlbixcbiAgICAgICAgICAgIHRva2VuOiAodHlwZSwgdmFsdWUpID0+IGhhbmRsZXJzLnRva2VuKHR5cGUsIHZhbHVlKSxcbiAgICAgICAgICAgIHRva2VuaXplOiBwcm9jZXNzQ2h1bmtcbiAgICAgICAgfTtcblxuICAgICAgICBoYW5kbGVycy5ub2RlKG5vZGUpO1xuXG4gICAgICAgIHJldHVybiBoYW5kbGVycy5yZXN1bHQoKTtcbiAgICB9O1xufVxuXG5leHBvcnRzLmNyZWF0ZUdlbmVyYXRvciA9IGNyZWF0ZUdlbmVyYXRvcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/generator/create.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/generator/sourceMap.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/css-tree/cjs/generator/sourceMap.cjs ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst sourceMapGenerator_js = __webpack_require__(/*! source-map/lib/source-map-generator.js */ \"./node_modules/source-map/lib/source-map-generator.js\");\n\nconst trackNodes = new Set(['Atrule', 'Selector', 'Declaration']);\n\nfunction generateSourceMap(handlers) {\n    const map = new sourceMapGenerator_js.SourceMapGenerator();\n    const generated = {\n        line: 1,\n        column: 0\n    };\n    const original = {\n        line: 0, // should be zero to add first mapping\n        column: 0\n    };\n    const activatedGenerated = {\n        line: 1,\n        column: 0\n    };\n    const activatedMapping = {\n        generated: activatedGenerated\n    };\n    let line = 1;\n    let column = 0;\n    let sourceMappingActive = false;\n\n    const origHandlersNode = handlers.node;\n    handlers.node = function(node) {\n        if (node.loc && node.loc.start && trackNodes.has(node.type)) {\n            const nodeLine = node.loc.start.line;\n            const nodeColumn = node.loc.start.column - 1;\n\n            if (original.line !== nodeLine ||\n                original.column !== nodeColumn) {\n                original.line = nodeLine;\n                original.column = nodeColumn;\n\n                generated.line = line;\n                generated.column = column;\n\n                if (sourceMappingActive) {\n                    sourceMappingActive = false;\n                    if (generated.line !== activatedGenerated.line ||\n                        generated.column !== activatedGenerated.column) {\n                        map.addMapping(activatedMapping);\n                    }\n                }\n\n                sourceMappingActive = true;\n                map.addMapping({\n                    source: node.loc.source,\n                    original,\n                    generated\n                });\n            }\n        }\n\n        origHandlersNode.call(this, node);\n\n        if (sourceMappingActive && trackNodes.has(node.type)) {\n            activatedGenerated.line = line;\n            activatedGenerated.column = column;\n        }\n    };\n\n    const origHandlersEmit = handlers.emit;\n    handlers.emit = function(value, type, auto) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 10) { // \\n\n                line++;\n                column = 0;\n            } else {\n                column++;\n            }\n        }\n\n        origHandlersEmit(value, type, auto);\n    };\n\n    const origHandlersResult = handlers.result;\n    handlers.result = function() {\n        if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n        }\n\n        return {\n            css: origHandlersResult(),\n            map\n        };\n    };\n\n    return handlers;\n}\n\nexports.generateSourceMap = generateSourceMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2dlbmVyYXRvci9zb3VyY2VNYXAuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9nZW5lcmF0b3Ivc291cmNlTWFwLmNqcz8yMzBhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3Qgc291cmNlTWFwR2VuZXJhdG9yX2pzID0gcmVxdWlyZSgnc291cmNlLW1hcC9saWIvc291cmNlLW1hcC1nZW5lcmF0b3IuanMnKTtcblxuY29uc3QgdHJhY2tOb2RlcyA9IG5ldyBTZXQoWydBdHJ1bGUnLCAnU2VsZWN0b3InLCAnRGVjbGFyYXRpb24nXSk7XG5cbmZ1bmN0aW9uIGdlbmVyYXRlU291cmNlTWFwKGhhbmRsZXJzKSB7XG4gICAgY29uc3QgbWFwID0gbmV3IHNvdXJjZU1hcEdlbmVyYXRvcl9qcy5Tb3VyY2VNYXBHZW5lcmF0b3IoKTtcbiAgICBjb25zdCBnZW5lcmF0ZWQgPSB7XG4gICAgICAgIGxpbmU6IDEsXG4gICAgICAgIGNvbHVtbjogMFxuICAgIH07XG4gICAgY29uc3Qgb3JpZ2luYWwgPSB7XG4gICAgICAgIGxpbmU6IDAsIC8vIHNob3VsZCBiZSB6ZXJvIHRvIGFkZCBmaXJzdCBtYXBwaW5nXG4gICAgICAgIGNvbHVtbjogMFxuICAgIH07XG4gICAgY29uc3QgYWN0aXZhdGVkR2VuZXJhdGVkID0ge1xuICAgICAgICBsaW5lOiAxLFxuICAgICAgICBjb2x1bW46IDBcbiAgICB9O1xuICAgIGNvbnN0IGFjdGl2YXRlZE1hcHBpbmcgPSB7XG4gICAgICAgIGdlbmVyYXRlZDogYWN0aXZhdGVkR2VuZXJhdGVkXG4gICAgfTtcbiAgICBsZXQgbGluZSA9IDE7XG4gICAgbGV0IGNvbHVtbiA9IDA7XG4gICAgbGV0IHNvdXJjZU1hcHBpbmdBY3RpdmUgPSBmYWxzZTtcblxuICAgIGNvbnN0IG9yaWdIYW5kbGVyc05vZGUgPSBoYW5kbGVycy5ub2RlO1xuICAgIGhhbmRsZXJzLm5vZGUgPSBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIGlmIChub2RlLmxvYyAmJiBub2RlLmxvYy5zdGFydCAmJiB0cmFja05vZGVzLmhhcyhub2RlLnR5cGUpKSB7XG4gICAgICAgICAgICBjb25zdCBub2RlTGluZSA9IG5vZGUubG9jLnN0YXJ0LmxpbmU7XG4gICAgICAgICAgICBjb25zdCBub2RlQ29sdW1uID0gbm9kZS5sb2Muc3RhcnQuY29sdW1uIC0gMTtcblxuICAgICAgICAgICAgaWYgKG9yaWdpbmFsLmxpbmUgIT09IG5vZGVMaW5lIHx8XG4gICAgICAgICAgICAgICAgb3JpZ2luYWwuY29sdW1uICE9PSBub2RlQ29sdW1uKSB7XG4gICAgICAgICAgICAgICAgb3JpZ2luYWwubGluZSA9IG5vZGVMaW5lO1xuICAgICAgICAgICAgICAgIG9yaWdpbmFsLmNvbHVtbiA9IG5vZGVDb2x1bW47XG5cbiAgICAgICAgICAgICAgICBnZW5lcmF0ZWQubGluZSA9IGxpbmU7XG4gICAgICAgICAgICAgICAgZ2VuZXJhdGVkLmNvbHVtbiA9IGNvbHVtbjtcblxuICAgICAgICAgICAgICAgIGlmIChzb3VyY2VNYXBwaW5nQWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZU1hcHBpbmdBY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGdlbmVyYXRlZC5saW5lICE9PSBhY3RpdmF0ZWRHZW5lcmF0ZWQubGluZSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVkLmNvbHVtbiAhPT0gYWN0aXZhdGVkR2VuZXJhdGVkLmNvbHVtbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFwLmFkZE1hcHBpbmcoYWN0aXZhdGVkTWFwcGluZyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBzb3VyY2VNYXBwaW5nQWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBtYXAuYWRkTWFwcGluZyh7XG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZTogbm9kZS5sb2Muc291cmNlLFxuICAgICAgICAgICAgICAgICAgICBvcmlnaW5hbCxcbiAgICAgICAgICAgICAgICAgICAgZ2VuZXJhdGVkXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBvcmlnSGFuZGxlcnNOb2RlLmNhbGwodGhpcywgbm9kZSk7XG5cbiAgICAgICAgaWYgKHNvdXJjZU1hcHBpbmdBY3RpdmUgJiYgdHJhY2tOb2Rlcy5oYXMobm9kZS50eXBlKSkge1xuICAgICAgICAgICAgYWN0aXZhdGVkR2VuZXJhdGVkLmxpbmUgPSBsaW5lO1xuICAgICAgICAgICAgYWN0aXZhdGVkR2VuZXJhdGVkLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBvcmlnSGFuZGxlcnNFbWl0ID0gaGFuZGxlcnMuZW1pdDtcbiAgICBoYW5kbGVycy5lbWl0ID0gZnVuY3Rpb24odmFsdWUsIHR5cGUsIGF1dG8pIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHZhbHVlLmNoYXJDb2RlQXQoaSkgPT09IDEwKSB7IC8vIFxcblxuICAgICAgICAgICAgICAgIGxpbmUrKztcbiAgICAgICAgICAgICAgICBjb2x1bW4gPSAwO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb2x1bW4rKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIG9yaWdIYW5kbGVyc0VtaXQodmFsdWUsIHR5cGUsIGF1dG8pO1xuICAgIH07XG5cbiAgICBjb25zdCBvcmlnSGFuZGxlcnNSZXN1bHQgPSBoYW5kbGVycy5yZXN1bHQ7XG4gICAgaGFuZGxlcnMucmVzdWx0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChzb3VyY2VNYXBwaW5nQWN0aXZlKSB7XG4gICAgICAgICAgICBtYXAuYWRkTWFwcGluZyhhY3RpdmF0ZWRNYXBwaW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjc3M6IG9yaWdIYW5kbGVyc1Jlc3VsdCgpLFxuICAgICAgICAgICAgbWFwXG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIHJldHVybiBoYW5kbGVycztcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZVNvdXJjZU1hcCA9IGdlbmVyYXRlU291cmNlTWFwO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/generator/sourceMap.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/generator/token-before.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/generator/token-before.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n\nconst code = (type, value) => {\n    if (type === types.Delim) {\n        type = value;\n    }\n\n    if (typeof type === 'string') {\n        const charCode = type.charCodeAt(0);\n        return charCode > 0x7F ? 0x8000 : charCode << 8;\n    }\n\n    return type;\n};\n\n// https://www.w3.org/TR/css-syntax-3/#serialization\n// The only requirement for serialization is that it must \"round-trip\" with parsing,\n// that is, parsing the stylesheet must produce the same data structures as parsing,\n// serializing, and parsing again, except for consecutive <whitespace-token>s,\n// which may be collapsed into a single token.\n\nconst specPairs = [\n    [types.Ident, types.Ident],\n    [types.Ident, types.Function],\n    [types.Ident, types.Url],\n    [types.Ident, types.BadUrl],\n    [types.Ident, '-'],\n    [types.Ident, types.Number],\n    [types.Ident, types.Percentage],\n    [types.Ident, types.Dimension],\n    [types.Ident, types.CDC],\n    [types.Ident, types.LeftParenthesis],\n\n    [types.AtKeyword, types.Ident],\n    [types.AtKeyword, types.Function],\n    [types.AtKeyword, types.Url],\n    [types.AtKeyword, types.BadUrl],\n    [types.AtKeyword, '-'],\n    [types.AtKeyword, types.Number],\n    [types.AtKeyword, types.Percentage],\n    [types.AtKeyword, types.Dimension],\n    [types.AtKeyword, types.CDC],\n\n    [types.Hash, types.Ident],\n    [types.Hash, types.Function],\n    [types.Hash, types.Url],\n    [types.Hash, types.BadUrl],\n    [types.Hash, '-'],\n    [types.Hash, types.Number],\n    [types.Hash, types.Percentage],\n    [types.Hash, types.Dimension],\n    [types.Hash, types.CDC],\n\n    [types.Dimension, types.Ident],\n    [types.Dimension, types.Function],\n    [types.Dimension, types.Url],\n    [types.Dimension, types.BadUrl],\n    [types.Dimension, '-'],\n    [types.Dimension, types.Number],\n    [types.Dimension, types.Percentage],\n    [types.Dimension, types.Dimension],\n    [types.Dimension, types.CDC],\n\n    ['#', types.Ident],\n    ['#', types.Function],\n    ['#', types.Url],\n    ['#', types.BadUrl],\n    ['#', '-'],\n    ['#', types.Number],\n    ['#', types.Percentage],\n    ['#', types.Dimension],\n\n    ['-', types.Ident],\n    ['-', types.Function],\n    ['-', types.Url],\n    ['-', types.BadUrl],\n    ['-', '-'],\n    ['-', types.Number],\n    ['-', types.Percentage],\n    ['-', types.Dimension],\n\n    [types.Number, types.Ident],\n    [types.Number, types.Function],\n    [types.Number, types.Url],\n    [types.Number, types.BadUrl],\n    [types.Number, types.Number],\n    [types.Number, types.Percentage],\n    [types.Number, types.Dimension],\n\n    ['@', types.Ident],\n    ['@', types.Function],\n    ['@', types.Url],\n    ['@', types.BadUrl],\n    ['@', '-'],\n\n    ['.', types.Number],\n    ['.', types.Percentage],\n    ['.', types.Dimension],\n\n    ['+', types.Number],\n    ['+', types.Percentage],\n    ['+', types.Dimension],\n\n    ['/', '*']\n];\nconst safePairs = specPairs.concat([\n    [types.AtKeyword, types.LeftParenthesis],\n    [types.AtKeyword, types.String],\n    [types.AtKeyword, types.Colon],\n\n    [types.RightParenthesis, types.Ident],\n    [types.RightParenthesis, types.Function],\n    [types.RightParenthesis, types.Url],\n\n    [types.Url, types.Ident],\n    [types.Url, types.Function],\n    [types.Url, types.Url]\n]);\n\nfunction createMap(pairs) {\n    const isWhiteSpaceRequired = new Set(\n        pairs.map(([prev, next]) => (code(prev) << 16 | code(next)))\n    );\n\n    return function(prevCode, type, value) {\n        const nextCode = code(type, value);\n        const nextCharCode = value.charCodeAt(0);\n        const emitWs = nextCharCode === HYPHENMINUS || nextCharCode === PLUSSIGN\n            ? isWhiteSpaceRequired.has(prevCode << 16 | nextCharCode << 8)\n            : isWhiteSpaceRequired.has(prevCode << 16 | nextCode);\n\n        if (emitWs) {\n            this.emit(' ', types.WhiteSpace, true);\n        }\n\n        return nextCode;\n    };\n}\n\nconst spec = createMap(specPairs);\nconst safe = createMap(safePairs);\n\nexports.safe = safe;\nexports.spec = spec;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2dlbmVyYXRvci90b2tlbi1iZWZvcmUuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9nZW5lcmF0b3IvdG9rZW4tYmVmb3JlLmNqcz85OWU2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBQTFVTU0lHTiA9IDB4MDAyQjsgICAgLy8gVSswMDJCIFBMVVMgU0lHTiAoKylcbmNvbnN0IEhZUEhFTk1JTlVTID0gMHgwMDJEOyAvLyBVKzAwMkQgSFlQSEVOLU1JTlVTICgtKVxuXG5jb25zdCBjb2RlID0gKHR5cGUsIHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGUgPT09IHR5cGVzLkRlbGltKSB7XG4gICAgICAgIHR5cGUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IGNoYXJDb2RlID0gdHlwZS5jaGFyQ29kZUF0KDApO1xuICAgICAgICByZXR1cm4gY2hhckNvZGUgPiAweDdGID8gMHg4MDAwIDogY2hhckNvZGUgPDwgODtcbiAgICB9XG5cbiAgICByZXR1cm4gdHlwZTtcbn07XG5cbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9jc3Mtc3ludGF4LTMvI3NlcmlhbGl6YXRpb25cbi8vIFRoZSBvbmx5IHJlcXVpcmVtZW50IGZvciBzZXJpYWxpemF0aW9uIGlzIHRoYXQgaXQgbXVzdCBcInJvdW5kLXRyaXBcIiB3aXRoIHBhcnNpbmcsXG4vLyB0aGF0IGlzLCBwYXJzaW5nIHRoZSBzdHlsZXNoZWV0IG11c3QgcHJvZHVjZSB0aGUgc2FtZSBkYXRhIHN0cnVjdHVyZXMgYXMgcGFyc2luZyxcbi8vIHNlcmlhbGl6aW5nLCBhbmQgcGFyc2luZyBhZ2FpbiwgZXhjZXB0IGZvciBjb25zZWN1dGl2ZSA8d2hpdGVzcGFjZS10b2tlbj5zLFxuLy8gd2hpY2ggbWF5IGJlIGNvbGxhcHNlZCBpbnRvIGEgc2luZ2xlIHRva2VuLlxuXG5jb25zdCBzcGVjUGFpcnMgPSBbXG4gICAgW3R5cGVzLklkZW50LCB0eXBlcy5JZGVudF0sXG4gICAgW3R5cGVzLklkZW50LCB0eXBlcy5GdW5jdGlvbl0sXG4gICAgW3R5cGVzLklkZW50LCB0eXBlcy5VcmxdLFxuICAgIFt0eXBlcy5JZGVudCwgdHlwZXMuQmFkVXJsXSxcbiAgICBbdHlwZXMuSWRlbnQsICctJ10sXG4gICAgW3R5cGVzLklkZW50LCB0eXBlcy5OdW1iZXJdLFxuICAgIFt0eXBlcy5JZGVudCwgdHlwZXMuUGVyY2VudGFnZV0sXG4gICAgW3R5cGVzLklkZW50LCB0eXBlcy5EaW1lbnNpb25dLFxuICAgIFt0eXBlcy5JZGVudCwgdHlwZXMuQ0RDXSxcbiAgICBbdHlwZXMuSWRlbnQsIHR5cGVzLkxlZnRQYXJlbnRoZXNpc10sXG5cbiAgICBbdHlwZXMuQXRLZXl3b3JkLCB0eXBlcy5JZGVudF0sXG4gICAgW3R5cGVzLkF0S2V5d29yZCwgdHlwZXMuRnVuY3Rpb25dLFxuICAgIFt0eXBlcy5BdEtleXdvcmQsIHR5cGVzLlVybF0sXG4gICAgW3R5cGVzLkF0S2V5d29yZCwgdHlwZXMuQmFkVXJsXSxcbiAgICBbdHlwZXMuQXRLZXl3b3JkLCAnLSddLFxuICAgIFt0eXBlcy5BdEtleXdvcmQsIHR5cGVzLk51bWJlcl0sXG4gICAgW3R5cGVzLkF0S2V5d29yZCwgdHlwZXMuUGVyY2VudGFnZV0sXG4gICAgW3R5cGVzLkF0S2V5d29yZCwgdHlwZXMuRGltZW5zaW9uXSxcbiAgICBbdHlwZXMuQXRLZXl3b3JkLCB0eXBlcy5DRENdLFxuXG4gICAgW3R5cGVzLkhhc2gsIHR5cGVzLklkZW50XSxcbiAgICBbdHlwZXMuSGFzaCwgdHlwZXMuRnVuY3Rpb25dLFxuICAgIFt0eXBlcy5IYXNoLCB0eXBlcy5VcmxdLFxuICAgIFt0eXBlcy5IYXNoLCB0eXBlcy5CYWRVcmxdLFxuICAgIFt0eXBlcy5IYXNoLCAnLSddLFxuICAgIFt0eXBlcy5IYXNoLCB0eXBlcy5OdW1iZXJdLFxuICAgIFt0eXBlcy5IYXNoLCB0eXBlcy5QZXJjZW50YWdlXSxcbiAgICBbdHlwZXMuSGFzaCwgdHlwZXMuRGltZW5zaW9uXSxcbiAgICBbdHlwZXMuSGFzaCwgdHlwZXMuQ0RDXSxcblxuICAgIFt0eXBlcy5EaW1lbnNpb24sIHR5cGVzLklkZW50XSxcbiAgICBbdHlwZXMuRGltZW5zaW9uLCB0eXBlcy5GdW5jdGlvbl0sXG4gICAgW3R5cGVzLkRpbWVuc2lvbiwgdHlwZXMuVXJsXSxcbiAgICBbdHlwZXMuRGltZW5zaW9uLCB0eXBlcy5CYWRVcmxdLFxuICAgIFt0eXBlcy5EaW1lbnNpb24sICctJ10sXG4gICAgW3R5cGVzLkRpbWVuc2lvbiwgdHlwZXMuTnVtYmVyXSxcbiAgICBbdHlwZXMuRGltZW5zaW9uLCB0eXBlcy5QZXJjZW50YWdlXSxcbiAgICBbdHlwZXMuRGltZW5zaW9uLCB0eXBlcy5EaW1lbnNpb25dLFxuICAgIFt0eXBlcy5EaW1lbnNpb24sIHR5cGVzLkNEQ10sXG5cbiAgICBbJyMnLCB0eXBlcy5JZGVudF0sXG4gICAgWycjJywgdHlwZXMuRnVuY3Rpb25dLFxuICAgIFsnIycsIHR5cGVzLlVybF0sXG4gICAgWycjJywgdHlwZXMuQmFkVXJsXSxcbiAgICBbJyMnLCAnLSddLFxuICAgIFsnIycsIHR5cGVzLk51bWJlcl0sXG4gICAgWycjJywgdHlwZXMuUGVyY2VudGFnZV0sXG4gICAgWycjJywgdHlwZXMuRGltZW5zaW9uXSxcblxuICAgIFsnLScsIHR5cGVzLklkZW50XSxcbiAgICBbJy0nLCB0eXBlcy5GdW5jdGlvbl0sXG4gICAgWyctJywgdHlwZXMuVXJsXSxcbiAgICBbJy0nLCB0eXBlcy5CYWRVcmxdLFxuICAgIFsnLScsICctJ10sXG4gICAgWyctJywgdHlwZXMuTnVtYmVyXSxcbiAgICBbJy0nLCB0eXBlcy5QZXJjZW50YWdlXSxcbiAgICBbJy0nLCB0eXBlcy5EaW1lbnNpb25dLFxuXG4gICAgW3R5cGVzLk51bWJlciwgdHlwZXMuSWRlbnRdLFxuICAgIFt0eXBlcy5OdW1iZXIsIHR5cGVzLkZ1bmN0aW9uXSxcbiAgICBbdHlwZXMuTnVtYmVyLCB0eXBlcy5VcmxdLFxuICAgIFt0eXBlcy5OdW1iZXIsIHR5cGVzLkJhZFVybF0sXG4gICAgW3R5cGVzLk51bWJlciwgdHlwZXMuTnVtYmVyXSxcbiAgICBbdHlwZXMuTnVtYmVyLCB0eXBlcy5QZXJjZW50YWdlXSxcbiAgICBbdHlwZXMuTnVtYmVyLCB0eXBlcy5EaW1lbnNpb25dLFxuXG4gICAgWydAJywgdHlwZXMuSWRlbnRdLFxuICAgIFsnQCcsIHR5cGVzLkZ1bmN0aW9uXSxcbiAgICBbJ0AnLCB0eXBlcy5VcmxdLFxuICAgIFsnQCcsIHR5cGVzLkJhZFVybF0sXG4gICAgWydAJywgJy0nXSxcblxuICAgIFsnLicsIHR5cGVzLk51bWJlcl0sXG4gICAgWycuJywgdHlwZXMuUGVyY2VudGFnZV0sXG4gICAgWycuJywgdHlwZXMuRGltZW5zaW9uXSxcblxuICAgIFsnKycsIHR5cGVzLk51bWJlcl0sXG4gICAgWycrJywgdHlwZXMuUGVyY2VudGFnZV0sXG4gICAgWycrJywgdHlwZXMuRGltZW5zaW9uXSxcblxuICAgIFsnLycsICcqJ11cbl07XG5jb25zdCBzYWZlUGFpcnMgPSBzcGVjUGFpcnMuY29uY2F0KFtcbiAgICBbdHlwZXMuQXRLZXl3b3JkLCB0eXBlcy5MZWZ0UGFyZW50aGVzaXNdLFxuICAgIFt0eXBlcy5BdEtleXdvcmQsIHR5cGVzLlN0cmluZ10sXG4gICAgW3R5cGVzLkF0S2V5d29yZCwgdHlwZXMuQ29sb25dLFxuXG4gICAgW3R5cGVzLlJpZ2h0UGFyZW50aGVzaXMsIHR5cGVzLklkZW50XSxcbiAgICBbdHlwZXMuUmlnaHRQYXJlbnRoZXNpcywgdHlwZXMuRnVuY3Rpb25dLFxuICAgIFt0eXBlcy5SaWdodFBhcmVudGhlc2lzLCB0eXBlcy5VcmxdLFxuXG4gICAgW3R5cGVzLlVybCwgdHlwZXMuSWRlbnRdLFxuICAgIFt0eXBlcy5VcmwsIHR5cGVzLkZ1bmN0aW9uXSxcbiAgICBbdHlwZXMuVXJsLCB0eXBlcy5VcmxdXG5dKTtcblxuZnVuY3Rpb24gY3JlYXRlTWFwKHBhaXJzKSB7XG4gICAgY29uc3QgaXNXaGl0ZVNwYWNlUmVxdWlyZWQgPSBuZXcgU2V0KFxuICAgICAgICBwYWlycy5tYXAoKFtwcmV2LCBuZXh0XSkgPT4gKGNvZGUocHJldikgPDwgMTYgfCBjb2RlKG5leHQpKSlcbiAgICApO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKHByZXZDb2RlLCB0eXBlLCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBuZXh0Q29kZSA9IGNvZGUodHlwZSwgdmFsdWUpO1xuICAgICAgICBjb25zdCBuZXh0Q2hhckNvZGUgPSB2YWx1ZS5jaGFyQ29kZUF0KDApO1xuICAgICAgICBjb25zdCBlbWl0V3MgPSBuZXh0Q2hhckNvZGUgPT09IEhZUEhFTk1JTlVTIHx8IG5leHRDaGFyQ29kZSA9PT0gUExVU1NJR05cbiAgICAgICAgICAgID8gaXNXaGl0ZVNwYWNlUmVxdWlyZWQuaGFzKHByZXZDb2RlIDw8IDE2IHwgbmV4dENoYXJDb2RlIDw8IDgpXG4gICAgICAgICAgICA6IGlzV2hpdGVTcGFjZVJlcXVpcmVkLmhhcyhwcmV2Q29kZSA8PCAxNiB8IG5leHRDb2RlKTtcblxuICAgICAgICBpZiAoZW1pdFdzKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXQoJyAnLCB0eXBlcy5XaGl0ZVNwYWNlLCB0cnVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXh0Q29kZTtcbiAgICB9O1xufVxuXG5jb25zdCBzcGVjID0gY3JlYXRlTWFwKHNwZWNQYWlycyk7XG5jb25zdCBzYWZlID0gY3JlYXRlTWFwKHNhZmVQYWlycyk7XG5cbmV4cG9ydHMuc2FmZSA9IHNhZmU7XG5leHBvcnRzLnNwZWMgPSBzcGVjO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/generator/token-before.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/index.cjs":
/*!*********************************************!*\
  !*** ./node_modules/css-tree/cjs/index.cjs ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst index$1 = __webpack_require__(/*! ./syntax/index.cjs */ \"./node_modules/css-tree/cjs/syntax/index.cjs\");\nconst version = __webpack_require__(/*! ./version.cjs */ \"./node_modules/css-tree/dist/version.js\");\nconst create = __webpack_require__(/*! ./syntax/create.cjs */ \"./node_modules/css-tree/cjs/syntax/create.cjs\");\nconst List = __webpack_require__(/*! ./utils/List.cjs */ \"./node_modules/css-tree/cjs/utils/List.cjs\");\nconst Lexer = __webpack_require__(/*! ./lexer/Lexer.cjs */ \"./node_modules/css-tree/cjs/lexer/Lexer.cjs\");\nconst types = __webpack_require__(/*! ./tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ./tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst names = __webpack_require__(/*! ./tokenizer/names.cjs */ \"./node_modules/css-tree/cjs/tokenizer/names.cjs\");\nconst TokenStream = __webpack_require__(/*! ./tokenizer/TokenStream.cjs */ \"./node_modules/css-tree/cjs/tokenizer/TokenStream.cjs\");\nconst index = __webpack_require__(/*! ./definition-syntax/index.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/index.cjs\");\nconst clone = __webpack_require__(/*! ./utils/clone.cjs */ \"./node_modules/css-tree/cjs/utils/clone.cjs\");\nconst names$1 = __webpack_require__(/*! ./utils/names.cjs */ \"./node_modules/css-tree/cjs/utils/names.cjs\");\nconst ident = __webpack_require__(/*! ./utils/ident.cjs */ \"./node_modules/css-tree/cjs/utils/ident.cjs\");\nconst string = __webpack_require__(/*! ./utils/string.cjs */ \"./node_modules/css-tree/cjs/utils/string.cjs\");\nconst url = __webpack_require__(/*! ./utils/url.cjs */ \"./node_modules/css-tree/cjs/utils/url.cjs\");\n\nconst {\n    tokenize,\n    parse,\n    generate,\n    lexer,\n    createLexer,\n\n    walk,\n    find,\n    findLast,\n    findAll,\n\n    toPlainObject,\n    fromPlainObject,\n\n    fork\n} = index$1;\n\nexports.version = version.version;\nexports.createSyntax = create;\nexports.List = List.List;\nexports.Lexer = Lexer.Lexer;\nexports.tokenTypes = types;\nexports.tokenNames = names;\nexports.TokenStream = TokenStream.TokenStream;\nexports.definitionSyntax = index;\nexports.clone = clone.clone;\nexports.isCustomProperty = names$1.isCustomProperty;\nexports.keyword = names$1.keyword;\nexports.property = names$1.property;\nexports.vendorPrefix = names$1.vendorPrefix;\nexports.ident = ident;\nexports.string = string;\nexports.url = url;\nexports.createLexer = createLexer;\nexports.find = find;\nexports.findAll = findAll;\nexports.findLast = findLast;\nexports.fork = fork;\nexports.fromPlainObject = fromPlainObject;\nexports.generate = generate;\nexports.lexer = lexer;\nexports.parse = parse;\nexports.toPlainObject = toPlainObject;\nexports.tokenize = tokenize;\nexports.walk = walk;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2luZGV4LmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvaW5kZXguY2pzPzNmMmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbmRleCQxID0gcmVxdWlyZSgnLi9zeW50YXgvaW5kZXguY2pzJyk7XG5jb25zdCB2ZXJzaW9uID0gcmVxdWlyZSgnLi92ZXJzaW9uLmNqcycpO1xuY29uc3QgY3JlYXRlID0gcmVxdWlyZSgnLi9zeW50YXgvY3JlYXRlLmNqcycpO1xuY29uc3QgTGlzdCA9IHJlcXVpcmUoJy4vdXRpbHMvTGlzdC5janMnKTtcbmNvbnN0IExleGVyID0gcmVxdWlyZSgnLi9sZXhlci9MZXhlci5janMnKTtcbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5jb25zdCBuYW1lcyA9IHJlcXVpcmUoJy4vdG9rZW5pemVyL25hbWVzLmNqcycpO1xuY29uc3QgVG9rZW5TdHJlYW0gPSByZXF1aXJlKCcuL3Rva2VuaXplci9Ub2tlblN0cmVhbS5janMnKTtcbmNvbnN0IGluZGV4ID0gcmVxdWlyZSgnLi9kZWZpbml0aW9uLXN5bnRheC9pbmRleC5janMnKTtcbmNvbnN0IGNsb25lID0gcmVxdWlyZSgnLi91dGlscy9jbG9uZS5janMnKTtcbmNvbnN0IG5hbWVzJDEgPSByZXF1aXJlKCcuL3V0aWxzL25hbWVzLmNqcycpO1xuY29uc3QgaWRlbnQgPSByZXF1aXJlKCcuL3V0aWxzL2lkZW50LmNqcycpO1xuY29uc3Qgc3RyaW5nID0gcmVxdWlyZSgnLi91dGlscy9zdHJpbmcuY2pzJyk7XG5jb25zdCB1cmwgPSByZXF1aXJlKCcuL3V0aWxzL3VybC5janMnKTtcblxuY29uc3Qge1xuICAgIHRva2VuaXplLFxuICAgIHBhcnNlLFxuICAgIGdlbmVyYXRlLFxuICAgIGxleGVyLFxuICAgIGNyZWF0ZUxleGVyLFxuXG4gICAgd2FsayxcbiAgICBmaW5kLFxuICAgIGZpbmRMYXN0LFxuICAgIGZpbmRBbGwsXG5cbiAgICB0b1BsYWluT2JqZWN0LFxuICAgIGZyb21QbGFpbk9iamVjdCxcblxuICAgIGZvcmtcbn0gPSBpbmRleCQxO1xuXG5leHBvcnRzLnZlcnNpb24gPSB2ZXJzaW9uLnZlcnNpb247XG5leHBvcnRzLmNyZWF0ZVN5bnRheCA9IGNyZWF0ZTtcbmV4cG9ydHMuTGlzdCA9IExpc3QuTGlzdDtcbmV4cG9ydHMuTGV4ZXIgPSBMZXhlci5MZXhlcjtcbmV4cG9ydHMudG9rZW5UeXBlcyA9IHR5cGVzO1xuZXhwb3J0cy50b2tlbk5hbWVzID0gbmFtZXM7XG5leHBvcnRzLlRva2VuU3RyZWFtID0gVG9rZW5TdHJlYW0uVG9rZW5TdHJlYW07XG5leHBvcnRzLmRlZmluaXRpb25TeW50YXggPSBpbmRleDtcbmV4cG9ydHMuY2xvbmUgPSBjbG9uZS5jbG9uZTtcbmV4cG9ydHMuaXNDdXN0b21Qcm9wZXJ0eSA9IG5hbWVzJDEuaXNDdXN0b21Qcm9wZXJ0eTtcbmV4cG9ydHMua2V5d29yZCA9IG5hbWVzJDEua2V5d29yZDtcbmV4cG9ydHMucHJvcGVydHkgPSBuYW1lcyQxLnByb3BlcnR5O1xuZXhwb3J0cy52ZW5kb3JQcmVmaXggPSBuYW1lcyQxLnZlbmRvclByZWZpeDtcbmV4cG9ydHMuaWRlbnQgPSBpZGVudDtcbmV4cG9ydHMuc3RyaW5nID0gc3RyaW5nO1xuZXhwb3J0cy51cmwgPSB1cmw7XG5leHBvcnRzLmNyZWF0ZUxleGVyID0gY3JlYXRlTGV4ZXI7XG5leHBvcnRzLmZpbmQgPSBmaW5kO1xuZXhwb3J0cy5maW5kQWxsID0gZmluZEFsbDtcbmV4cG9ydHMuZmluZExhc3QgPSBmaW5kTGFzdDtcbmV4cG9ydHMuZm9yayA9IGZvcms7XG5leHBvcnRzLmZyb21QbGFpbk9iamVjdCA9IGZyb21QbGFpbk9iamVjdDtcbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubGV4ZXIgPSBsZXhlcjtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMudG9QbGFpbk9iamVjdCA9IHRvUGxhaW5PYmplY3Q7XG5leHBvcnRzLnRva2VuaXplID0gdG9rZW5pemU7XG5leHBvcnRzLndhbGsgPSB3YWxrO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/index.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/Lexer.cjs":
/*!***************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/Lexer.cjs ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst error = __webpack_require__(/*! ./error.cjs */ \"./node_modules/css-tree/cjs/lexer/error.cjs\");\nconst names = __webpack_require__(/*! ../utils/names.cjs */ \"./node_modules/css-tree/cjs/utils/names.cjs\");\nconst generic = __webpack_require__(/*! ./generic.cjs */ \"./node_modules/css-tree/cjs/lexer/generic.cjs\");\nconst generate = __webpack_require__(/*! ../definition-syntax/generate.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/generate.cjs\");\nconst parse = __webpack_require__(/*! ../definition-syntax/parse.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/parse.cjs\");\nconst walk = __webpack_require__(/*! ../definition-syntax/walk.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/walk.cjs\");\nconst prepareTokens = __webpack_require__(/*! ./prepare-tokens.cjs */ \"./node_modules/css-tree/cjs/lexer/prepare-tokens.cjs\");\nconst matchGraph = __webpack_require__(/*! ./match-graph.cjs */ \"./node_modules/css-tree/cjs/lexer/match-graph.cjs\");\nconst match = __webpack_require__(/*! ./match.cjs */ \"./node_modules/css-tree/cjs/lexer/match.cjs\");\nconst trace = __webpack_require__(/*! ./trace.cjs */ \"./node_modules/css-tree/cjs/lexer/trace.cjs\");\nconst search = __webpack_require__(/*! ./search.cjs */ \"./node_modules/css-tree/cjs/lexer/search.cjs\");\nconst structure = __webpack_require__(/*! ./structure.cjs */ \"./node_modules/css-tree/cjs/lexer/structure.cjs\");\n\nconst cssWideKeywords = matchGraph.buildMatchGraph('inherit | initial | unset');\nconst cssWideKeywordsWithExpression = matchGraph.buildMatchGraph('inherit | initial | unset | <-ms-legacy-expression>');\n\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const name in map) {\n        if (map[name].syntax) {\n            result[name] = syntaxAsAst\n                ? map[name].syntax\n                : generate.generate(map[name].syntax, { compact });\n        }\n    }\n\n    return result;\n}\n\nfunction dumpAtruleMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const [name, atrule] of Object.entries(map)) {\n        result[name] = {\n            prelude: atrule.prelude && (\n                syntaxAsAst\n                    ? atrule.prelude.syntax\n                    : generate.generate(atrule.prelude.syntax, { compact })\n            ),\n            descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)\n        };\n    }\n\n    return result;\n}\n\nfunction valueHasVar(tokens) {\n    for (let i = 0; i < tokens.length; i++) {\n        if (tokens[i].value.toLowerCase() === 'var(') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction buildMatchResult(matched, error, iterations) {\n    return {\n        matched,\n        iterations,\n        error,\n        ...trace\n    };\n}\n\nfunction matchSyntax(lexer, syntax, value, useCommon) {\n    const tokens = prepareTokens(value, lexer.syntax);\n    let result;\n\n    if (valueHasVar(tokens)) {\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\n    }\n\n    if (useCommon) {\n        result = match.matchAsTree(tokens, lexer.valueCommonSyntax, lexer);\n    }\n\n    if (!useCommon || !result.match) {\n        result = match.matchAsTree(tokens, syntax.match, lexer);\n        if (!result.match) {\n            return buildMatchResult(\n                null,\n                new error.SyntaxMatchError(result.reason, syntax.syntax, value, result),\n                result.iterations\n            );\n        }\n    }\n\n    return buildMatchResult(result.match, null, result.iterations);\n}\n\nclass Lexer {\n    constructor(config, syntax, structure$1) {\n        this.valueCommonSyntax = cssWideKeywords;\n        this.syntax = syntax;\n        this.generic = false;\n        this.atrules = Object.create(null);\n        this.properties = Object.create(null);\n        this.types = Object.create(null);\n        this.structure = structure$1 || structure.getStructureFromConfig(config);\n\n        if (config) {\n            if (config.types) {\n                for (const name in config.types) {\n                    this.addType_(name, config.types[name]);\n                }\n            }\n\n            if (config.generic) {\n                this.generic = true;\n                for (const name in generic) {\n                    this.addType_(name, generic[name]);\n                }\n            }\n\n            if (config.atrules) {\n                for (const name in config.atrules) {\n                    this.addAtrule_(name, config.atrules[name]);\n                }\n            }\n\n            if (config.properties) {\n                for (const name in config.properties) {\n                    this.addProperty_(name, config.properties[name]);\n                }\n            }\n        }\n    }\n\n    checkStructure(ast) {\n        function collectWarning(node, message) {\n            warns.push({ node, message });\n        }\n\n        const structure = this.structure;\n        const warns = [];\n\n        this.syntax.walk(ast, function(node) {\n            if (structure.hasOwnProperty(node.type)) {\n                structure[node.type].check(node, collectWarning);\n            } else {\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\n            }\n        });\n\n        return warns.length ? warns : false;\n    }\n\n    createDescriptor(syntax, type, name, parent = null) {\n        const ref = {\n            type,\n            name\n        };\n        const descriptor = {\n            type,\n            name,\n            parent,\n            serializable: typeof syntax === 'string' || (syntax && typeof syntax.type === 'string'),\n            syntax: null,\n            match: null\n        };\n\n        if (typeof syntax === 'function') {\n            descriptor.match = matchGraph.buildMatchGraph(syntax, ref);\n        } else {\n            if (typeof syntax === 'string') {\n                // lazy parsing on first access\n                Object.defineProperty(descriptor, 'syntax', {\n                    get() {\n                        Object.defineProperty(descriptor, 'syntax', {\n                            value: parse.parse(syntax)\n                        });\n\n                        return descriptor.syntax;\n                    }\n                });\n            } else {\n                descriptor.syntax = syntax;\n            }\n\n            // lazy graph build on first access\n            Object.defineProperty(descriptor, 'match', {\n                get() {\n                    Object.defineProperty(descriptor, 'match', {\n                        value: matchGraph.buildMatchGraph(descriptor.syntax, ref)\n                    });\n\n                    return descriptor.match;\n                }\n            });\n        }\n\n        return descriptor;\n    }\n    addAtrule_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.atrules[name] = {\n            type: 'Atrule',\n            name: name,\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\n            descriptors: syntax.descriptors\n                ? Object.keys(syntax.descriptors).reduce(\n                    (map, descName) => {\n                        map[descName] = this.createDescriptor(syntax.descriptors[descName], 'AtruleDescriptor', descName, name);\n                        return map;\n                    },\n                    Object.create(null)\n                )\n                : null\n        };\n    }\n    addProperty_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\n    }\n    addType_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\n\n        if (syntax === generic['-ms-legacy-expression']) {\n            this.valueCommonSyntax = cssWideKeywordsWithExpression;\n        }\n    }\n\n    checkAtruleName(atruleName) {\n        if (!this.getAtrule(atruleName)) {\n            return new error.SyntaxReferenceError('Unknown at-rule', '@' + atruleName);\n        }\n    }\n    checkAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude && prelude) {\n            return new SyntaxError('At-rule `@' + atruleName + '` should not contain a prelude');\n        }\n\n        if (atrule.prelude && !prelude) {\n            return new SyntaxError('At-rule `@' + atruleName + '` should contain a prelude');\n        }\n    }\n    checkAtruleDescriptorName(atruleName, descriptorName) {\n        const error$1 = this.checkAtruleName(atruleName);\n\n        if (error$1) {\n            return error$1;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        if (!atrule.descriptors) {\n            return new SyntaxError('At-rule `@' + atruleName + '` has no known descriptors');\n        }\n\n        if (!atrule.descriptors[descriptor.name] &&\n            !atrule.descriptors[descriptor.basename]) {\n            return new error.SyntaxReferenceError('Unknown at-rule descriptor', descriptorName);\n        }\n    }\n    checkPropertyName(propertyName) {\n        if (!this.getProperty(propertyName)) {\n            return new error.SyntaxReferenceError('Unknown property', propertyName);\n        }\n    }\n\n    matchAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtrulePrelude(atruleName, prelude);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        if (!prelude) {\n            return buildMatchResult(null, null);\n        }\n\n        return matchSyntax(this, this.getAtrule(atruleName).prelude, prelude, false);\n    }\n    matchAtruleDescriptor(atruleName, descriptorName, value) {\n        const error = this.checkAtruleDescriptorName(atruleName, descriptorName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);\n    }\n    matchDeclaration(node) {\n        if (node.type !== 'Declaration') {\n            return buildMatchResult(null, new Error('Not a Declaration node'));\n        }\n\n        return this.matchProperty(node.property, node.value);\n    }\n    matchProperty(propertyName, value) {\n        // don't match syntax for a custom property at the moment\n        if (names.property(propertyName).custom) {\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\n        }\n\n        const error = this.checkPropertyName(propertyName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        return matchSyntax(this, this.getProperty(propertyName), value, true);\n    }\n    matchType(typeName, value) {\n        const typeSyntax = this.getType(typeName);\n\n        if (!typeSyntax) {\n            return buildMatchResult(null, new error.SyntaxReferenceError('Unknown type', typeName));\n        }\n\n        return matchSyntax(this, typeSyntax, value, false);\n    }\n    match(syntax, value) {\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\n            return buildMatchResult(null, new error.SyntaxReferenceError('Bad syntax'));\n        }\n\n        if (typeof syntax === 'string' || !syntax.match) {\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\n        }\n\n        return matchSyntax(this, syntax, value, false);\n    }\n\n    findValueFragments(propertyName, value, type, name) {\n        return search.matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\n    }\n    findDeclarationValueFragments(declaration, type, name) {\n        return search.matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\n    }\n    findAllFragments(ast, type, name) {\n        const result = [];\n\n        this.syntax.walk(ast, {\n            visit: 'Declaration',\n            enter: (declaration) => {\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\n            }\n        });\n\n        return result;\n    }\n\n    getAtrule(atruleName, fallbackBasename = true) {\n        const atrule = names.keyword(atruleName);\n        const atruleEntry = atrule.vendor && fallbackBasename\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\n            : this.atrules[atrule.name];\n\n        return atruleEntry || null;\n    }\n    getAtrulePrelude(atruleName, fallbackBasename = true) {\n        const atrule = this.getAtrule(atruleName, fallbackBasename);\n\n        return atrule && atrule.prelude || null;\n    }\n    getAtruleDescriptor(atruleName, name) {\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\n            ? this.atrules[atruleName].declarators[name] || null\n            : null;\n    }\n    getProperty(propertyName, fallbackBasename = true) {\n        const property = names.property(propertyName);\n        const propertyEntry = property.vendor && fallbackBasename\n            ? this.properties[property.name] || this.properties[property.basename]\n            : this.properties[property.name];\n\n        return propertyEntry || null;\n    }\n    getType(name) {\n        return hasOwnProperty.call(this.types, name) ? this.types[name] : null;\n    }\n\n    validate() {\n        function validate(syntax, name, broken, descriptor) {\n            if (broken.has(name)) {\n                return broken.get(name);\n            }\n\n            broken.set(name, false);\n            if (descriptor.syntax !== null) {\n                walk.walk(descriptor.syntax, function(node) {\n                    if (node.type !== 'Type' && node.type !== 'Property') {\n                        return;\n                    }\n\n                    const map = node.type === 'Type' ? syntax.types : syntax.properties;\n                    const brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\n\n                    if (!hasOwnProperty.call(map, node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\n                        broken.set(name, true);\n                    }\n                }, this);\n            }\n        }\n\n        let brokenTypes = new Map();\n        let brokenProperties = new Map();\n\n        for (const key in this.types) {\n            validate(this, key, brokenTypes, this.types[key]);\n        }\n\n        for (const key in this.properties) {\n            validate(this, key, brokenProperties, this.properties[key]);\n        }\n\n        brokenTypes = [...brokenTypes.keys()].filter(name => brokenTypes.get(name));\n        brokenProperties = [...brokenProperties.keys()].filter(name => brokenProperties.get(name));\n\n        if (brokenTypes.length || brokenProperties.length) {\n            return {\n                types: brokenTypes,\n                properties: brokenProperties\n            };\n        }\n\n        return null;\n    }\n    dump(syntaxAsAst, pretty) {\n        return {\n            generic: this.generic,\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),\n            atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)\n        };\n    }\n    toString() {\n        return JSON.stringify(this.dump());\n    }\n}\n\nexports.Lexer = Lexer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/Lexer.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/error.cjs":
/*!***************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/error.cjs ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst createCustomError = __webpack_require__(/*! ../utils/create-custom-error.cjs */ \"./node_modules/css-tree/cjs/utils/create-custom-error.cjs\");\nconst generate = __webpack_require__(/*! ../definition-syntax/generate.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/generate.cjs\");\n\nconst defaultLoc = { offset: 0, line: 1, column: 1 };\n\nfunction locateMismatch(matchResult, node) {\n    const tokens = matchResult.tokens;\n    const longestMatch = matchResult.longestMatch;\n    const mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    const badNode = mismatchNode !== node ? mismatchNode : null;\n    let mismatchOffset = 0;\n    let mismatchLength = 0;\n    let entries = 0;\n    let css = '';\n    let start;\n    let end;\n\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i].value;\n\n        if (i === longestMatch) {\n            mismatchLength = token.length;\n            mismatchOffset = css.length;\n        }\n\n        if (badNode !== null && tokens[i].node === badNode) {\n            if (i <= longestMatch) {\n                entries++;\n            } else {\n                entries = 0;\n            }\n        }\n\n        css += token;\n    }\n\n    if (longestMatch === tokens.length || entries > 1) { // last\n        start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n        end = buildLoc(start);\n    } else {\n        start = fromLoc(badNode, 'start') ||\n            buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n        end = fromLoc(badNode, 'end') ||\n            buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n\n    return {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    };\n}\n\nfunction fromLoc(node, point) {\n    const value = node && node.loc && node.loc[point];\n\n    if (value) {\n        return 'line' in value ? buildLoc(value) : value;\n    }\n\n    return null;\n}\n\nfunction buildLoc({ offset, line, column }, extra) {\n    const loc = {\n        offset,\n        line,\n        column\n    };\n\n    if (extra) {\n        const lines = extra.split(/\\n|\\r\\n?|\\f/);\n\n        loc.offset += extra.length;\n        loc.line += lines.length - 1;\n        loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n\n    return loc;\n}\n\nconst SyntaxReferenceError = function(type, referenceName) {\n    const error = createCustomError.createCustomError(\n        'SyntaxReferenceError',\n        type + (referenceName ? ' `' + referenceName + '`' : '')\n    );\n\n    error.reference = referenceName;\n\n    return error;\n};\n\nconst SyntaxMatchError = function(message, syntax, node, matchResult) {\n    const error = createCustomError.createCustomError('SyntaxMatchError', message);\n    const {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    } = locateMismatch(matchResult, node);\n\n    error.rawMessage = message;\n    error.syntax = syntax ? generate.generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' +\n        '  syntax: ' + error.syntax + '\\n' +\n        '   value: ' + (css || '<empty string>') + '\\n' +\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n\n    Object.assign(error, start);\n    error.loc = {\n        source: (node && node.loc && node.loc.source) || '<unknown>',\n        start,\n        end\n    };\n\n    return error;\n};\n\nexports.SyntaxMatchError = SyntaxMatchError;\nexports.SyntaxReferenceError = SyntaxReferenceError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2xleGVyL2Vycm9yLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvbGV4ZXIvZXJyb3IuY2pzPzI3NDIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBjcmVhdGVDdXN0b21FcnJvciA9IHJlcXVpcmUoJy4uL3V0aWxzL2NyZWF0ZS1jdXN0b20tZXJyb3IuY2pzJyk7XG5jb25zdCBnZW5lcmF0ZSA9IHJlcXVpcmUoJy4uL2RlZmluaXRpb24tc3ludGF4L2dlbmVyYXRlLmNqcycpO1xuXG5jb25zdCBkZWZhdWx0TG9jID0geyBvZmZzZXQ6IDAsIGxpbmU6IDEsIGNvbHVtbjogMSB9O1xuXG5mdW5jdGlvbiBsb2NhdGVNaXNtYXRjaChtYXRjaFJlc3VsdCwgbm9kZSkge1xuICAgIGNvbnN0IHRva2VucyA9IG1hdGNoUmVzdWx0LnRva2VucztcbiAgICBjb25zdCBsb25nZXN0TWF0Y2ggPSBtYXRjaFJlc3VsdC5sb25nZXN0TWF0Y2g7XG4gICAgY29uc3QgbWlzbWF0Y2hOb2RlID0gbG9uZ2VzdE1hdGNoIDwgdG9rZW5zLmxlbmd0aCA/IHRva2Vuc1tsb25nZXN0TWF0Y2hdLm5vZGUgfHwgbnVsbCA6IG51bGw7XG4gICAgY29uc3QgYmFkTm9kZSA9IG1pc21hdGNoTm9kZSAhPT0gbm9kZSA/IG1pc21hdGNoTm9kZSA6IG51bGw7XG4gICAgbGV0IG1pc21hdGNoT2Zmc2V0ID0gMDtcbiAgICBsZXQgbWlzbWF0Y2hMZW5ndGggPSAwO1xuICAgIGxldCBlbnRyaWVzID0gMDtcbiAgICBsZXQgY3NzID0gJyc7XG4gICAgbGV0IHN0YXJ0O1xuICAgIGxldCBlbmQ7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB0b2tlbiA9IHRva2Vuc1tpXS52YWx1ZTtcblxuICAgICAgICBpZiAoaSA9PT0gbG9uZ2VzdE1hdGNoKSB7XG4gICAgICAgICAgICBtaXNtYXRjaExlbmd0aCA9IHRva2VuLmxlbmd0aDtcbiAgICAgICAgICAgIG1pc21hdGNoT2Zmc2V0ID0gY3NzLmxlbmd0aDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChiYWROb2RlICE9PSBudWxsICYmIHRva2Vuc1tpXS5ub2RlID09PSBiYWROb2RlKSB7XG4gICAgICAgICAgICBpZiAoaSA8PSBsb25nZXN0TWF0Y2gpIHtcbiAgICAgICAgICAgICAgICBlbnRyaWVzKys7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGVudHJpZXMgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY3NzICs9IHRva2VuO1xuICAgIH1cblxuICAgIGlmIChsb25nZXN0TWF0Y2ggPT09IHRva2Vucy5sZW5ndGggfHwgZW50cmllcyA+IDEpIHsgLy8gbGFzdFxuICAgICAgICBzdGFydCA9IGZyb21Mb2MoYmFkTm9kZSB8fCBub2RlLCAnZW5kJykgfHwgYnVpbGRMb2MoZGVmYXVsdExvYywgY3NzKTtcbiAgICAgICAgZW5kID0gYnVpbGRMb2Moc3RhcnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHN0YXJ0ID0gZnJvbUxvYyhiYWROb2RlLCAnc3RhcnQnKSB8fFxuICAgICAgICAgICAgYnVpbGRMb2MoZnJvbUxvYyhub2RlLCAnc3RhcnQnKSB8fCBkZWZhdWx0TG9jLCBjc3Muc2xpY2UoMCwgbWlzbWF0Y2hPZmZzZXQpKTtcbiAgICAgICAgZW5kID0gZnJvbUxvYyhiYWROb2RlLCAnZW5kJykgfHxcbiAgICAgICAgICAgIGJ1aWxkTG9jKHN0YXJ0LCBjc3Muc3Vic3RyKG1pc21hdGNoT2Zmc2V0LCBtaXNtYXRjaExlbmd0aCkpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGNzcyxcbiAgICAgICAgbWlzbWF0Y2hPZmZzZXQsXG4gICAgICAgIG1pc21hdGNoTGVuZ3RoLFxuICAgICAgICBzdGFydCxcbiAgICAgICAgZW5kXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZnJvbUxvYyhub2RlLCBwb2ludCkge1xuICAgIGNvbnN0IHZhbHVlID0gbm9kZSAmJiBub2RlLmxvYyAmJiBub2RlLmxvY1twb2ludF07XG5cbiAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuICdsaW5lJyBpbiB2YWx1ZSA/IGJ1aWxkTG9jKHZhbHVlKSA6IHZhbHVlO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBidWlsZExvYyh7IG9mZnNldCwgbGluZSwgY29sdW1uIH0sIGV4dHJhKSB7XG4gICAgY29uc3QgbG9jID0ge1xuICAgICAgICBvZmZzZXQsXG4gICAgICAgIGxpbmUsXG4gICAgICAgIGNvbHVtblxuICAgIH07XG5cbiAgICBpZiAoZXh0cmEpIHtcbiAgICAgICAgY29uc3QgbGluZXMgPSBleHRyYS5zcGxpdCgvXFxufFxcclxcbj98XFxmLyk7XG5cbiAgICAgICAgbG9jLm9mZnNldCArPSBleHRyYS5sZW5ndGg7XG4gICAgICAgIGxvYy5saW5lICs9IGxpbmVzLmxlbmd0aCAtIDE7XG4gICAgICAgIGxvYy5jb2x1bW4gPSBsaW5lcy5sZW5ndGggPT09IDEgPyBsb2MuY29sdW1uICsgZXh0cmEubGVuZ3RoIDogbGluZXMucG9wKCkubGVuZ3RoICsgMTtcbiAgICB9XG5cbiAgICByZXR1cm4gbG9jO1xufVxuXG5jb25zdCBTeW50YXhSZWZlcmVuY2VFcnJvciA9IGZ1bmN0aW9uKHR5cGUsIHJlZmVyZW5jZU5hbWUpIHtcbiAgICBjb25zdCBlcnJvciA9IGNyZWF0ZUN1c3RvbUVycm9yLmNyZWF0ZUN1c3RvbUVycm9yKFxuICAgICAgICAnU3ludGF4UmVmZXJlbmNlRXJyb3InLFxuICAgICAgICB0eXBlICsgKHJlZmVyZW5jZU5hbWUgPyAnIGAnICsgcmVmZXJlbmNlTmFtZSArICdgJyA6ICcnKVxuICAgICk7XG5cbiAgICBlcnJvci5yZWZlcmVuY2UgPSByZWZlcmVuY2VOYW1lO1xuXG4gICAgcmV0dXJuIGVycm9yO1xufTtcblxuY29uc3QgU3ludGF4TWF0Y2hFcnJvciA9IGZ1bmN0aW9uKG1lc3NhZ2UsIHN5bnRheCwgbm9kZSwgbWF0Y2hSZXN1bHQpIHtcbiAgICBjb25zdCBlcnJvciA9IGNyZWF0ZUN1c3RvbUVycm9yLmNyZWF0ZUN1c3RvbUVycm9yKCdTeW50YXhNYXRjaEVycm9yJywgbWVzc2FnZSk7XG4gICAgY29uc3Qge1xuICAgICAgICBjc3MsXG4gICAgICAgIG1pc21hdGNoT2Zmc2V0LFxuICAgICAgICBtaXNtYXRjaExlbmd0aCxcbiAgICAgICAgc3RhcnQsXG4gICAgICAgIGVuZFxuICAgIH0gPSBsb2NhdGVNaXNtYXRjaChtYXRjaFJlc3VsdCwgbm9kZSk7XG5cbiAgICBlcnJvci5yYXdNZXNzYWdlID0gbWVzc2FnZTtcbiAgICBlcnJvci5zeW50YXggPSBzeW50YXggPyBnZW5lcmF0ZS5nZW5lcmF0ZShzeW50YXgpIDogJzxnZW5lcmljPic7XG4gICAgZXJyb3IuY3NzID0gY3NzO1xuICAgIGVycm9yLm1pc21hdGNoT2Zmc2V0ID0gbWlzbWF0Y2hPZmZzZXQ7XG4gICAgZXJyb3IubWlzbWF0Y2hMZW5ndGggPSBtaXNtYXRjaExlbmd0aDtcbiAgICBlcnJvci5tZXNzYWdlID0gbWVzc2FnZSArICdcXG4nICtcbiAgICAgICAgJyAgc3ludGF4OiAnICsgZXJyb3Iuc3ludGF4ICsgJ1xcbicgK1xuICAgICAgICAnICAgdmFsdWU6ICcgKyAoY3NzIHx8ICc8ZW1wdHkgc3RyaW5nPicpICsgJ1xcbicgK1xuICAgICAgICAnICAtLS0tLS0tLScgKyBuZXcgQXJyYXkoZXJyb3IubWlzbWF0Y2hPZmZzZXQgKyAxKS5qb2luKCctJykgKyAnXic7XG5cbiAgICBPYmplY3QuYXNzaWduKGVycm9yLCBzdGFydCk7XG4gICAgZXJyb3IubG9jID0ge1xuICAgICAgICBzb3VyY2U6IChub2RlICYmIG5vZGUubG9jICYmIG5vZGUubG9jLnNvdXJjZSkgfHwgJzx1bmtub3duPicsXG4gICAgICAgIHN0YXJ0LFxuICAgICAgICBlbmRcbiAgICB9O1xuXG4gICAgcmV0dXJuIGVycm9yO1xufTtcblxuZXhwb3J0cy5TeW50YXhNYXRjaEVycm9yID0gU3ludGF4TWF0Y2hFcnJvcjtcbmV4cG9ydHMuU3ludGF4UmVmZXJlbmNlRXJyb3IgPSBTeW50YXhSZWZlcmVuY2VFcnJvcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/error.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/generic-an-plus-b.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/generic-an-plus-b.cjs ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\nconst charCodeDefinitions = __webpack_require__(/*! ../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst utils = __webpack_require__(/*! ../tokenizer/utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === types.Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === types.WhiteSpace || token.type === types.Comment)) {\n        token = getNextToken(++offset);\n    }\n\n    return offset;\n}\n\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n        return 0;\n    }\n\n    const code = token.value.charCodeAt(valueOffset);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            // Number sign is not allowed\n            return 0;\n        }\n        valueOffset++;\n    }\n\n    for (; valueOffset < token.value.length; valueOffset++) {\n        if (!charCodeDefinitions.isDigit(token.value.charCodeAt(valueOffset))) {\n            // Integer is expected\n            return 0;\n        }\n    }\n\n    return offset + 1;\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB(token, offset_, getNextToken) {\n    let sign = false;\n    let offset = skipSC(token, offset_, getNextToken);\n\n    token = getNextToken(offset);\n\n    if (token === null) {\n        return offset_;\n    }\n\n    if (token.type !== types.Number) {\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n            sign = true;\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\n            token = getNextToken(offset);\n\n            if (token === null || token.type !== types.Number) {\n                return 0;\n            }\n        } else {\n            return offset_;\n        }\n    }\n\n    if (!sign) {\n        const code = token.value.charCodeAt(0);\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n            // Number sign is expected\n            return 0;\n        }\n    }\n\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nfunction anPlusB(token, getNextToken) {\n    /* eslint-disable brace-style*/\n    let offset = 0;\n\n    if (!token) {\n        return 0;\n    }\n\n    // <integer>\n    if (token.type === types.Number) {\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (token.type === types.Ident && token.value.charCodeAt(0) === HYPHENMINUS) {\n        // expect 1st char is N\n        if (!utils.cmpChar(token.value, 1, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // -n- <signless-integer>\n            case 3:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // <dashndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (token.type === types.Ident || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === types.Ident)) {\n        // just ignore a plus\n        if (token.type !== types.Ident) {\n            token = getNextToken(++offset);\n        }\n\n        if (token === null || !utils.cmpChar(token.value, 0, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // '+'? n- <signless-integer>\n            case 2:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // '+'? <ndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (token.type === types.Dimension) {\n        let code = token.value.charCodeAt(0);\n        let sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n        let i = sign;\n\n        for (; i < token.value.length; i++) {\n            if (!charCodeDefinitions.isDigit(token.value.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === sign) {\n            // Integer is expected\n            return 0;\n        }\n\n        if (!utils.cmpChar(token.value, i, N)) {\n            return 0;\n        }\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === token.value.length) {\n            return consumeB(getNextToken(++offset), offset, getNextToken);\n        } else {\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n                return 0;\n            }\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === token.value.length) {\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n            }\n            // <ndashdigit-dimension>\n            else {\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n            }\n        }\n    }\n\n    return 0;\n}\n\nmodule.exports = anPlusB;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/generic-an-plus-b.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/generic-urange.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/generic-urange.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\nconst charCodeDefinitions = __webpack_require__(/*! ../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst utils = __webpack_require__(/*! ../tokenizer/utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\nconst U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === types.Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction startsWith(token, code) {\n    return token.value.charCodeAt(0) === code;\n}\n\nfunction hexSequence(token, offset, allowDash) {\n    let hexlen = 0;\n\n    for (let pos = offset; pos < token.value.length; pos++) {\n        const code = token.value.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\n            hexSequence(token, offset + hexlen + 1, false);\n            return 6; // dissallow following question marks\n        }\n\n        if (!charCodeDefinitions.isHexDigit(code)) {\n            return 0; // not a hex digit\n        }\n\n        if (++hexlen > 6) {\n            return 0; // too many hex digits\n        }    }\n\n    return hexlen;\n}\n\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\n    if (!consumed) {\n        return 0; // nothing consumed\n    }\n\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\n        if (++consumed > 6) {\n            return 0; // too many question marks\n        }\n\n        length++;\n    }\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nfunction urange(token, getNextToken) {\n    let length = 0;\n\n    // should start with `u` or `U`\n    if (token === null || token.type !== types.Ident || !utils.cmpChar(token.value, 0, U)) {\n        return 0;\n    }\n\n    token = getNextToken(++length);\n    if (token === null) {\n        return 0;\n    }\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (isDelim(token, PLUSSIGN)) {\n        token = getNextToken(++length);\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === types.Ident) {\n            // u '+' <ident-token> '?'*\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\n        }\n\n        if (isDelim(token, QUESTIONMARK)) {\n            // u '+' '?'+\n            return withQuestionMarkSequence(1, ++length, getNextToken);\n        }\n\n        // Hex digit or question mark is expected\n        return 0;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (token.type === types.Number) {\n        const consumedHexLength = hexSequence(token, 1, true);\n        if (consumedHexLength === 0) {\n            return 0;\n        }\n\n        token = getNextToken(++length);\n        if (token === null) {\n            // u <number-token> <eof>\n            return length;\n        }\n\n        if (token.type === types.Dimension || token.type === types.Number) {\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\n                return 0;\n            }\n\n            return length + 1;\n        }\n\n        // u <number-token> '?'*\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\n    }\n\n    // u <dimension-token> '?'*\n    if (token.type === types.Dimension) {\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\n    }\n\n    return 0;\n}\n\nmodule.exports = urange;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2xleGVyL2dlbmVyaWMtdXJhbmdlLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvbGV4ZXIvZ2VuZXJpYy11cmFuZ2UuY2pzPzgwM2YiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbmNvbnN0IGNoYXJDb2RlRGVmaW5pdGlvbnMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvdXRpbHMuY2pzJyk7XG5cbmNvbnN0IFBMVVNTSUdOID0gMHgwMDJCOyAgICAgLy8gVSswMDJCIFBMVVMgU0lHTiAoKylcbmNvbnN0IEhZUEhFTk1JTlVTID0gMHgwMDJEOyAgLy8gVSswMDJEIEhZUEhFTi1NSU5VUyAoLSlcbmNvbnN0IFFVRVNUSU9OTUFSSyA9IDB4MDAzRjsgLy8gVSswMDNGIFFVRVNUSU9OIE1BUksgKD8pXG5jb25zdCBVID0gMHgwMDc1OyAgICAgICAgICAgIC8vIFUrMDA3NSBMQVRJTiBTTUFMTCBMRVRURVIgVSAodSlcblxuZnVuY3Rpb24gaXNEZWxpbSh0b2tlbiwgY29kZSkge1xuICAgIHJldHVybiB0b2tlbiAhPT0gbnVsbCAmJiB0b2tlbi50eXBlID09PSB0eXBlcy5EZWxpbSAmJiB0b2tlbi52YWx1ZS5jaGFyQ29kZUF0KDApID09PSBjb2RlO1xufVxuXG5mdW5jdGlvbiBzdGFydHNXaXRoKHRva2VuLCBjb2RlKSB7XG4gICAgcmV0dXJuIHRva2VuLnZhbHVlLmNoYXJDb2RlQXQoMCkgPT09IGNvZGU7XG59XG5cbmZ1bmN0aW9uIGhleFNlcXVlbmNlKHRva2VuLCBvZmZzZXQsIGFsbG93RGFzaCkge1xuICAgIGxldCBoZXhsZW4gPSAwO1xuXG4gICAgZm9yIChsZXQgcG9zID0gb2Zmc2V0OyBwb3MgPCB0b2tlbi52YWx1ZS5sZW5ndGg7IHBvcysrKSB7XG4gICAgICAgIGNvbnN0IGNvZGUgPSB0b2tlbi52YWx1ZS5jaGFyQ29kZUF0KHBvcyk7XG5cbiAgICAgICAgaWYgKGNvZGUgPT09IEhZUEhFTk1JTlVTICYmIGFsbG93RGFzaCAmJiBoZXhsZW4gIT09IDApIHtcbiAgICAgICAgICAgIGhleFNlcXVlbmNlKHRva2VuLCBvZmZzZXQgKyBoZXhsZW4gKyAxLCBmYWxzZSk7XG4gICAgICAgICAgICByZXR1cm4gNjsgLy8gZGlzc2FsbG93IGZvbGxvd2luZyBxdWVzdGlvbiBtYXJrc1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFjaGFyQ29kZURlZmluaXRpb25zLmlzSGV4RGlnaXQoY29kZSkpIHtcbiAgICAgICAgICAgIHJldHVybiAwOyAvLyBub3QgYSBoZXggZGlnaXRcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICgrK2hleGxlbiA+IDYpIHtcbiAgICAgICAgICAgIHJldHVybiAwOyAvLyB0b28gbWFueSBoZXggZGlnaXRzXG4gICAgICAgIH0gICAgfVxuXG4gICAgcmV0dXJuIGhleGxlbjtcbn1cblxuZnVuY3Rpb24gd2l0aFF1ZXN0aW9uTWFya1NlcXVlbmNlKGNvbnN1bWVkLCBsZW5ndGgsIGdldE5leHRUb2tlbikge1xuICAgIGlmICghY29uc3VtZWQpIHtcbiAgICAgICAgcmV0dXJuIDA7IC8vIG5vdGhpbmcgY29uc3VtZWRcbiAgICB9XG5cbiAgICB3aGlsZSAoaXNEZWxpbShnZXROZXh0VG9rZW4obGVuZ3RoKSwgUVVFU1RJT05NQVJLKSkge1xuICAgICAgICBpZiAoKytjb25zdW1lZCA+IDYpIHtcbiAgICAgICAgICAgIHJldHVybiAwOyAvLyB0b28gbWFueSBxdWVzdGlvbiBtYXJrc1xuICAgICAgICB9XG5cbiAgICAgICAgbGVuZ3RoKys7XG4gICAgfVxuXG4gICAgcmV0dXJuIGxlbmd0aDtcbn1cblxuLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1zeW50YXgvI3VyYW5nZVxuLy8gSW5mb3JtYWxseSwgdGhlIDx1cmFuZ2U+IHByb2R1Y3Rpb24gaGFzIHRocmVlIGZvcm1zOlxuLy8gVSswMDAxXG4vLyAgICAgIERlZmluZXMgYSByYW5nZSBjb25zaXN0aW5nIG9mIGEgc2luZ2xlIGNvZGUgcG9pbnQsIGluIHRoaXMgY2FzZSB0aGUgY29kZSBwb2ludCBcIjFcIi5cbi8vIFUrMDAwMS0wMGZmXG4vLyAgICAgIERlZmluZXMgYSByYW5nZSBvZiBjb2RlcG9pbnRzIGJldHdlZW4gdGhlIGZpcnN0IGFuZCB0aGUgc2Vjb25kIHZhbHVlLCBpbiB0aGlzIGNhc2Vcbi8vICAgICAgdGhlIHJhbmdlIGJldHdlZW4gXCIxXCIgYW5kIFwiZmZcIiAoMjU1IGluIGRlY2ltYWwpIGluY2x1c2l2ZS5cbi8vIFUrMDA/P1xuLy8gICAgICBEZWZpbmVzIGEgcmFuZ2Ugb2YgY29kZXBvaW50cyB3aGVyZSB0aGUgXCI/XCIgY2hhcmFjdGVycyByYW5nZSBvdmVyIGFsbCBoZXggZGlnaXRzLFxuLy8gICAgICBpbiB0aGlzIGNhc2UgZGVmaW5pbmcgdGhlIHNhbWUgYXMgdGhlIHZhbHVlIFUrMDAwMC0wMGZmLlxuLy8gSW4gZWFjaCBmb3JtLCBhIG1heGltdW0gb2YgNiBkaWdpdHMgaXMgYWxsb3dlZCBmb3IgZWFjaCBoZXhhZGVjaW1hbCBudW1iZXIgKGlmIHlvdSB0cmVhdCBcIj9cIiBhcyBhIGhleGFkZWNpbWFsIGRpZ2l0KS5cbi8vXG4vLyA8dXJhbmdlPiA9XG4vLyAgIHUgJysnIDxpZGVudC10b2tlbj4gJz8nKiB8XG4vLyAgIHUgPGRpbWVuc2lvbi10b2tlbj4gJz8nKiB8XG4vLyAgIHUgPG51bWJlci10b2tlbj4gJz8nKiB8XG4vLyAgIHUgPG51bWJlci10b2tlbj4gPGRpbWVuc2lvbi10b2tlbj4gfFxuLy8gICB1IDxudW1iZXItdG9rZW4+IDxudW1iZXItdG9rZW4+IHxcbi8vICAgdSAnKycgJz8nK1xuZnVuY3Rpb24gdXJhbmdlKHRva2VuLCBnZXROZXh0VG9rZW4pIHtcbiAgICBsZXQgbGVuZ3RoID0gMDtcblxuICAgIC8vIHNob3VsZCBzdGFydCB3aXRoIGB1YCBvciBgVWBcbiAgICBpZiAodG9rZW4gPT09IG51bGwgfHwgdG9rZW4udHlwZSAhPT0gdHlwZXMuSWRlbnQgfHwgIXV0aWxzLmNtcENoYXIodG9rZW4udmFsdWUsIDAsIFUpKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIHRva2VuID0gZ2V0TmV4dFRva2VuKCsrbGVuZ3RoKTtcbiAgICBpZiAodG9rZW4gPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgLy8gdSAnKycgPGlkZW50LXRva2VuPiAnPycqXG4gICAgLy8gdSAnKycgJz8nK1xuICAgIGlmIChpc0RlbGltKHRva2VuLCBQTFVTU0lHTikpIHtcbiAgICAgICAgdG9rZW4gPSBnZXROZXh0VG9rZW4oKytsZW5ndGgpO1xuICAgICAgICBpZiAodG9rZW4gPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRva2VuLnR5cGUgPT09IHR5cGVzLklkZW50KSB7XG4gICAgICAgICAgICAvLyB1ICcrJyA8aWRlbnQtdG9rZW4+ICc/JypcbiAgICAgICAgICAgIHJldHVybiB3aXRoUXVlc3Rpb25NYXJrU2VxdWVuY2UoaGV4U2VxdWVuY2UodG9rZW4sIDAsIHRydWUpLCArK2xlbmd0aCwgZ2V0TmV4dFRva2VuKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpc0RlbGltKHRva2VuLCBRVUVTVElPTk1BUkspKSB7XG4gICAgICAgICAgICAvLyB1ICcrJyAnPycrXG4gICAgICAgICAgICByZXR1cm4gd2l0aFF1ZXN0aW9uTWFya1NlcXVlbmNlKDEsICsrbGVuZ3RoLCBnZXROZXh0VG9rZW4pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSGV4IGRpZ2l0IG9yIHF1ZXN0aW9uIG1hcmsgaXMgZXhwZWN0ZWRcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgLy8gdSA8bnVtYmVyLXRva2VuPiAnPycqXG4gICAgLy8gdSA8bnVtYmVyLXRva2VuPiA8ZGltZW5zaW9uLXRva2VuPlxuICAgIC8vIHUgPG51bWJlci10b2tlbj4gPG51bWJlci10b2tlbj5cbiAgICBpZiAodG9rZW4udHlwZSA9PT0gdHlwZXMuTnVtYmVyKSB7XG4gICAgICAgIGNvbnN0IGNvbnN1bWVkSGV4TGVuZ3RoID0gaGV4U2VxdWVuY2UodG9rZW4sIDEsIHRydWUpO1xuICAgICAgICBpZiAoY29uc3VtZWRIZXhMZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgdG9rZW4gPSBnZXROZXh0VG9rZW4oKytsZW5ndGgpO1xuICAgICAgICBpZiAodG9rZW4gPT09IG51bGwpIHtcbiAgICAgICAgICAgIC8vIHUgPG51bWJlci10b2tlbj4gPGVvZj5cbiAgICAgICAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodG9rZW4udHlwZSA9PT0gdHlwZXMuRGltZW5zaW9uIHx8IHRva2VuLnR5cGUgPT09IHR5cGVzLk51bWJlcikge1xuICAgICAgICAgICAgLy8gdSA8bnVtYmVyLXRva2VuPiA8ZGltZW5zaW9uLXRva2VuPlxuICAgICAgICAgICAgLy8gdSA8bnVtYmVyLXRva2VuPiA8bnVtYmVyLXRva2VuPlxuICAgICAgICAgICAgaWYgKCFzdGFydHNXaXRoKHRva2VuLCBIWVBIRU5NSU5VUykgfHwgIWhleFNlcXVlbmNlKHRva2VuLCAxLCBmYWxzZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGxlbmd0aCArIDE7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB1IDxudW1iZXItdG9rZW4+ICc/JypcbiAgICAgICAgcmV0dXJuIHdpdGhRdWVzdGlvbk1hcmtTZXF1ZW5jZShjb25zdW1lZEhleExlbmd0aCwgbGVuZ3RoLCBnZXROZXh0VG9rZW4pO1xuICAgIH1cblxuICAgIC8vIHUgPGRpbWVuc2lvbi10b2tlbj4gJz8nKlxuICAgIGlmICh0b2tlbi50eXBlID09PSB0eXBlcy5EaW1lbnNpb24pIHtcbiAgICAgICAgcmV0dXJuIHdpdGhRdWVzdGlvbk1hcmtTZXF1ZW5jZShoZXhTZXF1ZW5jZSh0b2tlbiwgMSwgdHJ1ZSksICsrbGVuZ3RoLCBnZXROZXh0VG9rZW4pO1xuICAgIH1cblxuICAgIHJldHVybiAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHVyYW5nZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/generic-urange.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/generic.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/generic.cjs ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst genericAnPlusB = __webpack_require__(/*! ./generic-an-plus-b.cjs */ \"./node_modules/css-tree/cjs/lexer/generic-an-plus-b.cjs\");\nconst genericUrange = __webpack_require__(/*! ./generic-urange.cjs */ \"./node_modules/css-tree/cjs/lexer/generic-urange.cjs\");\nconst types = __webpack_require__(/*! ../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\nconst charCodeDefinitions = __webpack_require__(/*! ../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst utils = __webpack_require__(/*! ../tokenizer/utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\n\nconst cssWideKeywords = ['unset', 'initial', 'inherit'];\nconst calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\nconst balancePair = new Map([\n    [types.Function, types.RightParenthesis],\n    [types.LeftParenthesis, types.RightParenthesis],\n    [types.LeftSquareBracket, types.RightSquareBracket],\n    [types.LeftCurlyBracket, types.RightCurlyBracket]\n]);\n\n// units\nconst LENGTH = [                              // https://www.w3.org/TR/css-values-3/#lengths\n    'px', 'mm', 'cm', 'in', 'pt', 'pc', 'q',  // absolute length units\n    'em', 'ex', 'ch', 'rem',                  // relative length units\n    'vh', 'vw', 'vmin', 'vmax', 'vm'          // viewport-percentage lengths\n];\nconst ANGLE = ['deg', 'grad', 'rad', 'turn']; // https://www.w3.org/TR/css-values-3/#angles\nconst TIME = ['s', 'ms'];                     // https://www.w3.org/TR/css-values-3/#time\nconst FREQUENCY = ['hz', 'khz'];              // https://www.w3.org/TR/css-values-3/#frequency\nconst RESOLUTION = ['dpi', 'dpcm', 'dppx', 'x']; // https://www.w3.org/TR/css-values-3/#resolution\nconst FLEX = ['fr'];                          // https://drafts.csswg.org/css-grid/#fr-unit\nconst DECIBEL = ['db'];                       // https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nconst SEMITONES = ['st'];                     // https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\n\n// safe char code getter\nfunction charCode(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return utils.cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (let i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        str.charCodeAt(offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        charCodeDefinitions.isDigit(str.charCodeAt(offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        const num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        if (opts.min !== null && num < opts.min) {\n            return true;\n        }\n\n        if (opts.max !== null && num > opts.max) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // balanced token consuming\n    scan:\n    do {\n        switch (token.type) {\n            case types.RightCurlyBracket:\n            case types.RightParenthesis:\n            case types.RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            case types.Function:\n            case types.LeftParenthesis:\n            case types.LeftSquareBracket:\n            case types.LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === types.Function && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\nfunction func(name) {\n    name = name + '(';\n\n    return function(token, getNextToken) {\n        if (token !== null && eqStr(token.value, name)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return 0;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== types.Ident) {\n        return 0;\n    }\n\n    const name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== types.Ident) {\n        return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== types.Hash) {\n        return 0;\n    }\n\n    const length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (let i = 1; i < length; i++) {\n        if (!charCodeDefinitions.isHexDigit(token.value.charCodeAt(i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== types.Hash) {\n        return 0;\n    }\n\n    if (!charCodeDefinitions.isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence does not contain ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... <bad-string-token>, <bad-url-token>,\n            case types.BadString:\n            case types.BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case types.RightCurlyBracket:\n            case types.RightParenthesis:\n            case types.RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case types.Semicolon:\n                if (balanceCloseType === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case types.Delim:\n                if (balanceCloseType === 0 && token.value === '!') {\n                    break scan;\n                }\n\n                break;\n\n            case types.Function:\n            case types.LeftParenthesis:\n            case types.LeftSquareBracket:\n            case types.LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case types.BadString:\n            case types.BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case types.RightCurlyBracket:\n            case types.RightParenthesis:\n            case types.RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            case types.Function:\n            case types.LeftParenthesis:\n            case types.LeftSquareBracket:\n            case types.LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    if (type) {\n        type = new Set(type);\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== types.Dimension) {\n            return 0;\n        }\n\n        const numberEnd = utils.consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            const reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            const unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.has(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== types.Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === types.Number) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    const numberEnd = utils.consumeNumber(token.value, 0);\n    const isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== types.Number) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    let i = token.value.charCodeAt(0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!charCodeDefinitions.isDigit(token.value.charCodeAt(i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\nconst genericSyntaxes = {\n    // token types\n    'ident-token': tokenType(types.Ident),\n    'function-token': tokenType(types.Function),\n    'at-keyword-token': tokenType(types.AtKeyword),\n    'hash-token': tokenType(types.Hash),\n    'string-token': tokenType(types.String),\n    'bad-string-token': tokenType(types.BadString),\n    'url-token': tokenType(types.Url),\n    'bad-url-token': tokenType(types.BadUrl),\n    'delim-token': tokenType(types.Delim),\n    'number-token': tokenType(types.Number),\n    'percentage-token': tokenType(types.Percentage),\n    'dimension-token': tokenType(types.Dimension),\n    'whitespace-token': tokenType(types.WhiteSpace),\n    'CDO-token': tokenType(types.CDO),\n    'CDC-token': tokenType(types.CDC),\n    'colon-token': tokenType(types.Colon),\n    'semicolon-token': tokenType(types.Semicolon),\n    'comma-token': tokenType(types.Comma),\n    '[-token': tokenType(types.LeftSquareBracket),\n    ']-token': tokenType(types.RightSquareBracket),\n    '(-token': tokenType(types.LeftParenthesis),\n    ')-token': tokenType(types.RightParenthesis),\n    '{-token': tokenType(types.LeftCurlyBracket),\n    '}-token': tokenType(types.RightCurlyBracket),\n\n    // token type aliases\n    'string': tokenType(types.String),\n    'ident': tokenType(types.Ident),\n\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': genericAnPlusB,\n    'urange': genericUrange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue,\n\n    // dimensions\n    'dimension': calc(dimension(null)),\n    'angle': calc(dimension(ANGLE)),\n    'decibel': calc(dimension(DECIBEL)),\n    'frequency': calc(dimension(FREQUENCY)),\n    'flex': calc(dimension(FLEX)),\n    'length': calc(zero(dimension(LENGTH))),\n    'resolution': calc(dimension(RESOLUTION)),\n    'semitones': calc(dimension(SEMITONES)),\n    'time': calc(dimension(TIME)),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // old IE stuff\n    '-ms-legacy-expression': func('expression')\n};\n\nmodule.exports = genericSyntaxes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2xleGVyL2dlbmVyaWMuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9sZXhlci9nZW5lcmljLmNqcz8xYTNiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZ2VuZXJpY0FuUGx1c0IgPSByZXF1aXJlKCcuL2dlbmVyaWMtYW4tcGx1cy1iLmNqcycpO1xuY29uc3QgZ2VuZXJpY1VyYW5nZSA9IHJlcXVpcmUoJy4vZ2VuZXJpYy11cmFuZ2UuY2pzJyk7XG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbmNvbnN0IGNoYXJDb2RlRGVmaW5pdGlvbnMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvdXRpbHMuY2pzJyk7XG5cbmNvbnN0IGNzc1dpZGVLZXl3b3JkcyA9IFsndW5zZXQnLCAnaW5pdGlhbCcsICdpbmhlcml0J107XG5jb25zdCBjYWxjRnVuY3Rpb25OYW1lcyA9IFsnY2FsYygnLCAnLW1vei1jYWxjKCcsICctd2Via2l0LWNhbGMoJ107XG5jb25zdCBiYWxhbmNlUGFpciA9IG5ldyBNYXAoW1xuICAgIFt0eXBlcy5GdW5jdGlvbiwgdHlwZXMuUmlnaHRQYXJlbnRoZXNpc10sXG4gICAgW3R5cGVzLkxlZnRQYXJlbnRoZXNpcywgdHlwZXMuUmlnaHRQYXJlbnRoZXNpc10sXG4gICAgW3R5cGVzLkxlZnRTcXVhcmVCcmFja2V0LCB0eXBlcy5SaWdodFNxdWFyZUJyYWNrZXRdLFxuICAgIFt0eXBlcy5MZWZ0Q3VybHlCcmFja2V0LCB0eXBlcy5SaWdodEN1cmx5QnJhY2tldF1cbl0pO1xuXG4vLyB1bml0c1xuY29uc3QgTEVOR1RIID0gWyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9jc3MtdmFsdWVzLTMvI2xlbmd0aHNcbiAgICAncHgnLCAnbW0nLCAnY20nLCAnaW4nLCAncHQnLCAncGMnLCAncScsICAvLyBhYnNvbHV0ZSBsZW5ndGggdW5pdHNcbiAgICAnZW0nLCAnZXgnLCAnY2gnLCAncmVtJywgICAgICAgICAgICAgICAgICAvLyByZWxhdGl2ZSBsZW5ndGggdW5pdHNcbiAgICAndmgnLCAndncnLCAndm1pbicsICd2bWF4JywgJ3ZtJyAgICAgICAgICAvLyB2aWV3cG9ydC1wZXJjZW50YWdlIGxlbmd0aHNcbl07XG5jb25zdCBBTkdMRSA9IFsnZGVnJywgJ2dyYWQnLCAncmFkJywgJ3R1cm4nXTsgLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy12YWx1ZXMtMy8jYW5nbGVzXG5jb25zdCBUSU1FID0gWydzJywgJ21zJ107ICAgICAgICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2Nzcy12YWx1ZXMtMy8jdGltZVxuY29uc3QgRlJFUVVFTkNZID0gWydoeicsICdraHonXTsgICAgICAgICAgICAgIC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9jc3MtdmFsdWVzLTMvI2ZyZXF1ZW5jeVxuY29uc3QgUkVTT0xVVElPTiA9IFsnZHBpJywgJ2RwY20nLCAnZHBweCcsICd4J107IC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9jc3MtdmFsdWVzLTMvI3Jlc29sdXRpb25cbmNvbnN0IEZMRVggPSBbJ2ZyJ107ICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLWdyaWQvI2ZyLXVuaXRcbmNvbnN0IERFQ0lCRUwgPSBbJ2RiJ107ICAgICAgICAgICAgICAgICAgICAgICAvLyBodHRwczovL3d3dy53My5vcmcvVFIvY3NzMy1zcGVlY2gvI21peGluZy1wcm9wcy12b2ljZS12b2x1bWVcbmNvbnN0IFNFTUlUT05FUyA9IFsnc3QnXTsgICAgICAgICAgICAgICAgICAgICAvLyBodHRwczovL3d3dy53My5vcmcvVFIvY3NzMy1zcGVlY2gvI3ZvaWNlLXByb3BzLXZvaWNlLXBpdGNoXG5cbi8vIHNhZmUgY2hhciBjb2RlIGdldHRlclxuZnVuY3Rpb24gY2hhckNvZGUoc3RyLCBpbmRleCkge1xuICAgIHJldHVybiBpbmRleCA8IHN0ci5sZW5ndGggPyBzdHIuY2hhckNvZGVBdChpbmRleCkgOiAwO1xufVxuXG5mdW5jdGlvbiBlcVN0cihhY3R1YWwsIGV4cGVjdGVkKSB7XG4gICAgcmV0dXJuIHV0aWxzLmNtcFN0cihhY3R1YWwsIDAsIGFjdHVhbC5sZW5ndGgsIGV4cGVjdGVkKTtcbn1cblxuZnVuY3Rpb24gZXFTdHJBbnkoYWN0dWFsLCBleHBlY3RlZCkge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXhwZWN0ZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGVxU3RyKGFjdHVhbCwgZXhwZWN0ZWRbaV0pKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLy8gSUUgcG9zdGZpeCBoYWNrLCBpLmUuIDEyM1xcMCBvciAxMjNweFxcOVxuZnVuY3Rpb24gaXNQb3N0Zml4SWVIYWNrKHN0ciwgb2Zmc2V0KSB7XG4gICAgaWYgKG9mZnNldCAhPT0gc3RyLmxlbmd0aCAtIDIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIHN0ci5jaGFyQ29kZUF0KG9mZnNldCkgPT09IDB4MDA1QyAmJiAgLy8gVSswMDVDIFJFVkVSU0UgU09MSURVUyAoXFwpXG4gICAgICAgIGNoYXJDb2RlRGVmaW5pdGlvbnMuaXNEaWdpdChzdHIuY2hhckNvZGVBdChvZmZzZXQgKyAxKSlcbiAgICApO1xufVxuXG5mdW5jdGlvbiBvdXRPZlJhbmdlKG9wdHMsIHZhbHVlLCBudW1FbmQpIHtcbiAgICBpZiAob3B0cyAmJiBvcHRzLnR5cGUgPT09ICdSYW5nZScpIHtcbiAgICAgICAgY29uc3QgbnVtID0gTnVtYmVyKFxuICAgICAgICAgICAgbnVtRW5kICE9PSB1bmRlZmluZWQgJiYgbnVtRW5kICE9PSB2YWx1ZS5sZW5ndGhcbiAgICAgICAgICAgICAgICA/IHZhbHVlLnN1YnN0cigwLCBudW1FbmQpXG4gICAgICAgICAgICAgICAgOiB2YWx1ZVxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChpc05hTihudW0pKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChvcHRzLm1pbiAhPT0gbnVsbCAmJiBudW0gPCBvcHRzLm1pbikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3B0cy5tYXggIT09IG51bGwgJiYgbnVtID4gb3B0cy5tYXgpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBjb25zdW1lRnVuY3Rpb24odG9rZW4sIGdldE5leHRUb2tlbikge1xuICAgIGxldCBiYWxhbmNlQ2xvc2VUeXBlID0gMDtcbiAgICBsZXQgYmFsYW5jZVN0YXNoID0gW107XG4gICAgbGV0IGxlbmd0aCA9IDA7XG5cbiAgICAvLyBiYWxhbmNlZCB0b2tlbiBjb25zdW1pbmdcbiAgICBzY2FuOlxuICAgIGRvIHtcbiAgICAgICAgc3dpdGNoICh0b2tlbi50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIHR5cGVzLlJpZ2h0Q3VybHlCcmFja2V0OlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5SaWdodFBhcmVudGhlc2lzOlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5SaWdodFNxdWFyZUJyYWNrZXQ6XG4gICAgICAgICAgICAgICAgaWYgKHRva2VuLnR5cGUgIT09IGJhbGFuY2VDbG9zZVR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWsgc2NhbjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBiYWxhbmNlQ2xvc2VUeXBlID0gYmFsYW5jZVN0YXNoLnBvcCgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIHR5cGVzLkZ1bmN0aW9uOlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5MZWZ0UGFyZW50aGVzaXM6XG4gICAgICAgICAgICBjYXNlIHR5cGVzLkxlZnRTcXVhcmVCcmFja2V0OlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5MZWZ0Q3VybHlCcmFja2V0OlxuICAgICAgICAgICAgICAgIGJhbGFuY2VTdGFzaC5wdXNoKGJhbGFuY2VDbG9zZVR5cGUpO1xuICAgICAgICAgICAgICAgIGJhbGFuY2VDbG9zZVR5cGUgPSBiYWxhbmNlUGFpci5nZXQodG9rZW4udHlwZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBsZW5ndGgrKztcbiAgICB9IHdoaWxlICh0b2tlbiA9IGdldE5leHRUb2tlbihsZW5ndGgpKTtcblxuICAgIHJldHVybiBsZW5ndGg7XG59XG5cbi8vIFRPRE86IGltcGxlbWVudFxuLy8gY2FuIGJlIHVzZWQgd2hlcmV2ZXIgPGxlbmd0aD4sIDxmcmVxdWVuY3k+LCA8YW5nbGU+LCA8dGltZT4sIDxwZXJjZW50YWdlPiwgPG51bWJlcj4sIG9yIDxpbnRlZ2VyPiB2YWx1ZXMgYXJlIGFsbG93ZWRcbi8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLyNjYWxjLW5vdGF0aW9uXG5mdW5jdGlvbiBjYWxjKG5leHQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odG9rZW4sIGdldE5leHRUb2tlbiwgb3B0cykge1xuICAgICAgICBpZiAodG9rZW4gPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRva2VuLnR5cGUgPT09IHR5cGVzLkZ1bmN0aW9uICYmIGVxU3RyQW55KHRva2VuLnZhbHVlLCBjYWxjRnVuY3Rpb25OYW1lcykpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zdW1lRnVuY3Rpb24odG9rZW4sIGdldE5leHRUb2tlbik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV4dCh0b2tlbiwgZ2V0TmV4dFRva2VuLCBvcHRzKTtcbiAgICB9O1xufVxuXG5mdW5jdGlvbiB0b2tlblR5cGUoZXhwZWN0ZWRUb2tlblR5cGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odG9rZW4pIHtcbiAgICAgICAgaWYgKHRva2VuID09PSBudWxsIHx8IHRva2VuLnR5cGUgIT09IGV4cGVjdGVkVG9rZW5UeXBlKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAxO1xuICAgIH07XG59XG5cbmZ1bmN0aW9uIGZ1bmMobmFtZSkge1xuICAgIG5hbWUgPSBuYW1lICsgJygnO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uKHRva2VuLCBnZXROZXh0VG9rZW4pIHtcbiAgICAgICAgaWYgKHRva2VuICE9PSBudWxsICYmIGVxU3RyKHRva2VuLnZhbHVlLCBuYW1lKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnN1bWVGdW5jdGlvbih0b2tlbiwgZ2V0TmV4dFRva2VuKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAwO1xuICAgIH07XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENvbXBsZXggdHlwZXNcbi8vXG5cbi8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTQvI2N1c3RvbS1pZGVudHNcbi8vIDQuMi4gQXV0aG9yLWRlZmluZWQgSWRlbnRpZmllcnM6IHRoZSA8Y3VzdG9tLWlkZW50PiB0eXBlXG4vLyBTb21lIHByb3BlcnRpZXMgYWNjZXB0IGFyYml0cmFyeSBhdXRob3ItZGVmaW5lZCBpZGVudGlmaWVycyBhcyBhIGNvbXBvbmVudCB2YWx1ZS5cbi8vIFRoaXMgZ2VuZXJpYyBkYXRhIHR5cGUgaXMgZGVub3RlZCBieSA8Y3VzdG9tLWlkZW50PiwgYW5kIHJlcHJlc2VudHMgYW55IHZhbGlkIENTUyBpZGVudGlmaWVyXG4vLyB0aGF0IHdvdWxkIG5vdCBiZSBtaXNpbnRlcnByZXRlZCBhcyBhIHByZS1kZWZpbmVkIGtleXdvcmQgaW4gdGhhdCBwcm9wZXJ0eeKAmXMgdmFsdWUgZGVmaW5pdGlvbi5cbi8vXG4vLyBTZWUgYWxzbzogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2N1c3RvbS1pZGVudFxuZnVuY3Rpb24gY3VzdG9tSWRlbnQodG9rZW4pIHtcbiAgICBpZiAodG9rZW4gPT09IG51bGwgfHwgdG9rZW4udHlwZSAhPT0gdHlwZXMuSWRlbnQpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgY29uc3QgbmFtZSA9IHRva2VuLnZhbHVlLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAvLyBUaGUgQ1NTLXdpZGUga2V5d29yZHMgYXJlIG5vdCB2YWxpZCA8Y3VzdG9tLWlkZW50PnNcbiAgICBpZiAoZXFTdHJBbnkobmFtZSwgY3NzV2lkZUtleXdvcmRzKSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvLyBUaGUgZGVmYXVsdCBrZXl3b3JkIGlzIHJlc2VydmVkIGFuZCBpcyBhbHNvIG5vdCBhIHZhbGlkIDxjdXN0b20taWRlbnQ+XG4gICAgaWYgKGVxU3RyKG5hbWUsICdkZWZhdWx0JykpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgLy8gVE9ETzogaWdub3JlIHByb3BlcnR5IHNwZWNpZmljIGtleXdvcmRzIChhcyBkZXNjcmliZWQgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2N1c3RvbS1pZGVudClcbiAgICAvLyBTcGVjaWZpY2F0aW9ucyB1c2luZyA8Y3VzdG9tLWlkZW50PiBtdXN0IHNwZWNpZnkgY2xlYXJseSB3aGF0IG90aGVyIGtleXdvcmRzXG4gICAgLy8gYXJlIGV4Y2x1ZGVkIGZyb20gPGN1c3RvbS1pZGVudD4sIGlmIGFueeKAlGZvciBleGFtcGxlIGJ5IHNheWluZyB0aGF0IGFueSBwcmUtZGVmaW5lZCBrZXl3b3Jkc1xuICAgIC8vIGluIHRoYXQgcHJvcGVydHnigJlzIHZhbHVlIGRlZmluaXRpb24gYXJlIGV4Y2x1ZGVkLiBFeGNsdWRlZCBrZXl3b3JkcyBhcmUgZXhjbHVkZWRcbiAgICAvLyBpbiBhbGwgQVNDSUkgY2FzZSBwZXJtdXRhdGlvbnMuXG5cbiAgICByZXR1cm4gMTtcbn1cblxuLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YXJpYWJsZXMvI3R5cGVkZWYtY3VzdG9tLXByb3BlcnR5LW5hbWVcbi8vIEEgY3VzdG9tIHByb3BlcnR5IGlzIGFueSBwcm9wZXJ0eSB3aG9zZSBuYW1lIHN0YXJ0cyB3aXRoIHR3byBkYXNoZXMgKFUrMDAyRCBIWVBIRU4tTUlOVVMpLCBsaWtlIC0tZm9vLlxuLy8gVGhlIDxjdXN0b20tcHJvcGVydHktbmFtZT4gcHJvZHVjdGlvbiBjb3JyZXNwb25kcyB0byB0aGlzOiBpdOKAmXMgZGVmaW5lZCBhcyBhbnkgdmFsaWQgaWRlbnRpZmllclxuLy8gdGhhdCBzdGFydHMgd2l0aCB0d28gZGFzaGVzLCBleGNlcHQgLS0gaXRzZWxmLCB3aGljaCBpcyByZXNlcnZlZCBmb3IgZnV0dXJlIHVzZSBieSBDU1MuXG4vLyBOT1RFOiBDdXJyZW50IGltcGxlbWVudGF0aW9uIHRyZWF0IGAtLWAgYXMgYSB2YWxpZCBuYW1lIHNpbmNlIG1vc3QgKGFsbD8pIG1ham9yIGJyb3dzZXJzIHRyZWF0IGl0IGFzIHZhbGlkLlxuZnVuY3Rpb24gY3VzdG9tUHJvcGVydHlOYW1lKHRva2VuKSB7XG4gICAgLy8gLi4uIGRlZmluZWQgYXMgYW55IHZhbGlkIGlkZW50aWZpZXJcbiAgICBpZiAodG9rZW4gPT09IG51bGwgfHwgdG9rZW4udHlwZSAhPT0gdHlwZXMuSWRlbnQpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgLy8gLi4uIHRoYXQgc3RhcnRzIHdpdGggdHdvIGRhc2hlcyAoVSswMDJEIEhZUEhFTi1NSU5VUylcbiAgICBpZiAoY2hhckNvZGUodG9rZW4udmFsdWUsIDApICE9PSAweDAwMkQgfHwgY2hhckNvZGUodG9rZW4udmFsdWUsIDEpICE9PSAweDAwMkQpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIDE7XG59XG5cbi8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtY29sb3ItNC8jaGV4LW5vdGF0aW9uXG4vLyBUaGUgc3ludGF4IG9mIGEgPGhleC1jb2xvcj4gaXMgYSA8aGFzaC10b2tlbj4gdG9rZW4gd2hvc2UgdmFsdWUgY29uc2lzdHMgb2YgMywgNCwgNiwgb3IgOCBoZXhhZGVjaW1hbCBkaWdpdHMuXG4vLyBJbiBvdGhlciB3b3JkcywgYSBoZXggY29sb3IgaXMgd3JpdHRlbiBhcyBhIGhhc2ggY2hhcmFjdGVyLCBcIiNcIiwgZm9sbG93ZWQgYnkgc29tZSBudW1iZXIgb2YgZGlnaXRzIDAtOSBvclxuLy8gbGV0dGVycyBhLWYgKHRoZSBjYXNlIG9mIHRoZSBsZXR0ZXJzIGRvZXNu4oCZdCBtYXR0ZXIgLSAjMDBmZjAwIGlzIGlkZW50aWNhbCB0byAjMDBGRjAwKS5cbmZ1bmN0aW9uIGhleENvbG9yKHRva2VuKSB7XG4gICAgaWYgKHRva2VuID09PSBudWxsIHx8IHRva2VuLnR5cGUgIT09IHR5cGVzLkhhc2gpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgY29uc3QgbGVuZ3RoID0gdG9rZW4udmFsdWUubGVuZ3RoO1xuXG4gICAgLy8gdmFsaWQgdmFsdWVzIChsZW5ndGgpOiAjcmdiICg0KSwgI3JnYmEgKDUpLCAjcnJnZ2JiICg3KSwgI3JyZ2diYmFhICg5KVxuICAgIGlmIChsZW5ndGggIT09IDQgJiYgbGVuZ3RoICE9PSA1ICYmIGxlbmd0aCAhPT0gNyAmJiBsZW5ndGggIT09IDkpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoIWNoYXJDb2RlRGVmaW5pdGlvbnMuaXNIZXhEaWdpdCh0b2tlbi52YWx1ZS5jaGFyQ29kZUF0KGkpKSkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gMTtcbn1cblxuZnVuY3Rpb24gaWRTZWxlY3Rvcih0b2tlbikge1xuICAgIGlmICh0b2tlbiA9PT0gbnVsbCB8fCB0b2tlbi50eXBlICE9PSB0eXBlcy5IYXNoKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIGlmICghY2hhckNvZGVEZWZpbml0aW9ucy5pc0lkZW50aWZpZXJTdGFydChjaGFyQ29kZSh0b2tlbi52YWx1ZSwgMSksIGNoYXJDb2RlKHRva2VuLnZhbHVlLCAyKSwgY2hhckNvZGUodG9rZW4udmFsdWUsIDMpKSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICByZXR1cm4gMTtcbn1cblxuLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1zeW50YXgvI2FueS12YWx1ZVxuLy8gSXQgcmVwcmVzZW50cyB0aGUgZW50aXJldHkgb2Ygd2hhdCBhIHZhbGlkIGRlY2xhcmF0aW9uIGNhbiBoYXZlIGFzIGl0cyB2YWx1ZS5cbmZ1bmN0aW9uIGRlY2xhcmF0aW9uVmFsdWUodG9rZW4sIGdldE5leHRUb2tlbikge1xuICAgIGlmICghdG9rZW4pIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgbGV0IGJhbGFuY2VDbG9zZVR5cGUgPSAwO1xuICAgIGxldCBiYWxhbmNlU3Rhc2ggPSBbXTtcbiAgICBsZXQgbGVuZ3RoID0gMDtcblxuICAgIC8vIFRoZSA8ZGVjbGFyYXRpb24tdmFsdWU+IHByb2R1Y3Rpb24gbWF0Y2hlcyBhbnkgc2VxdWVuY2Ugb2Ygb25lIG9yIG1vcmUgdG9rZW5zLFxuICAgIC8vIHNvIGxvbmcgYXMgdGhlIHNlcXVlbmNlIGRvZXMgbm90IGNvbnRhaW4gLi4uXG4gICAgc2NhbjpcbiAgICBkbyB7XG4gICAgICAgIHN3aXRjaCAodG9rZW4udHlwZSkge1xuICAgICAgICAgICAgLy8gLi4uIDxiYWQtc3RyaW5nLXRva2VuPiwgPGJhZC11cmwtdG9rZW4+LFxuICAgICAgICAgICAgY2FzZSB0eXBlcy5CYWRTdHJpbmc6XG4gICAgICAgICAgICBjYXNlIHR5cGVzLkJhZFVybDpcbiAgICAgICAgICAgICAgICBicmVhayBzY2FuO1xuXG4gICAgICAgICAgICAvLyAuLi4gdW5tYXRjaGVkIDwpLXRva2VuPiwgPF0tdG9rZW4+LCBvciA8fS10b2tlbj4sXG4gICAgICAgICAgICBjYXNlIHR5cGVzLlJpZ2h0Q3VybHlCcmFja2V0OlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5SaWdodFBhcmVudGhlc2lzOlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5SaWdodFNxdWFyZUJyYWNrZXQ6XG4gICAgICAgICAgICAgICAgaWYgKHRva2VuLnR5cGUgIT09IGJhbGFuY2VDbG9zZVR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWsgc2NhbjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBiYWxhbmNlQ2xvc2VUeXBlID0gYmFsYW5jZVN0YXNoLnBvcCgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAvLyAuLi4gb3IgdG9wLWxldmVsIDxzZW1pY29sb24tdG9rZW4+IHRva2Vuc1xuICAgICAgICAgICAgY2FzZSB0eXBlcy5TZW1pY29sb246XG4gICAgICAgICAgICAgICAgaWYgKGJhbGFuY2VDbG9zZVR5cGUgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWsgc2NhbjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgLy8gLi4uIG9yIDxkZWxpbS10b2tlbj4gdG9rZW5zIHdpdGggYSB2YWx1ZSBvZiBcIiFcIlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5EZWxpbTpcbiAgICAgICAgICAgICAgICBpZiAoYmFsYW5jZUNsb3NlVHlwZSA9PT0gMCAmJiB0b2tlbi52YWx1ZSA9PT0gJyEnKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrIHNjYW47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgdHlwZXMuRnVuY3Rpb246XG4gICAgICAgICAgICBjYXNlIHR5cGVzLkxlZnRQYXJlbnRoZXNpczpcbiAgICAgICAgICAgIGNhc2UgdHlwZXMuTGVmdFNxdWFyZUJyYWNrZXQ6XG4gICAgICAgICAgICBjYXNlIHR5cGVzLkxlZnRDdXJseUJyYWNrZXQ6XG4gICAgICAgICAgICAgICAgYmFsYW5jZVN0YXNoLnB1c2goYmFsYW5jZUNsb3NlVHlwZSk7XG4gICAgICAgICAgICAgICAgYmFsYW5jZUNsb3NlVHlwZSA9IGJhbGFuY2VQYWlyLmdldCh0b2tlbi50eXBlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGxlbmd0aCsrO1xuICAgIH0gd2hpbGUgKHRva2VuID0gZ2V0TmV4dFRva2VuKGxlbmd0aCkpO1xuXG4gICAgcmV0dXJuIGxlbmd0aDtcbn1cblxuLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy1zeW50YXgvI2FueS12YWx1ZVxuLy8gVGhlIDxhbnktdmFsdWU+IHByb2R1Y3Rpb24gaXMgaWRlbnRpY2FsIHRvIDxkZWNsYXJhdGlvbi12YWx1ZT4sIGJ1dCBhbHNvXG4vLyBhbGxvd3MgdG9wLWxldmVsIDxzZW1pY29sb24tdG9rZW4+IHRva2VucyBhbmQgPGRlbGltLXRva2VuPiB0b2tlbnNcbi8vIHdpdGggYSB2YWx1ZSBvZiBcIiFcIi4gSXQgcmVwcmVzZW50cyB0aGUgZW50aXJldHkgb2Ygd2hhdCB2YWxpZCBDU1MgY2FuIGJlIGluIGFueSBjb250ZXh0LlxuZnVuY3Rpb24gYW55VmFsdWUodG9rZW4sIGdldE5leHRUb2tlbikge1xuICAgIGlmICghdG9rZW4pIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgbGV0IGJhbGFuY2VDbG9zZVR5cGUgPSAwO1xuICAgIGxldCBiYWxhbmNlU3Rhc2ggPSBbXTtcbiAgICBsZXQgbGVuZ3RoID0gMDtcblxuICAgIC8vIFRoZSA8YW55LXZhbHVlPiBwcm9kdWN0aW9uIG1hdGNoZXMgYW55IHNlcXVlbmNlIG9mIG9uZSBvciBtb3JlIHRva2VucyxcbiAgICAvLyBzbyBsb25nIGFzIHRoZSBzZXF1ZW5jZSAuLi5cbiAgICBzY2FuOlxuICAgIGRvIHtcbiAgICAgICAgc3dpdGNoICh0b2tlbi50eXBlKSB7XG4gICAgICAgICAgICAvLyAuLi4gZG9lcyBub3QgY29udGFpbiA8YmFkLXN0cmluZy10b2tlbj4sIDxiYWQtdXJsLXRva2VuPixcbiAgICAgICAgICAgIGNhc2UgdHlwZXMuQmFkU3RyaW5nOlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5CYWRVcmw6XG4gICAgICAgICAgICAgICAgYnJlYWsgc2NhbjtcblxuICAgICAgICAgICAgLy8gLi4uIHVubWF0Y2hlZCA8KS10b2tlbj4sIDxdLXRva2VuPiwgb3IgPH0tdG9rZW4+LFxuICAgICAgICAgICAgY2FzZSB0eXBlcy5SaWdodEN1cmx5QnJhY2tldDpcbiAgICAgICAgICAgIGNhc2UgdHlwZXMuUmlnaHRQYXJlbnRoZXNpczpcbiAgICAgICAgICAgIGNhc2UgdHlwZXMuUmlnaHRTcXVhcmVCcmFja2V0OlxuICAgICAgICAgICAgICAgIGlmICh0b2tlbi50eXBlICE9PSBiYWxhbmNlQ2xvc2VUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrIHNjYW47XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgYmFsYW5jZUNsb3NlVHlwZSA9IGJhbGFuY2VTdGFzaC5wb3AoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSB0eXBlcy5GdW5jdGlvbjpcbiAgICAgICAgICAgIGNhc2UgdHlwZXMuTGVmdFBhcmVudGhlc2lzOlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5MZWZ0U3F1YXJlQnJhY2tldDpcbiAgICAgICAgICAgIGNhc2UgdHlwZXMuTGVmdEN1cmx5QnJhY2tldDpcbiAgICAgICAgICAgICAgICBiYWxhbmNlU3Rhc2gucHVzaChiYWxhbmNlQ2xvc2VUeXBlKTtcbiAgICAgICAgICAgICAgICBiYWxhbmNlQ2xvc2VUeXBlID0gYmFsYW5jZVBhaXIuZ2V0KHRva2VuLnR5cGUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgbGVuZ3RoKys7XG4gICAgfSB3aGlsZSAodG9rZW4gPSBnZXROZXh0VG9rZW4obGVuZ3RoKSk7XG5cbiAgICByZXR1cm4gbGVuZ3RoO1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBEaW1lbnNpb25zXG4vL1xuXG5mdW5jdGlvbiBkaW1lbnNpb24odHlwZSkge1xuICAgIGlmICh0eXBlKSB7XG4gICAgICAgIHR5cGUgPSBuZXcgU2V0KHR5cGUpO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbih0b2tlbiwgZ2V0TmV4dFRva2VuLCBvcHRzKSB7XG4gICAgICAgIGlmICh0b2tlbiA9PT0gbnVsbCB8fCB0b2tlbi50eXBlICE9PSB0eXBlcy5EaW1lbnNpb24pIHtcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgbnVtYmVyRW5kID0gdXRpbHMuY29uc3VtZU51bWJlcih0b2tlbi52YWx1ZSwgMCk7XG5cbiAgICAgICAgLy8gY2hlY2sgdW5pdFxuICAgICAgICBpZiAodHlwZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gY2hlY2sgZm9yIElFIHBvc3RmaXggaGFjaywgaS5lLiAxMjNweFxcMCBvciAxMjNweFxcOVxuICAgICAgICAgICAgY29uc3QgcmV2ZXJzZVNvbGlkdXNPZmZzZXQgPSB0b2tlbi52YWx1ZS5pbmRleE9mKCdcXFxcJywgbnVtYmVyRW5kKTtcbiAgICAgICAgICAgIGNvbnN0IHVuaXQgPSByZXZlcnNlU29saWR1c09mZnNldCA9PT0gLTEgfHwgIWlzUG9zdGZpeEllSGFjayh0b2tlbi52YWx1ZSwgcmV2ZXJzZVNvbGlkdXNPZmZzZXQpXG4gICAgICAgICAgICAgICAgPyB0b2tlbi52YWx1ZS5zdWJzdHIobnVtYmVyRW5kKVxuICAgICAgICAgICAgICAgIDogdG9rZW4udmFsdWUuc3Vic3RyaW5nKG51bWJlckVuZCwgcmV2ZXJzZVNvbGlkdXNPZmZzZXQpO1xuXG4gICAgICAgICAgICBpZiAodHlwZS5oYXModW5pdC50b0xvd2VyQ2FzZSgpKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGNoZWNrIHJhbmdlIGlmIHNwZWNpZmllZFxuICAgICAgICBpZiAob3V0T2ZSYW5nZShvcHRzLCB0b2tlbi52YWx1ZSwgbnVtYmVyRW5kKSkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gMTtcbiAgICB9O1xufVxuXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBQZXJjZW50YWdlXG4vL1xuXG4vLyDCpzUuNS4gUGVyY2VudGFnZXM6IHRoZSA8cGVyY2VudGFnZT4gdHlwZVxuLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtNC8jcGVyY2VudGFnZXNcbmZ1bmN0aW9uIHBlcmNlbnRhZ2UodG9rZW4sIGdldE5leHRUb2tlbiwgb3B0cykge1xuICAgIC8vIC4uLiBjb3JyZXNwb25kcyB0byB0aGUgPHBlcmNlbnRhZ2UtdG9rZW4+IHByb2R1Y3Rpb25cbiAgICBpZiAodG9rZW4gPT09IG51bGwgfHwgdG9rZW4udHlwZSAhPT0gdHlwZXMuUGVyY2VudGFnZSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvLyBjaGVjayByYW5nZSBpZiBzcGVjaWZpZWRcbiAgICBpZiAob3V0T2ZSYW5nZShvcHRzLCB0b2tlbi52YWx1ZSwgdG9rZW4udmFsdWUubGVuZ3RoIC0gMSkpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIDE7XG59XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIE51bWVyaWNcbi8vXG5cbi8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTQvI251bWJlcnNcbi8vIFRoZSB2YWx1ZSA8emVybz4gcmVwcmVzZW50cyBhIGxpdGVyYWwgbnVtYmVyIHdpdGggdGhlIHZhbHVlIDAuIEV4cHJlc3Npb25zIHRoYXQgbWVyZWx5XG4vLyBldmFsdWF0ZSB0byBhIDxudW1iZXI+IHdpdGggdGhlIHZhbHVlIDAgKGZvciBleGFtcGxlLCBjYWxjKDApKSBkbyBub3QgbWF0Y2ggPHplcm8+O1xuLy8gb25seSBsaXRlcmFsIDxudW1iZXItdG9rZW4+cyBkby5cbmZ1bmN0aW9uIHplcm8obmV4dCkge1xuICAgIGlmICh0eXBlb2YgbmV4dCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBuZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24odG9rZW4sIGdldE5leHRUb2tlbiwgb3B0cykge1xuICAgICAgICBpZiAodG9rZW4gIT09IG51bGwgJiYgdG9rZW4udHlwZSA9PT0gdHlwZXMuTnVtYmVyKSB7XG4gICAgICAgICAgICBpZiAoTnVtYmVyKHRva2VuLnZhbHVlKSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5leHQodG9rZW4sIGdldE5leHRUb2tlbiwgb3B0cyk7XG4gICAgfTtcbn1cblxuLy8gwqcgNS4zLiBSZWFsIE51bWJlcnM6IHRoZSA8bnVtYmVyPiB0eXBlXG4vLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy00LyNudW1iZXJzXG4vLyBOdW1iZXIgdmFsdWVzIGFyZSBkZW5vdGVkIGJ5IDxudW1iZXI+LCBhbmQgcmVwcmVzZW50IHJlYWwgbnVtYmVycywgcG9zc2libHkgd2l0aCBhIGZyYWN0aW9uYWwgY29tcG9uZW50LlxuLy8gLi4uIEl0IGNvcnJlc3BvbmRzIHRvIHRoZSA8bnVtYmVyLXRva2VuPiBwcm9kdWN0aW9uXG5mdW5jdGlvbiBudW1iZXIodG9rZW4sIGdldE5leHRUb2tlbiwgb3B0cykge1xuICAgIGlmICh0b2tlbiA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICBjb25zdCBudW1iZXJFbmQgPSB1dGlscy5jb25zdW1lTnVtYmVyKHRva2VuLnZhbHVlLCAwKTtcbiAgICBjb25zdCBpc051bWJlciA9IG51bWJlckVuZCA9PT0gdG9rZW4udmFsdWUubGVuZ3RoO1xuICAgIGlmICghaXNOdW1iZXIgJiYgIWlzUG9zdGZpeEllSGFjayh0b2tlbi52YWx1ZSwgbnVtYmVyRW5kKSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvLyBjaGVjayByYW5nZSBpZiBzcGVjaWZpZWRcbiAgICBpZiAob3V0T2ZSYW5nZShvcHRzLCB0b2tlbi52YWx1ZSwgbnVtYmVyRW5kKSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICByZXR1cm4gMTtcbn1cblxuLy8gwqc1LjIuIEludGVnZXJzOiB0aGUgPGludGVnZXI+IHR5cGVcbi8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTQvI2ludGVnZXJzXG5mdW5jdGlvbiBpbnRlZ2VyKHRva2VuLCBnZXROZXh0VG9rZW4sIG9wdHMpIHtcbiAgICAvLyAuLi4gY29ycmVzcG9uZHMgdG8gYSBzdWJzZXQgb2YgdGhlIDxudW1iZXItdG9rZW4+IHByb2R1Y3Rpb25cbiAgICBpZiAodG9rZW4gPT09IG51bGwgfHwgdG9rZW4udHlwZSAhPT0gdHlwZXMuTnVtYmVyKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIC8vIFRoZSBmaXJzdCBkaWdpdCBvZiBhbiBpbnRlZ2VyIG1heSBiZSBpbW1lZGlhdGVseSBwcmVjZWRlZCBieSBgLWAgb3IgYCtgIHRvIGluZGljYXRlIHRoZSBpbnRlZ2Vy4oCZcyBzaWduLlxuICAgIGxldCBpID0gdG9rZW4udmFsdWUuY2hhckNvZGVBdCgwKSA9PT0gMHgwMDJCIHx8ICAgICAgIC8vIFUrMDAyQiBQTFVTIFNJR04gKCspXG4gICAgICAgICAgICB0b2tlbi52YWx1ZS5jaGFyQ29kZUF0KDApID09PSAweDAwMkQgPyAxIDogMDsgLy8gVSswMDJEIEhZUEhFTi1NSU5VUyAoLSlcblxuICAgIC8vIFdoZW4gd3JpdHRlbiBsaXRlcmFsbHksIGFuIGludGVnZXIgaXMgb25lIG9yIG1vcmUgZGVjaW1hbCBkaWdpdHMgMCB0aHJvdWdoIDkgLi4uXG4gICAgZm9yICg7IGkgPCB0b2tlbi52YWx1ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoIWNoYXJDb2RlRGVmaW5pdGlvbnMuaXNEaWdpdCh0b2tlbi52YWx1ZS5jaGFyQ29kZUF0KGkpKSkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjaGVjayByYW5nZSBpZiBzcGVjaWZpZWRcbiAgICBpZiAob3V0T2ZSYW5nZShvcHRzLCB0b2tlbi52YWx1ZSwgaSkpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIDE7XG59XG5cbmNvbnN0IGdlbmVyaWNTeW50YXhlcyA9IHtcbiAgICAvLyB0b2tlbiB0eXBlc1xuICAgICdpZGVudC10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5JZGVudCksXG4gICAgJ2Z1bmN0aW9uLXRva2VuJzogdG9rZW5UeXBlKHR5cGVzLkZ1bmN0aW9uKSxcbiAgICAnYXQta2V5d29yZC10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5BdEtleXdvcmQpLFxuICAgICdoYXNoLXRva2VuJzogdG9rZW5UeXBlKHR5cGVzLkhhc2gpLFxuICAgICdzdHJpbmctdG9rZW4nOiB0b2tlblR5cGUodHlwZXMuU3RyaW5nKSxcbiAgICAnYmFkLXN0cmluZy10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5CYWRTdHJpbmcpLFxuICAgICd1cmwtdG9rZW4nOiB0b2tlblR5cGUodHlwZXMuVXJsKSxcbiAgICAnYmFkLXVybC10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5CYWRVcmwpLFxuICAgICdkZWxpbS10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5EZWxpbSksXG4gICAgJ251bWJlci10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5OdW1iZXIpLFxuICAgICdwZXJjZW50YWdlLXRva2VuJzogdG9rZW5UeXBlKHR5cGVzLlBlcmNlbnRhZ2UpLFxuICAgICdkaW1lbnNpb24tdG9rZW4nOiB0b2tlblR5cGUodHlwZXMuRGltZW5zaW9uKSxcbiAgICAnd2hpdGVzcGFjZS10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5XaGl0ZVNwYWNlKSxcbiAgICAnQ0RPLXRva2VuJzogdG9rZW5UeXBlKHR5cGVzLkNETyksXG4gICAgJ0NEQy10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5DREMpLFxuICAgICdjb2xvbi10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5Db2xvbiksXG4gICAgJ3NlbWljb2xvbi10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5TZW1pY29sb24pLFxuICAgICdjb21tYS10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5Db21tYSksXG4gICAgJ1stdG9rZW4nOiB0b2tlblR5cGUodHlwZXMuTGVmdFNxdWFyZUJyYWNrZXQpLFxuICAgICddLXRva2VuJzogdG9rZW5UeXBlKHR5cGVzLlJpZ2h0U3F1YXJlQnJhY2tldCksXG4gICAgJygtdG9rZW4nOiB0b2tlblR5cGUodHlwZXMuTGVmdFBhcmVudGhlc2lzKSxcbiAgICAnKS10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5SaWdodFBhcmVudGhlc2lzKSxcbiAgICAney10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5MZWZ0Q3VybHlCcmFja2V0KSxcbiAgICAnfS10b2tlbic6IHRva2VuVHlwZSh0eXBlcy5SaWdodEN1cmx5QnJhY2tldCksXG5cbiAgICAvLyB0b2tlbiB0eXBlIGFsaWFzZXNcbiAgICAnc3RyaW5nJzogdG9rZW5UeXBlKHR5cGVzLlN0cmluZyksXG4gICAgJ2lkZW50JzogdG9rZW5UeXBlKHR5cGVzLklkZW50KSxcblxuICAgIC8vIGNvbXBsZXggdHlwZXNcbiAgICAnY3VzdG9tLWlkZW50JzogY3VzdG9tSWRlbnQsXG4gICAgJ2N1c3RvbS1wcm9wZXJ0eS1uYW1lJzogY3VzdG9tUHJvcGVydHlOYW1lLFxuICAgICdoZXgtY29sb3InOiBoZXhDb2xvcixcbiAgICAnaWQtc2VsZWN0b3InOiBpZFNlbGVjdG9yLCAvLyBlbGVtZW50KCA8aWQtc2VsZWN0b3I+IClcbiAgICAnYW4tcGx1cy1iJzogZ2VuZXJpY0FuUGx1c0IsXG4gICAgJ3VyYW5nZSc6IGdlbmVyaWNVcmFuZ2UsXG4gICAgJ2RlY2xhcmF0aW9uLXZhbHVlJzogZGVjbGFyYXRpb25WYWx1ZSxcbiAgICAnYW55LXZhbHVlJzogYW55VmFsdWUsXG5cbiAgICAvLyBkaW1lbnNpb25zXG4gICAgJ2RpbWVuc2lvbic6IGNhbGMoZGltZW5zaW9uKG51bGwpKSxcbiAgICAnYW5nbGUnOiBjYWxjKGRpbWVuc2lvbihBTkdMRSkpLFxuICAgICdkZWNpYmVsJzogY2FsYyhkaW1lbnNpb24oREVDSUJFTCkpLFxuICAgICdmcmVxdWVuY3knOiBjYWxjKGRpbWVuc2lvbihGUkVRVUVOQ1kpKSxcbiAgICAnZmxleCc6IGNhbGMoZGltZW5zaW9uKEZMRVgpKSxcbiAgICAnbGVuZ3RoJzogY2FsYyh6ZXJvKGRpbWVuc2lvbihMRU5HVEgpKSksXG4gICAgJ3Jlc29sdXRpb24nOiBjYWxjKGRpbWVuc2lvbihSRVNPTFVUSU9OKSksXG4gICAgJ3NlbWl0b25lcyc6IGNhbGMoZGltZW5zaW9uKFNFTUlUT05FUykpLFxuICAgICd0aW1lJzogY2FsYyhkaW1lbnNpb24oVElNRSkpLFxuXG4gICAgLy8gcGVyY2VudGFnZVxuICAgICdwZXJjZW50YWdlJzogY2FsYyhwZXJjZW50YWdlKSxcblxuICAgIC8vIG51bWVyaWNcbiAgICAnemVybyc6IHplcm8oKSxcbiAgICAnbnVtYmVyJzogY2FsYyhudW1iZXIpLFxuICAgICdpbnRlZ2VyJzogY2FsYyhpbnRlZ2VyKSxcblxuICAgIC8vIG9sZCBJRSBzdHVmZlxuICAgICctbXMtbGVnYWN5LWV4cHJlc3Npb24nOiBmdW5jKCdleHByZXNzaW9uJylcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZ2VuZXJpY1N5bnRheGVzO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/generic.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/match-graph.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/match-graph.cjs ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst parse = __webpack_require__(/*! ../definition-syntax/parse.cjs */ \"./node_modules/css-tree/cjs/definition-syntax/parse.cjs\");\n\nconst MATCH = { type: 'Match' };\nconst MISMATCH = { type: 'Mismatch' };\nconst DISALLOW_EMPTY = { type: 'DisallowEmpty' };\n\nconst LEFTPARENTHESIS = 40;  // (\nconst RIGHTPARENTHESIS = 41; // )\n\nfunction createCondition(match, thenBranch, elseBranch) {\n    // reduce node count\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\n        return match;\n    }\n\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\n        return match;\n    }\n\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\n        thenBranch = match.then;\n        match = match.match;\n    }\n\n    return {\n        type: 'If',\n        match,\n        then: thenBranch,\n        else: elseBranch\n    };\n}\n\nfunction isFunctionType(name) {\n    return (\n        name.length > 2 &&\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\n    );\n}\n\nfunction isEnumCapatible(term) {\n    return (\n        term.type === 'Keyword' ||\n        term.type === 'AtKeyword' ||\n        term.type === 'Function' ||\n        term.type === 'Type' && isFunctionType(term.name)\n    );\n}\n\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\n    switch (combinator) {\n        case ' ': {\n            // Juxtaposing components means that all of them must occur, in the given order.\n            //\n            // a b c\n            // =\n            // match a\n            //   then match b\n            //     then match c\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            //   else MISMATCH\n            let result = MATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n\n                result = createCondition(\n                    term,\n                    result,\n                    MISMATCH\n                );\n            }\n            return result;\n        }\n\n        case '|': {\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\n            //\n            // a | b | c\n            // =\n            // match a\n            //   then MATCH\n            //   else match b\n            //     then MATCH\n            //     else match c\n            //       then MATCH\n            //       else MISMATCH\n\n            let result = MISMATCH;\n            let map = null;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                let term = terms[i];\n\n                // reduce sequence of keywords into a Enum\n                if (isEnumCapatible(term)) {\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\n                        map = Object.create(null);\n                        result = createCondition(\n                            {\n                                type: 'Enum',\n                                map\n                            },\n                            MATCH,\n                            result\n                        );\n                    }\n\n                    if (map !== null) {\n                        const key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\n                        if (key in map === false) {\n                            map[key] = term;\n                            continue;\n                        }\n                    }\n                }\n\n                map = null;\n\n                // create a new conditonal node\n                result = createCondition(\n                    term,\n                    MATCH,\n                    result\n                );\n            }\n            return result;\n        }\n\n        case '&&': {\n            // A double ampersand (&&) separates two or more components,\n            // all of which must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since &&-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: true\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a && b && c\n            // =\n            // match a\n            //   then [b && c]\n            //   else match b\n            //     then [a && c]\n            //     else match c\n            //       then [a && b]\n            //       else MISMATCH\n            //\n            // a && b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MISMATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            let result = MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        false\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            }\n            return result;\n        }\n\n        case '||': {\n            // A double bar (||) separates two or more options:\n            // one or more of them must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since ||-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: false\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a || b || c\n            // =\n            // match a\n            //   then [b || c]\n            //   else match b\n            //     then [a || c]\n            //     else match c\n            //       then [a || b]\n            //       else MISMATCH\n            //\n            // a || b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MATCH\n            //     else MISMATCH\n            let result = atLeastOneTermMatched ? MATCH : MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        true\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            }\n            return result;\n        }\n    }\n}\n\nfunction buildMultiplierMatchGraph(node) {\n    let result = MATCH;\n    let matchTerm = buildMatchGraphInternal(node.term);\n\n    if (node.max === 0) {\n        // disable repeating of empty match to prevent infinite loop\n        matchTerm = createCondition(\n            matchTerm,\n            DISALLOW_EMPTY,\n            MISMATCH\n        );\n\n        // an occurrence count is not limited, make a cycle;\n        // to collect more terms on each following matching mismatch\n        result = createCondition(\n            matchTerm,\n            null, // will be a loop\n            MISMATCH\n        );\n\n        result.then = createCondition(\n            MATCH,\n            MATCH,\n            result // make a loop\n        );\n\n        if (node.comma) {\n            result.then.else = createCondition(\n                { type: 'Comma', syntax: node },\n                result,\n                MISMATCH\n            );\n        }\n    } else {\n        // create a match node chain for [min .. max] interval with optional matches\n        for (let i = node.min || 1; i <= node.max; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                createCondition(\n                    MATCH,\n                    MATCH,\n                    result\n                ),\n                MISMATCH\n            );\n        }\n    }\n\n    if (node.min === 0) {\n        // allow zero match\n        result = createCondition(\n            MATCH,\n            MATCH,\n            result\n        );\n    } else {\n        // create a match node chain to collect [0 ... min - 1] required matches\n        for (let i = 0; i < node.min - 1; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                result,\n                MISMATCH\n            );\n        }\n    }\n\n    return result;\n}\n\nfunction buildMatchGraphInternal(node) {\n    if (typeof node === 'function') {\n        return {\n            type: 'Generic',\n            fn: node\n        };\n    }\n\n    switch (node.type) {\n        case 'Group': {\n            let result = buildGroupMatchGraph(\n                node.combinator,\n                node.terms.map(buildMatchGraphInternal),\n                false\n            );\n\n            if (node.disallowEmpty) {\n                result = createCondition(\n                    result,\n                    DISALLOW_EMPTY,\n                    MISMATCH\n                );\n            }\n\n            return result;\n        }\n\n        case 'Multiplier':\n            return buildMultiplierMatchGraph(node);\n\n        case 'Type':\n        case 'Property':\n            return {\n                type: node.type,\n                name: node.name,\n                syntax: node\n            };\n\n        case 'Keyword':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'AtKeyword':\n            return {\n                type: node.type,\n                name: '@' + node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'Function':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase() + '(',\n                syntax: node\n            };\n\n        case 'String':\n            // convert a one char length String to a Token\n            if (node.value.length === 3) {\n                return {\n                    type: 'Token',\n                    value: node.value.charAt(1),\n                    syntax: node\n                };\n            }\n\n            // otherwise use it as is\n            return {\n                type: node.type,\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\n                syntax: node\n            };\n\n        case 'Token':\n            return {\n                type: node.type,\n                value: node.value,\n                syntax: node\n            };\n\n        case 'Comma':\n            return {\n                type: node.type,\n                syntax: node\n            };\n\n        default:\n            throw new Error('Unknown node type:', node.type);\n    }\n}\n\nfunction buildMatchGraph(syntaxTree, ref) {\n    if (typeof syntaxTree === 'string') {\n        syntaxTree = parse.parse(syntaxTree);\n    }\n\n    return {\n        type: 'MatchGraph',\n        match: buildMatchGraphInternal(syntaxTree),\n        syntax: ref || null,\n        source: syntaxTree\n    };\n}\n\nexports.DISALLOW_EMPTY = DISALLOW_EMPTY;\nexports.MATCH = MATCH;\nexports.MISMATCH = MISMATCH;\nexports.buildMatchGraph = buildMatchGraph;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/match-graph.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/match.cjs":
/*!***************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/match.cjs ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst matchGraph = __webpack_require__(/*! ./match-graph.cjs */ \"./node_modules/css-tree/cjs/lexer/match-graph.cjs\");\nconst types = __webpack_require__(/*! ../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n\nconst { hasOwnProperty } = Object.prototype;\nconst STUB = 0;\nconst TOKEN = 1;\nconst OPEN_SYNTAX = 2;\nconst CLOSE_SYNTAX = 3;\n\nconst EXIT_REASON_MATCH = 'Match';\nconst EXIT_REASON_MISMATCH = 'Mismatch';\nconst EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\n\nconst ITERATION_LIMIT = 15000;\n\nfunction reverseList(list) {\n    let prev = null;\n    let next = null;\n    let item = list;\n\n    while (item !== null) {\n        next = item.prev;\n        item.prev = prev;\n        prev = item;\n        item = next;\n    }\n\n    return prev;\n}\n\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\n    if (testStr.length !== referenceStr.length) {\n        return false;\n    }\n\n    for (let i = 0; i < testStr.length; i++) {\n        const referenceCode = referenceStr.charCodeAt(i);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isContextEdgeDelim(token) {\n    if (token.type !== types.Delim) {\n        return false;\n    }\n\n    // Fix matching for unicode-range: U+30??, U+FF00-FF9F\n    // Probably we need to check out previous match instead\n    return token.value !== '?';\n}\n\nfunction isCommaContextStart(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === types.Comma ||\n        token.type === types.Function ||\n        token.type === types.LeftParenthesis ||\n        token.type === types.LeftSquareBracket ||\n        token.type === types.LeftCurlyBracket ||\n        isContextEdgeDelim(token)\n    );\n}\n\nfunction isCommaContextEnd(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === types.RightParenthesis ||\n        token.type === types.RightSquareBracket ||\n        token.type === types.RightCurlyBracket ||\n        token.type === types.Delim\n    );\n}\n\nfunction internalMatch(tokens, state, syntaxes) {\n    function moveToNextToken() {\n        do {\n            tokenIndex++;\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n        } while (token !== null && (token.type === types.WhiteSpace || token.type === types.Comment));\n    }\n\n    function getNextToken(offset) {\n        const nextIndex = tokenIndex + offset;\n\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\n    }\n\n    function stateSnapshotFromSyntax(nextState, prev) {\n        return {\n            nextState,\n            matchStack,\n            syntaxStack,\n            thenStack,\n            tokenIndex,\n            prev\n        };\n    }\n\n    function pushThenStack(nextState) {\n        thenStack = {\n            nextState,\n            matchStack,\n            syntaxStack,\n            prev: thenStack\n        };\n    }\n\n    function pushElseStack(nextState) {\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\n    }\n\n    function addTokenToMatch() {\n        matchStack = {\n            type: TOKEN,\n            syntax: state.syntax,\n            token,\n            prev: matchStack\n        };\n\n        moveToNextToken();\n        syntaxStash = null;\n\n        if (tokenIndex > longestMatch) {\n            longestMatch = tokenIndex;\n        }\n    }\n\n    function openSyntax() {\n        syntaxStack = {\n            syntax: state.syntax,\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\n            prev: syntaxStack\n        };\n\n        matchStack = {\n            type: OPEN_SYNTAX,\n            syntax: state.syntax,\n            token: matchStack.token,\n            prev: matchStack\n        };\n    }\n\n    function closeSyntax() {\n        if (matchStack.type === OPEN_SYNTAX) {\n            matchStack = matchStack.prev;\n        } else {\n            matchStack = {\n                type: CLOSE_SYNTAX,\n                syntax: syntaxStack.syntax,\n                token: matchStack.token,\n                prev: matchStack\n            };\n        }\n\n        syntaxStack = syntaxStack.prev;\n    }\n\n    let syntaxStack = null;\n    let thenStack = null;\n    let elseStack = null;\n\n    // null – stashing allowed, nothing stashed\n    // false – stashing disabled, nothing stashed\n    // anithing else – fail stashable syntaxes, some syntax stashed\n    let syntaxStash = null;\n\n    let iterationCount = 0; // count iterations and prevent infinite loop\n    let exitReason = null;\n\n    let token = null;\n    let tokenIndex = -1;\n    let longestMatch = 0;\n    let matchStack = {\n        type: STUB,\n        syntax: null,\n        token: null,\n        prev: null\n    };\n\n    moveToNextToken();\n\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\n        // function mapList(list, fn) {\n        //     const result = [];\n        //     while (list) {\n        //         result.unshift(fn(list));\n        //         list = list.prev;\n        //     }\n        //     return result;\n        // }\n        // console.log('--\\n',\n        //     '#' + iterationCount,\n        //     require('util').inspect({\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\n        //         token: token && token.value,\n        //         tokenIndex,\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\n        //     }, { depth: null })\n        // );\n        switch (state.type) {\n            case 'Match':\n                if (thenStack === null) {\n                    // turn to MISMATCH when some tokens left unmatched\n                    if (token !== null) {\n                        // doesn't mismatch if just one token left and it's an IE hack\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\n                            state = matchGraph.MISMATCH;\n                            break;\n                        }\n                    }\n\n                    // break the main loop, return a result - MATCH\n                    exitReason = EXIT_REASON_MATCH;\n                    break;\n                }\n\n                // go to next syntax (`then` branch)\n                state = thenStack.nextState;\n\n                // check match is not empty\n                if (state === matchGraph.DISALLOW_EMPTY) {\n                    if (thenStack.matchStack === matchStack) {\n                        state = matchGraph.MISMATCH;\n                        break;\n                    } else {\n                        state = matchGraph.MATCH;\n                    }\n                }\n\n                // close syntax if needed\n                while (thenStack.syntaxStack !== syntaxStack) {\n                    closeSyntax();\n                }\n\n                // pop stack\n                thenStack = thenStack.prev;\n                break;\n\n            case 'Mismatch':\n                // when some syntax is stashed\n                if (syntaxStash !== null && syntaxStash !== false) {\n                    // there is no else branches or a branch reduce match stack\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\n                        // restore state from the stash\n                        elseStack = syntaxStash;\n                        syntaxStash = false; // disable stashing\n                    }\n                } else if (elseStack === null) {\n                    // no else branches -> break the main loop\n                    // return a result - MISMATCH\n                    exitReason = EXIT_REASON_MISMATCH;\n                    break;\n                }\n\n                // go to next syntax (`else` branch)\n                state = elseStack.nextState;\n\n                // restore all the rest stack states\n                thenStack = elseStack.thenStack;\n                syntaxStack = elseStack.syntaxStack;\n                matchStack = elseStack.matchStack;\n                tokenIndex = elseStack.tokenIndex;\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n\n                // pop stack\n                elseStack = elseStack.prev;\n                break;\n\n            case 'MatchGraph':\n                state = state.match;\n                break;\n\n            case 'If':\n                // IMPORTANT: else stack push must go first,\n                // since it stores the state of thenStack before changes\n                if (state.else !== matchGraph.MISMATCH) {\n                    pushElseStack(state.else);\n                }\n\n                if (state.then !== matchGraph.MATCH) {\n                    pushThenStack(state.then);\n                }\n\n                state = state.match;\n                break;\n\n            case 'MatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state,\n                    index: 0,\n                    mask: 0\n                };\n                break;\n\n            case 'MatchOnceBuffer': {\n                const terms = state.syntax.terms;\n\n                if (state.index === terms.length) {\n                    // no matches at all or it's required all terms to be matched\n                    if (state.mask === 0 || state.syntax.all) {\n                        state = matchGraph.MISMATCH;\n                        break;\n                    }\n\n                    // a partial match is ok\n                    state = matchGraph.MATCH;\n                    break;\n                }\n\n                // all terms are matched\n                if (state.mask === (1 << terms.length) - 1) {\n                    state = matchGraph.MATCH;\n                    break;\n                }\n\n                for (; state.index < terms.length; state.index++) {\n                    const matchFlag = 1 << state.index;\n\n                    if ((state.mask & matchFlag) === 0) {\n                        // IMPORTANT: else stack push must go first,\n                        // since it stores the state of thenStack before changes\n                        pushElseStack(state);\n                        pushThenStack({\n                            type: 'AddMatchOnce',\n                            syntax: state.syntax,\n                            mask: state.mask | matchFlag\n                        });\n\n                        // match\n                        state = terms[state.index++];\n                        break;\n                    }\n                }\n                break;\n            }\n\n            case 'AddMatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state.syntax,\n                    index: 0,\n                    mask: state.mask\n                };\n                break;\n\n            case 'Enum':\n                if (token !== null) {\n                    let name = token.value.toLowerCase();\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (name.indexOf('\\\\') !== -1) {\n                        name = name.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (hasOwnProperty.call(state.map, name)) {\n                        state = state.map[name];\n                        break;\n                    }\n                }\n\n                state = matchGraph.MISMATCH;\n                break;\n\n            case 'Generic': {\n                const opts = syntaxStack !== null ? syntaxStack.opts : null;\n                const lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\n\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = matchGraph.MATCH;\n                } else {\n                    state = matchGraph.MISMATCH;\n                }\n\n                break;\n            }\n\n            case 'Type':\n            case 'Property': {\n                const syntaxDict = state.type === 'Type' ? 'types' : 'properties';\n                const dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\n\n                if (!dictSyntax || !dictSyntax.match) {\n                    throw new Error(\n                        'Bad syntax reference: ' +\n                        (state.type === 'Type'\n                            ? '<' + state.name + '>'\n                            : '<\\'' + state.name + '\\'>')\n                    );\n                }\n\n                // stash a syntax for types with low priority\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\n                    const lowPriorityMatching =\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\n                        // can only claim the keyword if no other unfulfilled production can claim it.\n                        (state.name === 'custom-ident' && token.type === types.Ident) ||\n\n                        // https://drafts.csswg.org/css-values-4/#lengths\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\n                        // it must parse as a <number>\n                        (state.name === 'length' && token.value === '0');\n\n                    if (lowPriorityMatching) {\n                        if (syntaxStash === null) {\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\n                        }\n\n                        state = matchGraph.MISMATCH;\n                        break;\n                    }\n                }\n\n                openSyntax();\n                state = dictSyntax.match;\n                break;\n            }\n\n            case 'Keyword': {\n                const name = state.name;\n\n                if (token !== null) {\n                    let keywordName = token.value;\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (keywordName.indexOf('\\\\') !== -1) {\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\n                        addTokenToMatch();\n                        state = matchGraph.MATCH;\n                        break;\n                    }\n                }\n\n                state = matchGraph.MISMATCH;\n                break;\n            }\n\n            case 'AtKeyword':\n            case 'Function':\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\n                    addTokenToMatch();\n                    state = matchGraph.MATCH;\n                    break;\n                }\n\n                state = matchGraph.MISMATCH;\n                break;\n\n            case 'Token':\n                if (token !== null && token.value === state.value) {\n                    addTokenToMatch();\n                    state = matchGraph.MATCH;\n                    break;\n                }\n\n                state = matchGraph.MISMATCH;\n                break;\n\n            case 'Comma':\n                if (token !== null && token.type === types.Comma) {\n                    if (isCommaContextStart(matchStack.token)) {\n                        state = matchGraph.MISMATCH;\n                    } else {\n                        addTokenToMatch();\n                        state = isCommaContextEnd(token) ? matchGraph.MISMATCH : matchGraph.MATCH;\n                    }\n                } else {\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? matchGraph.MATCH : matchGraph.MISMATCH;\n                }\n\n                break;\n\n            case 'String':\n                let string = '';\n                let lastTokenIndex = tokenIndex;\n\n                for (; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\n                    string += tokens[lastTokenIndex].value;\n                }\n\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = matchGraph.MATCH;\n                } else {\n                    state = matchGraph.MISMATCH;\n                }\n\n                break;\n\n            default:\n                throw new Error('Unknown node type: ' + state.type);\n        }\n    }\n\n    switch (exitReason) {\n        case null:\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\n            matchStack = null;\n            break;\n\n        case EXIT_REASON_MATCH:\n            while (syntaxStack !== null) {\n                closeSyntax();\n            }\n            break;\n\n        default:\n            matchStack = null;\n    }\n\n    return {\n        tokens,\n        reason: exitReason,\n        iterations: iterationCount,\n        match: matchStack,\n        longestMatch\n    };\n}\n\nfunction matchAsList(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match !== null) {\n        let item = reverseList(matchResult.match).prev;\n\n        matchResult.match = [];\n\n        while (item !== null) {\n            switch (item.type) {\n                case OPEN_SYNTAX:\n                case CLOSE_SYNTAX:\n                    matchResult.match.push({\n                        type: item.type,\n                        syntax: item.syntax\n                    });\n                    break;\n\n                default:\n                    matchResult.match.push({\n                        token: item.token.value,\n                        node: item.token.node\n                    });\n                    break;\n            }\n\n            item = item.prev;\n        }\n    }\n\n    return matchResult;\n}\n\nfunction matchAsTree(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match === null) {\n        return matchResult;\n    }\n\n    let item = matchResult.match;\n    let host = matchResult.match = {\n        syntax: matchGraph.syntax || null,\n        match: []\n    };\n    const hostStack = [host];\n\n    // revert a list and start with 2nd item since 1st is a stub item\n    item = reverseList(item).prev;\n\n    // build a tree\n    while (item !== null) {\n        switch (item.type) {\n            case OPEN_SYNTAX:\n                host.match.push(host = {\n                    syntax: item.syntax,\n                    match: []\n                });\n                hostStack.push(host);\n                break;\n\n            case CLOSE_SYNTAX:\n                hostStack.pop();\n                host = hostStack[hostStack.length - 1];\n                break;\n\n            default:\n                host.match.push({\n                    syntax: item.syntax || null,\n                    token: item.token.value,\n                    node: item.token.node\n                });\n        }\n\n        item = item.prev;\n    }\n\n    return matchResult;\n}\n\nexports.matchAsList = matchAsList;\nexports.matchAsTree = matchAsTree;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/match.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/prepare-tokens.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/prepare-tokens.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst index = __webpack_require__(/*! ../tokenizer/index.cjs */ \"./node_modules/css-tree/cjs/tokenizer/index.cjs\");\n\nconst astToTokens = {\n    decorator: function(handlers) {\n        const tokens = [];\n        let curNode = null;\n\n        return {\n            ...handlers,\n            node(node) {\n                const tmp = curNode;\n                curNode = node;\n                handlers.node.call(this, node);\n                curNode = tmp;\n            },\n            emit(value, type, auto) {\n                tokens.push({\n                    type,\n                    value,\n                    node: auto ? null : curNode\n                });\n            },\n            result() {\n                return tokens;\n            }\n        };\n    }\n};\n\nfunction stringToTokens(str) {\n    const tokens = [];\n\n    index.tokenize(str, (type, start, end) =>\n        tokens.push({\n            type,\n            value: str.slice(start, end),\n            node: null\n        })\n    );\n\n    return tokens;\n}\n\nfunction prepareTokens(value, syntax) {\n    if (typeof value === 'string') {\n        return stringToTokens(value);\n    }\n\n    return syntax.generate(value, astToTokens);\n}\n\nmodule.exports = prepareTokens;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2xleGVyL3ByZXBhcmUtdG9rZW5zLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvbGV4ZXIvcHJlcGFyZS10b2tlbnMuY2pzPzFhYjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbmRleCA9IHJlcXVpcmUoJy4uL3Rva2VuaXplci9pbmRleC5janMnKTtcblxuY29uc3QgYXN0VG9Ub2tlbnMgPSB7XG4gICAgZGVjb3JhdG9yOiBmdW5jdGlvbihoYW5kbGVycykge1xuICAgICAgICBjb25zdCB0b2tlbnMgPSBbXTtcbiAgICAgICAgbGV0IGN1ck5vZGUgPSBudWxsO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5oYW5kbGVycyxcbiAgICAgICAgICAgIG5vZGUobm9kZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRtcCA9IGN1ck5vZGU7XG4gICAgICAgICAgICAgICAgY3VyTm9kZSA9IG5vZGU7XG4gICAgICAgICAgICAgICAgaGFuZGxlcnMubm9kZS5jYWxsKHRoaXMsIG5vZGUpO1xuICAgICAgICAgICAgICAgIGN1ck5vZGUgPSB0bXA7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW1pdCh2YWx1ZSwgdHlwZSwgYXV0bykge1xuICAgICAgICAgICAgICAgIHRva2Vucy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICAgICAgICAgIG5vZGU6IGF1dG8gPyBudWxsIDogY3VyTm9kZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc3VsdCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdG9rZW5zO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbn07XG5cbmZ1bmN0aW9uIHN0cmluZ1RvVG9rZW5zKHN0cikge1xuICAgIGNvbnN0IHRva2VucyA9IFtdO1xuXG4gICAgaW5kZXgudG9rZW5pemUoc3RyLCAodHlwZSwgc3RhcnQsIGVuZCkgPT5cbiAgICAgICAgdG9rZW5zLnB1c2goe1xuICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgIHZhbHVlOiBzdHIuc2xpY2Uoc3RhcnQsIGVuZCksXG4gICAgICAgICAgICBub2RlOiBudWxsXG4gICAgICAgIH0pXG4gICAgKTtcblxuICAgIHJldHVybiB0b2tlbnM7XG59XG5cbmZ1bmN0aW9uIHByZXBhcmVUb2tlbnModmFsdWUsIHN5bnRheCkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBzdHJpbmdUb1Rva2Vucyh2YWx1ZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN5bnRheC5nZW5lcmF0ZSh2YWx1ZSwgYXN0VG9Ub2tlbnMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHByZXBhcmVUb2tlbnM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/prepare-tokens.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/search.cjs":
/*!****************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/search.cjs ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst List = __webpack_require__(/*! ../utils/List.cjs */ \"./node_modules/css-tree/cjs/utils/List.cjs\");\n\nfunction getFirstMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getFirstMatchNode(matchNode.match[0]);\n}\n\nfunction getLastMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\n\nfunction matchFragments(lexer, ast, match, type, name) {\n    function findFragments(matchNode) {\n        if (matchNode.syntax !== null &&\n            matchNode.syntax.type === type &&\n            matchNode.syntax.name === name) {\n            const start = getFirstMatchNode(matchNode);\n            const end = getLastMatchNode(matchNode);\n\n            lexer.syntax.walk(ast, function(node, item, list) {\n                if (node === start) {\n                    const nodes = new List.List();\n\n                    do {\n                        nodes.appendData(item.data);\n\n                        if (item.data === end) {\n                            break;\n                        }\n\n                        item = item.next;\n                    } while (item !== null);\n\n                    fragments.push({\n                        parent: list,\n                        nodes\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(matchNode.match)) {\n            matchNode.match.forEach(findFragments);\n        }\n    }\n\n    const fragments = [];\n\n    if (match.matched !== null) {\n        findFragments(match.matched);\n    }\n\n    return fragments;\n}\n\nexports.matchFragments = matchFragments;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2xleGVyL3NlYXJjaC5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2xleGVyL3NlYXJjaC5janM/ZmY3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IExpc3QgPSByZXF1aXJlKCcuLi91dGlscy9MaXN0LmNqcycpO1xuXG5mdW5jdGlvbiBnZXRGaXJzdE1hdGNoTm9kZShtYXRjaE5vZGUpIHtcbiAgICBpZiAoJ25vZGUnIGluIG1hdGNoTm9kZSkge1xuICAgICAgICByZXR1cm4gbWF0Y2hOb2RlLm5vZGU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdldEZpcnN0TWF0Y2hOb2RlKG1hdGNoTm9kZS5tYXRjaFswXSk7XG59XG5cbmZ1bmN0aW9uIGdldExhc3RNYXRjaE5vZGUobWF0Y2hOb2RlKSB7XG4gICAgaWYgKCdub2RlJyBpbiBtYXRjaE5vZGUpIHtcbiAgICAgICAgcmV0dXJuIG1hdGNoTm9kZS5ub2RlO1xuICAgIH1cblxuICAgIHJldHVybiBnZXRMYXN0TWF0Y2hOb2RlKG1hdGNoTm9kZS5tYXRjaFttYXRjaE5vZGUubWF0Y2gubGVuZ3RoIC0gMV0pO1xufVxuXG5mdW5jdGlvbiBtYXRjaEZyYWdtZW50cyhsZXhlciwgYXN0LCBtYXRjaCwgdHlwZSwgbmFtZSkge1xuICAgIGZ1bmN0aW9uIGZpbmRGcmFnbWVudHMobWF0Y2hOb2RlKSB7XG4gICAgICAgIGlmIChtYXRjaE5vZGUuc3ludGF4ICE9PSBudWxsICYmXG4gICAgICAgICAgICBtYXRjaE5vZGUuc3ludGF4LnR5cGUgPT09IHR5cGUgJiZcbiAgICAgICAgICAgIG1hdGNoTm9kZS5zeW50YXgubmFtZSA9PT0gbmFtZSkge1xuICAgICAgICAgICAgY29uc3Qgc3RhcnQgPSBnZXRGaXJzdE1hdGNoTm9kZShtYXRjaE5vZGUpO1xuICAgICAgICAgICAgY29uc3QgZW5kID0gZ2V0TGFzdE1hdGNoTm9kZShtYXRjaE5vZGUpO1xuXG4gICAgICAgICAgICBsZXhlci5zeW50YXgud2Fsayhhc3QsIGZ1bmN0aW9uKG5vZGUsIGl0ZW0sIGxpc3QpIHtcbiAgICAgICAgICAgICAgICBpZiAobm9kZSA9PT0gc3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm9kZXMgPSBuZXcgTGlzdC5MaXN0KCk7XG5cbiAgICAgICAgICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZXMuYXBwZW5kRGF0YShpdGVtLmRhdGEpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5kYXRhID09PSBlbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSA9IGl0ZW0ubmV4dDtcbiAgICAgICAgICAgICAgICAgICAgfSB3aGlsZSAoaXRlbSAhPT0gbnVsbCk7XG5cbiAgICAgICAgICAgICAgICAgICAgZnJhZ21lbnRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50OiBsaXN0LFxuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZXNcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShtYXRjaE5vZGUubWF0Y2gpKSB7XG4gICAgICAgICAgICBtYXRjaE5vZGUubWF0Y2guZm9yRWFjaChmaW5kRnJhZ21lbnRzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGZyYWdtZW50cyA9IFtdO1xuXG4gICAgaWYgKG1hdGNoLm1hdGNoZWQgIT09IG51bGwpIHtcbiAgICAgICAgZmluZEZyYWdtZW50cyhtYXRjaC5tYXRjaGVkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnJhZ21lbnRzO1xufVxuXG5leHBvcnRzLm1hdGNoRnJhZ21lbnRzID0gbWF0Y2hGcmFnbWVudHM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/search.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/structure.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/structure.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst List = __webpack_require__(/*! ../utils/List.cjs */ \"./node_modules/css-tree/cjs/utils/List.cjs\");\n\nconst { hasOwnProperty } = Object.prototype;\n\nfunction isValidNumber(value) {\n    // Number.isInteger(value) && value >= 0\n    return (\n        typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value &&\n        value >= 0\n    );\n}\n\nfunction isValidLocation(loc) {\n    return (\n        Boolean(loc) &&\n        isValidNumber(loc.offset) &&\n        isValidNumber(loc.line) &&\n        isValidNumber(loc.column)\n    );\n}\n\nfunction createNodeStructureChecker(type, fields) {\n    return function checkNode(node, warn) {\n        if (!node || node.constructor !== Object) {\n            return warn(node, 'Type of node should be an Object');\n        }\n\n        for (let key in node) {\n            let valid = true;\n\n            if (hasOwnProperty.call(node, key) === false) {\n                continue;\n            }\n\n            if (key === 'type') {\n                if (node.type !== type) {\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\n                }\n            } else if (key === 'loc') {\n                if (node.loc === null) {\n                    continue;\n                } else if (node.loc && node.loc.constructor === Object) {\n                    if (typeof node.loc.source !== 'string') {\n                        key += '.source';\n                    } else if (!isValidLocation(node.loc.start)) {\n                        key += '.start';\n                    } else if (!isValidLocation(node.loc.end)) {\n                        key += '.end';\n                    } else {\n                        continue;\n                    }\n                }\n\n                valid = false;\n            } else if (fields.hasOwnProperty(key)) {\n                valid = false;\n\n                for (let i = 0; !valid && i < fields[key].length; i++) {\n                    const fieldType = fields[key][i];\n\n                    switch (fieldType) {\n                        case String:\n                            valid = typeof node[key] === 'string';\n                            break;\n\n                        case Boolean:\n                            valid = typeof node[key] === 'boolean';\n                            break;\n\n                        case null:\n                            valid = node[key] === null;\n                            break;\n\n                        default:\n                            if (typeof fieldType === 'string') {\n                                valid = node[key] && node[key].type === fieldType;\n                            } else if (Array.isArray(fieldType)) {\n                                valid = node[key] instanceof List.List;\n                            }\n                    }\n                }\n            } else {\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\n            }\n\n            if (!valid) {\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\n            }\n        }\n\n        for (const key in fields) {\n            if (hasOwnProperty.call(fields, key) &&\n                hasOwnProperty.call(node, key) === false) {\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\n            }\n        }\n    };\n}\n\nfunction processStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const fields = {\n        type: String,\n        loc: true\n    };\n    const docs = {\n        type: '\"' + name + '\"'\n    };\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        const docsTypes = [];\n        const fieldTypes = fields[key] = Array.isArray(structure[key])\n            ? structure[key].slice()\n            : [structure[key]];\n\n        for (let i = 0; i < fieldTypes.length; i++) {\n            const fieldType = fieldTypes[i];\n            if (fieldType === String || fieldType === Boolean) {\n                docsTypes.push(fieldType.name);\n            } else if (fieldType === null) {\n                docsTypes.push('null');\n            } else if (typeof fieldType === 'string') {\n                docsTypes.push('<' + fieldType + '>');\n            } else if (Array.isArray(fieldType)) {\n                docsTypes.push('List'); // TODO: use type enum\n            } else {\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\n            }\n        }\n\n        docs[key] = docsTypes.join(' | ');\n    }\n\n    return {\n        docs,\n        check: createNodeStructureChecker(name, fields)\n    };\n}\n\nfunction getStructureFromConfig(config) {\n    const structure = {};\n\n    if (config.node) {\n        for (const name in config.node) {\n            if (hasOwnProperty.call(config.node, name)) {\n                const nodeType = config.node[name];\n\n                if (nodeType.structure) {\n                    structure[name] = processStructure(name, nodeType);\n                } else {\n                    throw new Error('Missed `structure` field in `' + name + '` node type definition');\n                }\n            }\n        }\n    }\n\n    return structure;\n}\n\nexports.getStructureFromConfig = getStructureFromConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/structure.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/lexer/trace.cjs":
/*!***************************************************!*\
  !*** ./node_modules/css-tree/cjs/lexer/trace.cjs ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction getTrace(node) {\n    function shouldPutToTrace(syntax) {\n        if (syntax === null) {\n            return false;\n        }\n\n        return (\n            syntax.type === 'Type' ||\n            syntax.type === 'Property' ||\n            syntax.type === 'Keyword'\n        );\n    }\n\n    function hasMatch(matchNode) {\n        if (Array.isArray(matchNode.match)) {\n            // use for-loop for better perfomance\n            for (let i = 0; i < matchNode.match.length; i++) {\n                if (hasMatch(matchNode.match[i])) {\n                    if (shouldPutToTrace(matchNode.syntax)) {\n                        result.unshift(matchNode.syntax);\n                    }\n\n                    return true;\n                }\n            }\n        } else if (matchNode.node === node) {\n            result = shouldPutToTrace(matchNode.syntax)\n                ? [matchNode.syntax]\n                : [];\n\n            return true;\n        }\n\n        return false;\n    }\n\n    let result = null;\n\n    if (this.matched !== null) {\n        hasMatch(this.matched);\n    }\n\n    return result;\n}\n\nfunction isType(node, type) {\n    return testNode(this, node, match => match.type === 'Type' && match.name === type);\n}\n\nfunction isProperty(node, property) {\n    return testNode(this, node, match => match.type === 'Property' && match.name === property);\n}\n\nfunction isKeyword(node) {\n    return testNode(this, node, match => match.type === 'Keyword');\n}\n\nfunction testNode(match, node, fn) {\n    const trace = getTrace.call(match, node);\n\n    if (trace === null) {\n        return false;\n    }\n\n    return trace.some(fn);\n}\n\nexports.getTrace = getTrace;\nexports.isKeyword = isKeyword;\nexports.isProperty = isProperty;\nexports.isType = isType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL2xleGVyL3RyYWNlLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvbGV4ZXIvdHJhY2UuY2pzP2Q3ZmQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBnZXRUcmFjZShub2RlKSB7XG4gICAgZnVuY3Rpb24gc2hvdWxkUHV0VG9UcmFjZShzeW50YXgpIHtcbiAgICAgICAgaWYgKHN5bnRheCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIHN5bnRheC50eXBlID09PSAnVHlwZScgfHxcbiAgICAgICAgICAgIHN5bnRheC50eXBlID09PSAnUHJvcGVydHknIHx8XG4gICAgICAgICAgICBzeW50YXgudHlwZSA9PT0gJ0tleXdvcmQnXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFzTWF0Y2gobWF0Y2hOb2RlKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KG1hdGNoTm9kZS5tYXRjaCkpIHtcbiAgICAgICAgICAgIC8vIHVzZSBmb3ItbG9vcCBmb3IgYmV0dGVyIHBlcmZvbWFuY2VcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWF0Y2hOb2RlLm1hdGNoLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGhhc01hdGNoKG1hdGNoTm9kZS5tYXRjaFtpXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZFB1dFRvVHJhY2UobWF0Y2hOb2RlLnN5bnRheCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC51bnNoaWZ0KG1hdGNoTm9kZS5zeW50YXgpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKG1hdGNoTm9kZS5ub2RlID09PSBub2RlKSB7XG4gICAgICAgICAgICByZXN1bHQgPSBzaG91bGRQdXRUb1RyYWNlKG1hdGNoTm9kZS5zeW50YXgpXG4gICAgICAgICAgICAgICAgPyBbbWF0Y2hOb2RlLnN5bnRheF1cbiAgICAgICAgICAgICAgICA6IFtdO1xuXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBsZXQgcmVzdWx0ID0gbnVsbDtcblxuICAgIGlmICh0aGlzLm1hdGNoZWQgIT09IG51bGwpIHtcbiAgICAgICAgaGFzTWF0Y2godGhpcy5tYXRjaGVkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBpc1R5cGUobm9kZSwgdHlwZSkge1xuICAgIHJldHVybiB0ZXN0Tm9kZSh0aGlzLCBub2RlLCBtYXRjaCA9PiBtYXRjaC50eXBlID09PSAnVHlwZScgJiYgbWF0Y2gubmFtZSA9PT0gdHlwZSk7XG59XG5cbmZ1bmN0aW9uIGlzUHJvcGVydHkobm9kZSwgcHJvcGVydHkpIHtcbiAgICByZXR1cm4gdGVzdE5vZGUodGhpcywgbm9kZSwgbWF0Y2ggPT4gbWF0Y2gudHlwZSA9PT0gJ1Byb3BlcnR5JyAmJiBtYXRjaC5uYW1lID09PSBwcm9wZXJ0eSk7XG59XG5cbmZ1bmN0aW9uIGlzS2V5d29yZChub2RlKSB7XG4gICAgcmV0dXJuIHRlc3ROb2RlKHRoaXMsIG5vZGUsIG1hdGNoID0+IG1hdGNoLnR5cGUgPT09ICdLZXl3b3JkJyk7XG59XG5cbmZ1bmN0aW9uIHRlc3ROb2RlKG1hdGNoLCBub2RlLCBmbikge1xuICAgIGNvbnN0IHRyYWNlID0gZ2V0VHJhY2UuY2FsbChtYXRjaCwgbm9kZSk7XG5cbiAgICBpZiAodHJhY2UgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cmFjZS5zb21lKGZuKTtcbn1cblxuZXhwb3J0cy5nZXRUcmFjZSA9IGdldFRyYWNlO1xuZXhwb3J0cy5pc0tleXdvcmQgPSBpc0tleXdvcmQ7XG5leHBvcnRzLmlzUHJvcGVydHkgPSBpc1Byb3BlcnR5O1xuZXhwb3J0cy5pc1R5cGUgPSBpc1R5cGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/lexer/trace.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/parser/SyntaxError.cjs":
/*!**********************************************************!*\
  !*** ./node_modules/css-tree/cjs/parser/SyntaxError.cjs ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst createCustomError = __webpack_require__(/*! ../utils/create-custom-error.cjs */ \"./node_modules/css-tree/cjs/utils/create-custom-error.cjs\");\n\nconst MAX_LINE_LENGTH = 100;\nconst OFFSET_CORRECTION = 60;\nconst TAB_REPLACEMENT = '    ';\n\nfunction sourceFragment({ source, line, column }, extraLines) {\n    function processLines(start, end) {\n        return lines\n            .slice(start, end)\n            .map((line, idx) =>\n                String(start + idx + 1).padStart(maxNumLength) + ' |' + line\n            ).join('\\n');\n    }\n\n    const lines = source.split(/\\r\\n?|\\n|\\f/);\n    const startLine = Math.max(1, line - extraLines) - 1;\n    const endLine = Math.min(line + extraLines, lines.length + 1);\n    const maxNumLength = Math.max(4, String(endLine).length) + 1;\n    let cutLeft = 0;\n\n    // column correction according to replaced tab before column\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n        cutLeft = column - OFFSET_CORRECTION + 3;\n        column = OFFSET_CORRECTION - 2;\n    }\n\n    for (let i = startLine; i <= endLine; i++) {\n        if (i >= 0 && i < lines.length) {\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n            lines[i] =\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\n        }\n    }\n\n    return [\n        processLines(startLine, line),\n        new Array(column + maxNumLength + 2).join('-') + '^',\n        processLines(line, endLine)\n    ].filter(Boolean).join('\\n');\n}\n\nfunction SyntaxError(message, source, offset, line, column) {\n    const error = Object.assign(createCustomError.createCustomError('SyntaxError', message), {\n        source,\n        offset,\n        line,\n        column,\n        sourceFragment(extraLines) {\n            return sourceFragment({ source, line, column }, isNaN(extraLines) ? 0 : extraLines);\n        },\n        get formattedMessage() {\n            return (\n                `Parse error: ${message}\\n` +\n                sourceFragment({ source, line, column }, 2)\n            );\n        }\n    });\n\n    return error;\n}\n\nexports.SyntaxError = SyntaxError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3BhcnNlci9TeW50YXhFcnJvci5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3BhcnNlci9TeW50YXhFcnJvci5janM/ZjJjOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNyZWF0ZUN1c3RvbUVycm9yID0gcmVxdWlyZSgnLi4vdXRpbHMvY3JlYXRlLWN1c3RvbS1lcnJvci5janMnKTtcblxuY29uc3QgTUFYX0xJTkVfTEVOR1RIID0gMTAwO1xuY29uc3QgT0ZGU0VUX0NPUlJFQ1RJT04gPSA2MDtcbmNvbnN0IFRBQl9SRVBMQUNFTUVOVCA9ICcgICAgJztcblxuZnVuY3Rpb24gc291cmNlRnJhZ21lbnQoeyBzb3VyY2UsIGxpbmUsIGNvbHVtbiB9LCBleHRyYUxpbmVzKSB7XG4gICAgZnVuY3Rpb24gcHJvY2Vzc0xpbmVzKHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgcmV0dXJuIGxpbmVzXG4gICAgICAgICAgICAuc2xpY2Uoc3RhcnQsIGVuZClcbiAgICAgICAgICAgIC5tYXAoKGxpbmUsIGlkeCkgPT5cbiAgICAgICAgICAgICAgICBTdHJpbmcoc3RhcnQgKyBpZHggKyAxKS5wYWRTdGFydChtYXhOdW1MZW5ndGgpICsgJyB8JyArIGxpbmVcbiAgICAgICAgICAgICkuam9pbignXFxuJyk7XG4gICAgfVxuXG4gICAgY29uc3QgbGluZXMgPSBzb3VyY2Uuc3BsaXQoL1xcclxcbj98XFxufFxcZi8pO1xuICAgIGNvbnN0IHN0YXJ0TGluZSA9IE1hdGgubWF4KDEsIGxpbmUgLSBleHRyYUxpbmVzKSAtIDE7XG4gICAgY29uc3QgZW5kTGluZSA9IE1hdGgubWluKGxpbmUgKyBleHRyYUxpbmVzLCBsaW5lcy5sZW5ndGggKyAxKTtcbiAgICBjb25zdCBtYXhOdW1MZW5ndGggPSBNYXRoLm1heCg0LCBTdHJpbmcoZW5kTGluZSkubGVuZ3RoKSArIDE7XG4gICAgbGV0IGN1dExlZnQgPSAwO1xuXG4gICAgLy8gY29sdW1uIGNvcnJlY3Rpb24gYWNjb3JkaW5nIHRvIHJlcGxhY2VkIHRhYiBiZWZvcmUgY29sdW1uXG4gICAgY29sdW1uICs9IChUQUJfUkVQTEFDRU1FTlQubGVuZ3RoIC0gMSkgKiAobGluZXNbbGluZSAtIDFdLnN1YnN0cigwLCBjb2x1bW4gLSAxKS5tYXRjaCgvXFx0L2cpIHx8IFtdKS5sZW5ndGg7XG5cbiAgICBpZiAoY29sdW1uID4gTUFYX0xJTkVfTEVOR1RIKSB7XG4gICAgICAgIGN1dExlZnQgPSBjb2x1bW4gLSBPRkZTRVRfQ09SUkVDVElPTiArIDM7XG4gICAgICAgIGNvbHVtbiA9IE9GRlNFVF9DT1JSRUNUSU9OIC0gMjtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gc3RhcnRMaW5lOyBpIDw9IGVuZExpbmU7IGkrKykge1xuICAgICAgICBpZiAoaSA+PSAwICYmIGkgPCBsaW5lcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGxpbmVzW2ldID0gbGluZXNbaV0ucmVwbGFjZSgvXFx0L2csIFRBQl9SRVBMQUNFTUVOVCk7XG4gICAgICAgICAgICBsaW5lc1tpXSA9XG4gICAgICAgICAgICAgICAgKGN1dExlZnQgPiAwICYmIGxpbmVzW2ldLmxlbmd0aCA+IGN1dExlZnQgPyAnXFx1MjAyNicgOiAnJykgK1xuICAgICAgICAgICAgICAgIGxpbmVzW2ldLnN1YnN0cihjdXRMZWZ0LCBNQVhfTElORV9MRU5HVEggLSAyKSArXG4gICAgICAgICAgICAgICAgKGxpbmVzW2ldLmxlbmd0aCA+IGN1dExlZnQgKyBNQVhfTElORV9MRU5HVEggLSAxID8gJ1xcdTIwMjYnIDogJycpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFtcbiAgICAgICAgcHJvY2Vzc0xpbmVzKHN0YXJ0TGluZSwgbGluZSksXG4gICAgICAgIG5ldyBBcnJheShjb2x1bW4gKyBtYXhOdW1MZW5ndGggKyAyKS5qb2luKCctJykgKyAnXicsXG4gICAgICAgIHByb2Nlc3NMaW5lcyhsaW5lLCBlbmRMaW5lKVxuICAgIF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xufVxuXG5mdW5jdGlvbiBTeW50YXhFcnJvcihtZXNzYWdlLCBzb3VyY2UsIG9mZnNldCwgbGluZSwgY29sdW1uKSB7XG4gICAgY29uc3QgZXJyb3IgPSBPYmplY3QuYXNzaWduKGNyZWF0ZUN1c3RvbUVycm9yLmNyZWF0ZUN1c3RvbUVycm9yKCdTeW50YXhFcnJvcicsIG1lc3NhZ2UpLCB7XG4gICAgICAgIHNvdXJjZSxcbiAgICAgICAgb2Zmc2V0LFxuICAgICAgICBsaW5lLFxuICAgICAgICBjb2x1bW4sXG4gICAgICAgIHNvdXJjZUZyYWdtZW50KGV4dHJhTGluZXMpIHtcbiAgICAgICAgICAgIHJldHVybiBzb3VyY2VGcmFnbWVudCh7IHNvdXJjZSwgbGluZSwgY29sdW1uIH0sIGlzTmFOKGV4dHJhTGluZXMpID8gMCA6IGV4dHJhTGluZXMpO1xuICAgICAgICB9LFxuICAgICAgICBnZXQgZm9ybWF0dGVkTWVzc2FnZSgpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgYFBhcnNlIGVycm9yOiAke21lc3NhZ2V9XFxuYCArXG4gICAgICAgICAgICAgICAgc291cmNlRnJhZ21lbnQoeyBzb3VyY2UsIGxpbmUsIGNvbHVtbiB9LCAyKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGVycm9yO1xufVxuXG5leHBvcnRzLlN5bnRheEVycm9yID0gU3ludGF4RXJyb3I7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/parser/SyntaxError.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/parser/create.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/css-tree/cjs/parser/create.cjs ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst List = __webpack_require__(/*! ../utils/List.cjs */ \"./node_modules/css-tree/cjs/utils/List.cjs\");\nconst _SyntaxError = __webpack_require__(/*! ./SyntaxError.cjs */ \"./node_modules/css-tree/cjs/parser/SyntaxError.cjs\");\nconst index = __webpack_require__(/*! ../tokenizer/index.cjs */ \"./node_modules/css-tree/cjs/tokenizer/index.cjs\");\nconst sequence = __webpack_require__(/*! ./sequence.cjs */ \"./node_modules/css-tree/cjs/parser/sequence.cjs\");\nconst TokenStream = __webpack_require__(/*! ../tokenizer/TokenStream.cjs */ \"./node_modules/css-tree/cjs/tokenizer/TokenStream.cjs\");\nconst utils = __webpack_require__(/*! ../tokenizer/utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\nconst types = __webpack_require__(/*! ../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\nconst names = __webpack_require__(/*! ../tokenizer/names.cjs */ \"./node_modules/css-tree/cjs/tokenizer/names.cjs\");\nconst OffsetToLocation = __webpack_require__(/*! ../tokenizer/OffsetToLocation.cjs */ \"./node_modules/css-tree/cjs/tokenizer/OffsetToLocation.cjs\");\n\nconst NOOP = () => {};\nconst EXCLAMATIONMARK = 0x0021;  // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;       // U+0023 NUMBER SIGN (#)\nconst SEMICOLON = 0x003B;        // U+003B SEMICOLON (;)\nconst LEFTCURLYBRACKET = 0x007B; // U+007B LEFT CURLY BRACKET ({)\nconst NULL = 0;\n\nfunction createParseContext(name) {\n    return function() {\n        return this[name]();\n    };\n}\n\nfunction fetchParseValues(dict) {\n    const result = Object.create(null);\n\n    for (const name in dict) {\n        const item = dict[name];\n\n        if (item.parse) {\n            result[name] = item.parse;\n        }\n    }\n\n    return result;\n}\n\nfunction processConfig(config) {\n    const parseConfig = {\n        context: Object.create(null),\n        scope: Object.assign(Object.create(null), config.scope),\n        atrule: fetchParseValues(config.atrule),\n        pseudo: fetchParseValues(config.pseudo),\n        node: fetchParseValues(config.node)\n    };\n\n    for (const name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n            case 'function':\n                parseConfig.context[name] = config.parseContext[name];\n                break;\n\n            case 'string':\n                parseConfig.context[name] = createParseContext(config.parseContext[name]);\n                break;\n        }\n    }\n\n    return {\n        config: parseConfig,\n        ...parseConfig,\n        ...parseConfig.node\n    };\n}\n\nfunction createParser(config) {\n    let source = '';\n    let filename = '<unknown>';\n    let needPositions = false;\n    let onParseError = NOOP;\n    let onParseErrorThrow = false;\n\n    const locationMap = new OffsetToLocation.OffsetToLocation();\n    const parser = Object.assign(new TokenStream.TokenStream(), processConfig(config || {}), {\n        parseAtrulePrelude: true,\n        parseRulePrelude: true,\n        parseValue: true,\n        parseCustomProperty: false,\n\n        readSequence: sequence.readSequence,\n\n        consumeUntilBalanceEnd: () => 0,\n        consumeUntilLeftCurlyBracket(code) {\n            return code === LEFTCURLYBRACKET ? 1 : 0;\n        },\n        consumeUntilLeftCurlyBracketOrSemicolon(code) {\n            return code === LEFTCURLYBRACKET || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilExclamationMarkOrSemicolon(code) {\n            return code === EXCLAMATIONMARK || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilSemicolonIncluded(code) {\n            return code === SEMICOLON ? 2 : 0;\n        },\n\n        createList() {\n            return new List.List();\n        },\n        createSingleNodeList(node) {\n            return new List.List().appendData(node);\n        },\n        getFirstListNode(list) {\n            return list && list.first;\n        },\n        getLastListNode(list) {\n            return list && list.last;\n        },\n\n        parseWithFallback(consumer, fallback) {\n            const startToken = this.tokenIndex;\n\n            try {\n                return consumer.call(this);\n            } catch (e) {\n                if (onParseErrorThrow) {\n                    throw e;\n                }\n\n                const fallbackNode = fallback.call(this, startToken);\n\n                onParseErrorThrow = true;\n                onParseError(e, fallbackNode);\n                onParseErrorThrow = false;\n\n                return fallbackNode;\n            }\n        },\n\n        lookupNonWSType(offset) {\n            let type;\n\n            do {\n                type = this.lookupType(offset++);\n                if (type !== types.WhiteSpace) {\n                    return type;\n                }\n            } while (type !== NULL);\n\n            return NULL;\n        },\n\n        charCodeAt(offset) {\n            return offset >= 0 && offset < source.length ? source.charCodeAt(offset) : 0;\n        },\n        substring(offsetStart, offsetEnd) {\n            return source.substring(offsetStart, offsetEnd);\n        },\n        substrToCursor(start) {\n            return this.source.substring(start, this.tokenStart);\n        },\n\n        cmpChar(offset, charCode) {\n            return utils.cmpChar(source, offset, charCode);\n        },\n        cmpStr(offsetStart, offsetEnd, str) {\n            return utils.cmpStr(source, offsetStart, offsetEnd, str);\n        },\n\n        consume(tokenType) {\n            const start = this.tokenStart;\n\n            this.eat(tokenType);\n\n            return this.substrToCursor(start);\n        },\n        consumeFunctionName() {\n            const name = source.substring(this.tokenStart, this.tokenEnd - 1);\n\n            this.eat(types.Function);\n\n            return name;\n        },\n        consumeNumber(type) {\n            const number = source.substring(this.tokenStart, utils.consumeNumber(source, this.tokenStart));\n\n            this.eat(type);\n\n            return number;\n        },\n\n        eat(tokenType) {\n            if (this.tokenType !== tokenType) {\n                const tokenName = names[tokenType].slice(0, -6).replace(/-/g, ' ').replace(/^./, m => m.toUpperCase());\n                let message = `${/[[\\](){}]/.test(tokenName) ? `\"${tokenName}\"` : tokenName} is expected`;\n                let offset = this.tokenStart;\n\n                // tweak message and offset\n                switch (tokenType) {\n                    case types.Ident:\n                        // when identifier is expected but there is a function or url\n                        if (this.tokenType === types.Function || this.tokenType === types.Url) {\n                            offset = this.tokenEnd - 1;\n                            message = 'Identifier is expected but function found';\n                        } else {\n                            message = 'Identifier is expected';\n                        }\n                        break;\n\n                    case types.Hash:\n                        if (this.isDelim(NUMBERSIGN)) {\n                            this.next();\n                            offset++;\n                            message = 'Name is expected';\n                        }\n                        break;\n\n                    case types.Percentage:\n                        if (this.tokenType === types.Number) {\n                            offset = this.tokenEnd;\n                            message = 'Percent sign is expected';\n                        }\n                        break;\n                }\n\n                this.error(message, offset);\n            }\n\n            this.next();\n        },\n        eatIdent(name) {\n            if (this.tokenType !== types.Ident || this.lookupValue(0, name) === false) {\n                this.error(`Identifier \"${name}\" is expected`);\n            }\n\n            this.next();\n        },\n        eatDelim(code) {\n            if (!this.isDelim(code)) {\n                this.error(`Delim \"${String.fromCharCode(code)}\" is expected`);\n            }\n\n            this.next();\n        },\n\n        getLocation(start, end) {\n            if (needPositions) {\n                return locationMap.getLocationRange(\n                    start,\n                    end,\n                    filename\n                );\n            }\n\n            return null;\n        },\n        getLocationFromList(list) {\n            if (needPositions) {\n                const head = this.getFirstListNode(list);\n                const tail = this.getLastListNode(list);\n                return locationMap.getLocationRange(\n                    head !== null ? head.loc.start.offset - locationMap.startOffset : this.tokenStart,\n                    tail !== null ? tail.loc.end.offset - locationMap.startOffset : this.tokenStart,\n                    filename\n                );\n            }\n\n            return null;\n        },\n\n        error(message, offset) {\n            const location = typeof offset !== 'undefined' && offset < source.length\n                ? locationMap.getLocation(offset)\n                : this.eof\n                    ? locationMap.getLocation(utils.findWhiteSpaceStart(source, source.length - 1))\n                    : locationMap.getLocation(this.tokenStart);\n\n            throw new _SyntaxError.SyntaxError(\n                message || 'Unexpected input',\n                source,\n                location.offset,\n                location.line,\n                location.column\n            );\n        }\n    });\n\n    const parse = function(source_, options) {\n        source = source_;\n        options = options || {};\n\n        parser.setSource(source, index.tokenize);\n        locationMap.setSource(\n            source,\n            options.offset,\n            options.line,\n            options.column\n        );\n\n        filename = options.filename || '<unknown>';\n        needPositions = Boolean(options.positions);\n        onParseError = typeof options.onParseError === 'function' ? options.onParseError : NOOP;\n        onParseErrorThrow = false;\n\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n        const { context = 'default', onComment } = options;\n\n        if (context in parser.context === false) {\n            throw new Error('Unknown context `' + context + '`');\n        }\n\n        if (typeof onComment === 'function') {\n            parser.forEachToken((type, start, end) => {\n                if (type === types.Comment) {\n                    const loc = parser.getLocation(start, end);\n                    const value = utils.cmpStr(source, end - 2, end, '*/')\n                        ? source.slice(start + 2, end - 2)\n                        : source.slice(start + 2, end);\n\n                    onComment(value, loc);\n                }\n            });\n        }\n\n        const ast = parser.context[context].call(parser, options);\n\n        if (!parser.eof) {\n            parser.error();\n        }\n\n        return ast;\n    };\n\n    return Object.assign(parse, {\n        SyntaxError: _SyntaxError.SyntaxError,\n        config: parser.config\n    });\n}\n\nexports.createParser = createParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/parser/create.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/parser/sequence.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/parser/sequence.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nfunction readSequence(recognizer) {\n    const children = this.createList();\n    let space = false;\n    const context = {\n        recognizer\n    };\n\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case types.Comment:\n                this.next();\n                continue;\n\n            case types.WhiteSpace:\n                space = true;\n                this.next();\n                continue;\n        }\n\n        let child = recognizer.getNode.call(this, context);\n\n        if (child === undefined) {\n            break;\n        }\n\n        if (space) {\n            if (recognizer.onWhiteSpace) {\n                recognizer.onWhiteSpace.call(this, child, children, context);\n            }\n            space = false;\n        }\n\n        children.push(child);\n    }\n\n    if (space && recognizer.onWhiteSpace) {\n        recognizer.onWhiteSpace.call(this, null, children, context);\n    }\n\n    return children;\n}\n\nexports.readSequence = readSequence;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3BhcnNlci9zZXF1ZW5jZS5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3BhcnNlci9zZXF1ZW5jZS5janM/MzZkYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuZnVuY3Rpb24gcmVhZFNlcXVlbmNlKHJlY29nbml6ZXIpIHtcbiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuY3JlYXRlTGlzdCgpO1xuICAgIGxldCBzcGFjZSA9IGZhbHNlO1xuICAgIGNvbnN0IGNvbnRleHQgPSB7XG4gICAgICAgIHJlY29nbml6ZXJcbiAgICB9O1xuXG4gICAgd2hpbGUgKCF0aGlzLmVvZikge1xuICAgICAgICBzd2l0Y2ggKHRoaXMudG9rZW5UeXBlKSB7XG4gICAgICAgICAgICBjYXNlIHR5cGVzLkNvbW1lbnQ6XG4gICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIGNhc2UgdHlwZXMuV2hpdGVTcGFjZTpcbiAgICAgICAgICAgICAgICBzcGFjZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgY2hpbGQgPSByZWNvZ25pemVyLmdldE5vZGUuY2FsbCh0aGlzLCBjb250ZXh0KTtcblxuICAgICAgICBpZiAoY2hpbGQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoc3BhY2UpIHtcbiAgICAgICAgICAgIGlmIChyZWNvZ25pemVyLm9uV2hpdGVTcGFjZSkge1xuICAgICAgICAgICAgICAgIHJlY29nbml6ZXIub25XaGl0ZVNwYWNlLmNhbGwodGhpcywgY2hpbGQsIGNoaWxkcmVuLCBjb250ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNwYWNlID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBjaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICB9XG5cbiAgICBpZiAoc3BhY2UgJiYgcmVjb2duaXplci5vbldoaXRlU3BhY2UpIHtcbiAgICAgICAgcmVjb2duaXplci5vbldoaXRlU3BhY2UuY2FsbCh0aGlzLCBudWxsLCBjaGlsZHJlbiwgY29udGV4dCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNoaWxkcmVuO1xufVxuXG5leHBvcnRzLnJlYWRTZXF1ZW5jZSA9IHJlYWRTZXF1ZW5jZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/parser/sequence.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/atrule/font-face.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/atrule/font-face.cjs ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst fontFace = {\n    parse: {\n        prelude: null,\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n\nmodule.exports = fontFace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9hdHJ1bGUvZm9udC1mYWNlLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L2F0cnVsZS9mb250LWZhY2UuY2pzP2FmZWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmb250RmFjZSA9IHtcbiAgICBwYXJzZToge1xuICAgICAgICBwcmVsdWRlOiBudWxsLFxuICAgICAgICBibG9jaygpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLkJsb2NrKHRydWUpO1xuICAgICAgICB9XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmb250RmFjZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/atrule/font-face.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/atrule/import.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/atrule/import.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst importAtrule = {\n    parse: {\n        prelude() {\n            const children = this.createList();\n\n            this.skipSC();\n\n            switch (this.tokenType) {\n                case types.String:\n                    children.push(this.String());\n                    break;\n\n                case types.Url:\n                case types.Function:\n                    children.push(this.Url());\n                    break;\n\n                default:\n                    this.error('String or url() is expected');\n            }\n\n            if (this.lookupNonWSType(0) === types.Ident ||\n                this.lookupNonWSType(0) === types.LeftParenthesis) {\n                children.push(this.MediaQueryList());\n            }\n\n            return children;\n        },\n        block: null\n    }\n};\n\nmodule.exports = importAtrule;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9hdHJ1bGUvaW1wb3J0LmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L2F0cnVsZS9pbXBvcnQuY2pzP2Q5YWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbnJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmNvbnN0IGltcG9ydEF0cnVsZSA9IHtcbiAgICBwYXJzZToge1xuICAgICAgICBwcmVsdWRlKCkge1xuICAgICAgICAgICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLmNyZWF0ZUxpc3QoKTtcblxuICAgICAgICAgICAgdGhpcy5za2lwU0MoKTtcblxuICAgICAgICAgICAgc3dpdGNoICh0aGlzLnRva2VuVHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgdHlwZXMuU3RyaW5nOlxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgdHlwZXMuVXJsOlxuICAgICAgICAgICAgICAgIGNhc2UgdHlwZXMuRnVuY3Rpb246XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuLnB1c2godGhpcy5VcmwoKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lcnJvcignU3RyaW5nIG9yIHVybCgpIGlzIGV4cGVjdGVkJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmxvb2t1cE5vbldTVHlwZSgwKSA9PT0gdHlwZXMuSWRlbnQgfHxcbiAgICAgICAgICAgICAgICB0aGlzLmxvb2t1cE5vbldTVHlwZSgwKSA9PT0gdHlwZXMuTGVmdFBhcmVudGhlc2lzKSB7XG4gICAgICAgICAgICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLk1lZGlhUXVlcnlMaXN0KCkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2hpbGRyZW47XG4gICAgICAgIH0sXG4gICAgICAgIGJsb2NrOiBudWxsXG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbXBvcnRBdHJ1bGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/atrule/import.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/atrule/index.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/atrule/index.cjs ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst fontFace = __webpack_require__(/*! ./font-face.cjs */ \"./node_modules/css-tree/cjs/syntax/atrule/font-face.cjs\");\nconst _import = __webpack_require__(/*! ./import.cjs */ \"./node_modules/css-tree/cjs/syntax/atrule/import.cjs\");\nconst media = __webpack_require__(/*! ./media.cjs */ \"./node_modules/css-tree/cjs/syntax/atrule/media.cjs\");\nconst page = __webpack_require__(/*! ./page.cjs */ \"./node_modules/css-tree/cjs/syntax/atrule/page.cjs\");\nconst supports = __webpack_require__(/*! ./supports.cjs */ \"./node_modules/css-tree/cjs/syntax/atrule/supports.cjs\");\n\nconst atrule = {\n    'font-face': fontFace,\n    'import': _import,\n    media,\n    page,\n    supports\n};\n\nmodule.exports = atrule;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9hdHJ1bGUvaW5kZXguY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvYXRydWxlL2luZGV4LmNqcz84YzlkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZm9udEZhY2UgPSByZXF1aXJlKCcuL2ZvbnQtZmFjZS5janMnKTtcbmNvbnN0IF9pbXBvcnQgPSByZXF1aXJlKCcuL2ltcG9ydC5janMnKTtcbmNvbnN0IG1lZGlhID0gcmVxdWlyZSgnLi9tZWRpYS5janMnKTtcbmNvbnN0IHBhZ2UgPSByZXF1aXJlKCcuL3BhZ2UuY2pzJyk7XG5jb25zdCBzdXBwb3J0cyA9IHJlcXVpcmUoJy4vc3VwcG9ydHMuY2pzJyk7XG5cbmNvbnN0IGF0cnVsZSA9IHtcbiAgICAnZm9udC1mYWNlJzogZm9udEZhY2UsXG4gICAgJ2ltcG9ydCc6IF9pbXBvcnQsXG4gICAgbWVkaWEsXG4gICAgcGFnZSxcbiAgICBzdXBwb3J0c1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBhdHJ1bGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/atrule/index.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/atrule/media.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/atrule/media.cjs ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst media = {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.MediaQueryList()\n            );\n        },\n        block() {\n            return this.Block(false);\n        }\n    }\n};\n\nmodule.exports = media;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9hdHJ1bGUvbWVkaWEuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvYXRydWxlL21lZGlhLmNqcz84MDIzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbWVkaWEgPSB7XG4gICAgcGFyc2U6IHtcbiAgICAgICAgcHJlbHVkZSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVNpbmdsZU5vZGVMaXN0KFxuICAgICAgICAgICAgICAgIHRoaXMuTWVkaWFRdWVyeUxpc3QoKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSxcbiAgICAgICAgYmxvY2soKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5CbG9jayhmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IG1lZGlhO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/atrule/media.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/atrule/page.cjs":
/*!**********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/atrule/page.cjs ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst page = {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n\nmodule.exports = page;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9hdHJ1bGUvcGFnZS5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9hdHJ1bGUvcGFnZS5janM/ZWVlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHBhZ2UgPSB7XG4gICAgcGFyc2U6IHtcbiAgICAgICAgcHJlbHVkZSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVNpbmdsZU5vZGVMaXN0KFxuICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0b3JMaXN0KClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0sXG4gICAgICAgIGJsb2NrKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuQmxvY2sodHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhZ2U7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/atrule/page.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/atrule/supports.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/atrule/supports.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nfunction consumeRaw() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n\nfunction parentheses() {\n    this.skipSC();\n\n    if (this.tokenType === types.Ident &&\n        this.lookupNonWSType(1) === types.Colon) {\n        return this.createSingleNodeList(\n            this.Declaration()\n        );\n    }\n\n    return readSequence.call(this);\n}\n\nfunction readSequence() {\n    const children = this.createList();\n    let child;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case types.Comment:\n            case types.WhiteSpace:\n                this.next();\n                continue;\n\n            case types.Function:\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\n                break;\n\n            case types.Ident:\n                child = this.Identifier();\n                break;\n\n            case types.LeftParenthesis:\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    return children;\n}\n\nconst supports = {\n    parse: {\n        prelude() {\n            const children = readSequence.call(this);\n\n            if (this.getFirstListNode(children) === null) {\n                this.error('Condition is expected');\n            }\n\n            return children;\n        },\n        block() {\n            return this.Block(false);\n        }\n    }\n};\n\nmodule.exports = supports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9hdHJ1bGUvc3VwcG9ydHMuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvYXRydWxlL3N1cHBvcnRzLmNqcz8wYmE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5mdW5jdGlvbiBjb25zdW1lUmF3KCkge1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZVNpbmdsZU5vZGVMaXN0KFxuICAgICAgICB0aGlzLlJhdyh0aGlzLnRva2VuSW5kZXgsIG51bGwsIGZhbHNlKVxuICAgICk7XG59XG5cbmZ1bmN0aW9uIHBhcmVudGhlc2VzKCkge1xuICAgIHRoaXMuc2tpcFNDKCk7XG5cbiAgICBpZiAodGhpcy50b2tlblR5cGUgPT09IHR5cGVzLklkZW50ICYmXG4gICAgICAgIHRoaXMubG9va3VwTm9uV1NUeXBlKDEpID09PSB0eXBlcy5Db2xvbikge1xuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVTaW5nbGVOb2RlTGlzdChcbiAgICAgICAgICAgIHRoaXMuRGVjbGFyYXRpb24oKVxuICAgICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiByZWFkU2VxdWVuY2UuY2FsbCh0aGlzKTtcbn1cblxuZnVuY3Rpb24gcmVhZFNlcXVlbmNlKCkge1xuICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy5jcmVhdGVMaXN0KCk7XG4gICAgbGV0IGNoaWxkO1xuXG4gICAgdGhpcy5za2lwU0MoKTtcblxuICAgIHNjYW46XG4gICAgd2hpbGUgKCF0aGlzLmVvZikge1xuICAgICAgICBzd2l0Y2ggKHRoaXMudG9rZW5UeXBlKSB7XG4gICAgICAgICAgICBjYXNlIHR5cGVzLkNvbW1lbnQ6XG4gICAgICAgICAgICBjYXNlIHR5cGVzLldoaXRlU3BhY2U6XG4gICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIGNhc2UgdHlwZXMuRnVuY3Rpb246XG4gICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLkZ1bmN0aW9uKGNvbnN1bWVSYXcsIHRoaXMuc2NvcGUuQXRydWxlUHJlbHVkZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgdHlwZXMuSWRlbnQ6XG4gICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLklkZW50aWZpZXIoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSB0eXBlcy5MZWZ0UGFyZW50aGVzaXM6XG4gICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLlBhcmVudGhlc2VzKHBhcmVudGhlc2VzLCB0aGlzLnNjb3BlLkF0cnVsZVByZWx1ZGUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrIHNjYW47XG4gICAgICAgIH1cblxuICAgICAgICBjaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2hpbGRyZW47XG59XG5cbmNvbnN0IHN1cHBvcnRzID0ge1xuICAgIHBhcnNlOiB7XG4gICAgICAgIHByZWx1ZGUoKSB7XG4gICAgICAgICAgICBjb25zdCBjaGlsZHJlbiA9IHJlYWRTZXF1ZW5jZS5jYWxsKHRoaXMpO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5nZXRGaXJzdExpc3ROb2RlKGNoaWxkcmVuKSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IoJ0NvbmRpdGlvbiBpcyBleHBlY3RlZCcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2hpbGRyZW47XG4gICAgICAgIH0sXG4gICAgICAgIGJsb2NrKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuQmxvY2soZmFsc2UpO1xuICAgICAgICB9XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBzdXBwb3J0cztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/atrule/supports.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/config/lexer.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/config/lexer.cjs ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst data = __webpack_require__(/*! ../../data.cjs */ \"./node_modules/css-tree/dist/data.js\");\nconst index = __webpack_require__(/*! ../node/index.cjs */ \"./node_modules/css-tree/cjs/syntax/node/index.cjs\");\n\nconst lexerConfig = {\n    generic: true,\n    ...data,\n    node: index\n};\n\nmodule.exports = lexerConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9jb25maWcvbGV4ZXIuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvY29uZmlnL2xleGVyLmNqcz8xODc2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZGF0YSA9IHJlcXVpcmUoJy4uLy4uL2RhdGEuY2pzJyk7XG5jb25zdCBpbmRleCA9IHJlcXVpcmUoJy4uL25vZGUvaW5kZXguY2pzJyk7XG5cbmNvbnN0IGxleGVyQ29uZmlnID0ge1xuICAgIGdlbmVyaWM6IHRydWUsXG4gICAgLi4uZGF0YSxcbiAgICBub2RlOiBpbmRleFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBsZXhlckNvbmZpZztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/config/lexer.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/config/mix.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/config/mix.cjs ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst { hasOwnProperty } = Object.prototype;\nconst shape = {\n    generic: true,\n    types: appendOrAssign,\n    atrules: {\n        prelude: appendOrAssignOrNull,\n        descriptors: appendOrAssignOrNull\n    },\n    properties: appendOrAssign,\n    parseContext: assign,\n    scope: deepAssign,\n    atrule: ['parse'],\n    pseudo: ['parse'],\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\n};\n\nfunction isObject(value) {\n    return value && value.constructor === Object;\n}\n\nfunction copy(value) {\n    return isObject(value)\n        ? { ...value }\n        : value;\n}\n\nfunction assign(dest, src) {\n    return Object.assign(dest, src);\n}\n\nfunction deepAssign(dest, src) {\n    for (const key in src) {\n        if (hasOwnProperty.call(src, key)) {\n            if (isObject(dest[key])) {\n                deepAssign(dest[key], copy(src[key]));\n            } else {\n                dest[key] = copy(src[key]);\n            }\n        }\n    }\n\n    return dest;\n}\n\nfunction append(a, b) {\n    if (typeof b === 'string' && /^\\s*\\|/.test(b)) {\n        return typeof a === 'string'\n            ? a + b\n            : b.replace(/^\\s*\\|\\s*/, '');\n    }\n\n    return b || null;\n}\n\nfunction appendOrAssign(a, b) {\n    if (typeof b === 'string') {\n        return append(a, b);\n    }\n\n    const result = { ...a };\n    for (let key in b) {\n        if (hasOwnProperty.call(b, key)) {\n            result[key] = append(hasOwnProperty.call(a, key) ? a[key] : undefined, b[key]);\n        }\n    }\n\n    return result;\n}\n\nfunction appendOrAssignOrNull(a, b) {\n    const result = appendOrAssign(a, b);\n\n    return !isObject(result) || Object.keys(result).length\n        ? result\n        : null;\n}\n\nfunction mix(dest, src, shape) {\n    for (const key in shape) {\n        if (hasOwnProperty.call(shape, key) === false) {\n            continue;\n        }\n\n        if (shape[key] === true) {\n            if (key in src) {\n                if (hasOwnProperty.call(src, key)) {\n                    dest[key] = copy(src[key]);\n                }\n            }\n        } else if (shape[key]) {\n            if (typeof shape[key] === 'function') {\n                const fn = shape[key];\n                dest[key] = fn({}, dest[key]);\n                dest[key] = fn(dest[key] || {}, src[key]);\n            } else if (isObject(shape[key])) {\n                const result = {};\n\n                for (let name in dest[key]) {\n                    result[name] = mix({}, dest[key][name], shape[key]);\n                }\n\n                for (let name in src[key]) {\n                    result[name] = mix(result[name] || {}, src[key][name], shape[key]);\n                }\n\n                dest[key] = result;\n            } else if (Array.isArray(shape[key])) {\n                const res = {};\n                const innerShape = shape[key].reduce(function(s, k) {\n                    s[k] = true;\n                    return s;\n                }, {});\n\n                for (const [name, value] of Object.entries(dest[key] || {})) {\n                    res[name] = {};\n                    if (value) {\n                        mix(res[name], value, innerShape);\n                    }\n                }\n\n                for (const name in src[key]) {\n                    if (hasOwnProperty.call(src[key], name)) {\n                        if (!res[name]) {\n                            res[name] = {};\n                        }\n\n                        if (src[key] && src[key][name]) {\n                            mix(res[name], src[key][name], innerShape);\n                        }\n                    }\n                }\n\n                dest[key] = res;\n            }\n        }\n    }\n    return dest;\n}\n\nconst mix$1 = (dest, src) => mix(dest, src, shape);\n\nmodule.exports = mix$1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9jb25maWcvbWl4LmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L2NvbmZpZy9taXguY2pzPzFkNjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB7IGhhc093blByb3BlcnR5IH0gPSBPYmplY3QucHJvdG90eXBlO1xuY29uc3Qgc2hhcGUgPSB7XG4gICAgZ2VuZXJpYzogdHJ1ZSxcbiAgICB0eXBlczogYXBwZW5kT3JBc3NpZ24sXG4gICAgYXRydWxlczoge1xuICAgICAgICBwcmVsdWRlOiBhcHBlbmRPckFzc2lnbk9yTnVsbCxcbiAgICAgICAgZGVzY3JpcHRvcnM6IGFwcGVuZE9yQXNzaWduT3JOdWxsXG4gICAgfSxcbiAgICBwcm9wZXJ0aWVzOiBhcHBlbmRPckFzc2lnbixcbiAgICBwYXJzZUNvbnRleHQ6IGFzc2lnbixcbiAgICBzY29wZTogZGVlcEFzc2lnbixcbiAgICBhdHJ1bGU6IFsncGFyc2UnXSxcbiAgICBwc2V1ZG86IFsncGFyc2UnXSxcbiAgICBub2RlOiBbJ25hbWUnLCAnc3RydWN0dXJlJywgJ3BhcnNlJywgJ2dlbmVyYXRlJywgJ3dhbGtDb250ZXh0J11cbn07XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG59XG5cbmZ1bmN0aW9uIGNvcHkodmFsdWUpIHtcbiAgICByZXR1cm4gaXNPYmplY3QodmFsdWUpXG4gICAgICAgID8geyAuLi52YWx1ZSB9XG4gICAgICAgIDogdmFsdWU7XG59XG5cbmZ1bmN0aW9uIGFzc2lnbihkZXN0LCBzcmMpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihkZXN0LCBzcmMpO1xufVxuXG5mdW5jdGlvbiBkZWVwQXNzaWduKGRlc3QsIHNyYykge1xuICAgIGZvciAoY29uc3Qga2V5IGluIHNyYykge1xuICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChzcmMsIGtleSkpIHtcbiAgICAgICAgICAgIGlmIChpc09iamVjdChkZXN0W2tleV0pKSB7XG4gICAgICAgICAgICAgICAgZGVlcEFzc2lnbihkZXN0W2tleV0sIGNvcHkoc3JjW2tleV0pKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZGVzdFtrZXldID0gY29weShzcmNba2V5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGVzdDtcbn1cblxuZnVuY3Rpb24gYXBwZW5kKGEsIGIpIHtcbiAgICBpZiAodHlwZW9mIGIgPT09ICdzdHJpbmcnICYmIC9eXFxzKlxcfC8udGVzdChiKSkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIGEgPT09ICdzdHJpbmcnXG4gICAgICAgICAgICA/IGEgKyBiXG4gICAgICAgICAgICA6IGIucmVwbGFjZSgvXlxccypcXHxcXHMqLywgJycpO1xuICAgIH1cblxuICAgIHJldHVybiBiIHx8IG51bGw7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZE9yQXNzaWduKGEsIGIpIHtcbiAgICBpZiAodHlwZW9mIGIgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBhcHBlbmQoYSwgYik7XG4gICAgfVxuXG4gICAgY29uc3QgcmVzdWx0ID0geyAuLi5hIH07XG4gICAgZm9yIChsZXQga2V5IGluIGIpIHtcbiAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoYiwga2V5KSkge1xuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBhcHBlbmQoaGFzT3duUHJvcGVydHkuY2FsbChhLCBrZXkpID8gYVtrZXldIDogdW5kZWZpbmVkLCBiW2tleV0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gYXBwZW5kT3JBc3NpZ25Pck51bGwoYSwgYikge1xuICAgIGNvbnN0IHJlc3VsdCA9IGFwcGVuZE9yQXNzaWduKGEsIGIpO1xuXG4gICAgcmV0dXJuICFpc09iamVjdChyZXN1bHQpIHx8IE9iamVjdC5rZXlzKHJlc3VsdCkubGVuZ3RoXG4gICAgICAgID8gcmVzdWx0XG4gICAgICAgIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gbWl4KGRlc3QsIHNyYywgc2hhcGUpIHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzaGFwZSkge1xuICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChzaGFwZSwga2V5KSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHNoYXBlW2tleV0gPT09IHRydWUpIHtcbiAgICAgICAgICAgIGlmIChrZXkgaW4gc3JjKSB7XG4gICAgICAgICAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoc3JjLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlc3Rba2V5XSA9IGNvcHkoc3JjW2tleV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChzaGFwZVtrZXldKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHNoYXBlW2tleV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmbiA9IHNoYXBlW2tleV07XG4gICAgICAgICAgICAgICAgZGVzdFtrZXldID0gZm4oe30sIGRlc3Rba2V5XSk7XG4gICAgICAgICAgICAgICAgZGVzdFtrZXldID0gZm4oZGVzdFtrZXldIHx8IHt9LCBzcmNba2V5XSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlzT2JqZWN0KHNoYXBlW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0ge307XG5cbiAgICAgICAgICAgICAgICBmb3IgKGxldCBuYW1lIGluIGRlc3Rba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRbbmFtZV0gPSBtaXgoe30sIGRlc3Rba2V5XVtuYW1lXSwgc2hhcGVba2V5XSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgbmFtZSBpbiBzcmNba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRbbmFtZV0gPSBtaXgocmVzdWx0W25hbWVdIHx8IHt9LCBzcmNba2V5XVtuYW1lXSwgc2hhcGVba2V5XSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZGVzdFtrZXldID0gcmVzdWx0O1xuICAgICAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHNoYXBlW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzID0ge307XG4gICAgICAgICAgICAgICAgY29uc3QgaW5uZXJTaGFwZSA9IHNoYXBlW2tleV0ucmVkdWNlKGZ1bmN0aW9uKHMsIGspIHtcbiAgICAgICAgICAgICAgICAgICAgc1trXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzO1xuICAgICAgICAgICAgICAgIH0sIHt9KTtcblxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkZXN0W2tleV0gfHwge30pKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc1tuYW1lXSA9IHt9O1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1peChyZXNbbmFtZV0sIHZhbHVlLCBpbm5lclNoYXBlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbmFtZSBpbiBzcmNba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChzcmNba2V5XSwgbmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmVzW25hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzW25hbWVdID0ge307XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzcmNba2V5XSAmJiBzcmNba2V5XVtuYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1peChyZXNbbmFtZV0sIHNyY1trZXldW25hbWVdLCBpbm5lclNoYXBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGRlc3Rba2V5XSA9IHJlcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGVzdDtcbn1cblxuY29uc3QgbWl4JDEgPSAoZGVzdCwgc3JjKSA9PiBtaXgoZGVzdCwgc3JjLCBzaGFwZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbWl4JDE7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/config/mix.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/config/parser.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/config/parser.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst index = __webpack_require__(/*! ../scope/index.cjs */ \"./node_modules/css-tree/cjs/syntax/scope/index.cjs\");\nconst index$1 = __webpack_require__(/*! ../atrule/index.cjs */ \"./node_modules/css-tree/cjs/syntax/atrule/index.cjs\");\nconst index$2 = __webpack_require__(/*! ../pseudo/index.cjs */ \"./node_modules/css-tree/cjs/syntax/pseudo/index.cjs\");\nconst index$3 = __webpack_require__(/*! ../node/index.cjs */ \"./node_modules/css-tree/cjs/syntax/node/index.cjs\");\n\nconst config = {\n    parseContext: {\n        default: 'StyleSheet',\n        stylesheet: 'StyleSheet',\n        atrule: 'Atrule',\n        atrulePrelude: function(options) {\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\n        },\n        mediaQueryList: 'MediaQueryList',\n        mediaQuery: 'MediaQuery',\n        rule: 'Rule',\n        selectorList: 'SelectorList',\n        selector: 'Selector',\n        block: function() {\n            return this.Block(true);\n        },\n        declarationList: 'DeclarationList',\n        declaration: 'Declaration',\n        value: 'Value'\n    },\n    scope: index,\n    atrule: index$1,\n    pseudo: index$2,\n    node: index$3\n};\n\nmodule.exports = config;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9jb25maWcvcGFyc2VyLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L2NvbmZpZy9wYXJzZXIuY2pzPzNkYzMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbmRleCA9IHJlcXVpcmUoJy4uL3Njb3BlL2luZGV4LmNqcycpO1xuY29uc3QgaW5kZXgkMSA9IHJlcXVpcmUoJy4uL2F0cnVsZS9pbmRleC5janMnKTtcbmNvbnN0IGluZGV4JDIgPSByZXF1aXJlKCcuLi9wc2V1ZG8vaW5kZXguY2pzJyk7XG5jb25zdCBpbmRleCQzID0gcmVxdWlyZSgnLi4vbm9kZS9pbmRleC5janMnKTtcblxuY29uc3QgY29uZmlnID0ge1xuICAgIHBhcnNlQ29udGV4dDoge1xuICAgICAgICBkZWZhdWx0OiAnU3R5bGVTaGVldCcsXG4gICAgICAgIHN0eWxlc2hlZXQ6ICdTdHlsZVNoZWV0JyxcbiAgICAgICAgYXRydWxlOiAnQXRydWxlJyxcbiAgICAgICAgYXRydWxlUHJlbHVkZTogZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuQXRydWxlUHJlbHVkZShvcHRpb25zLmF0cnVsZSA/IFN0cmluZyhvcHRpb25zLmF0cnVsZSkgOiBudWxsKTtcbiAgICAgICAgfSxcbiAgICAgICAgbWVkaWFRdWVyeUxpc3Q6ICdNZWRpYVF1ZXJ5TGlzdCcsXG4gICAgICAgIG1lZGlhUXVlcnk6ICdNZWRpYVF1ZXJ5JyxcbiAgICAgICAgcnVsZTogJ1J1bGUnLFxuICAgICAgICBzZWxlY3Rvckxpc3Q6ICdTZWxlY3Rvckxpc3QnLFxuICAgICAgICBzZWxlY3RvcjogJ1NlbGVjdG9yJyxcbiAgICAgICAgYmxvY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuQmxvY2sodHJ1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGRlY2xhcmF0aW9uTGlzdDogJ0RlY2xhcmF0aW9uTGlzdCcsXG4gICAgICAgIGRlY2xhcmF0aW9uOiAnRGVjbGFyYXRpb24nLFxuICAgICAgICB2YWx1ZTogJ1ZhbHVlJ1xuICAgIH0sXG4gICAgc2NvcGU6IGluZGV4LFxuICAgIGF0cnVsZTogaW5kZXgkMSxcbiAgICBwc2V1ZG86IGluZGV4JDIsXG4gICAgbm9kZTogaW5kZXgkM1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb25maWc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/config/parser.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/config/walker.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/config/walker.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst index = __webpack_require__(/*! ../node/index.cjs */ \"./node_modules/css-tree/cjs/syntax/node/index.cjs\");\n\nconst config = {\n    node: index\n};\n\nmodule.exports = config;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9jb25maWcvd2Fsa2VyLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L2NvbmZpZy93YWxrZXIuY2pzP2YwYWYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBpbmRleCA9IHJlcXVpcmUoJy4uL25vZGUvaW5kZXguY2pzJyk7XG5cbmNvbnN0IGNvbmZpZyA9IHtcbiAgICBub2RlOiBpbmRleFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb25maWc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/config/walker.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/create.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/create.cjs ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst index = __webpack_require__(/*! ../tokenizer/index.cjs */ \"./node_modules/css-tree/cjs/tokenizer/index.cjs\");\nconst create = __webpack_require__(/*! ../parser/create.cjs */ \"./node_modules/css-tree/cjs/parser/create.cjs\");\nconst create$2 = __webpack_require__(/*! ../generator/create.cjs */ \"./node_modules/css-tree/cjs/generator/create.cjs\");\nconst create$3 = __webpack_require__(/*! ../convertor/create.cjs */ \"./node_modules/css-tree/cjs/convertor/create.cjs\");\nconst create$1 = __webpack_require__(/*! ../walker/create.cjs */ \"./node_modules/css-tree/cjs/walker/create.cjs\");\nconst Lexer = __webpack_require__(/*! ../lexer/Lexer.cjs */ \"./node_modules/css-tree/cjs/lexer/Lexer.cjs\");\nconst mix = __webpack_require__(/*! ./config/mix.cjs */ \"./node_modules/css-tree/cjs/syntax/config/mix.cjs\");\n\nfunction createSyntax(config) {\n    const parse = create.createParser(config);\n    const walk = create$1.createWalker(config);\n    const generate = create$2.createGenerator(config);\n    const { fromPlainObject, toPlainObject } = create$3.createConvertor(walk);\n\n    const syntax = {\n        lexer: null,\n        createLexer: config => new Lexer.Lexer(config, syntax, syntax.lexer.structure),\n\n        tokenize: index.tokenize,\n        parse,\n        generate,\n\n        walk,\n        find: walk.find,\n        findLast: walk.findLast,\n        findAll: walk.findAll,\n\n        fromPlainObject,\n        toPlainObject,\n\n        fork: function(extension) {\n            const base = mix({}, config); // copy of config\n            return createSyntax(\n                typeof extension === 'function'\n                    ? extension(base, Object.assign)\n                    : mix(base, extension)\n            );\n        }\n    };\n\n    syntax.lexer = new Lexer.Lexer({\n        generic: true,\n        types: config.types,\n        atrules: config.atrules,\n        properties: config.properties,\n        node: config.node\n    }, syntax);\n\n    return syntax;\n}\nconst createSyntax$1 = config => createSyntax(mix({}, config));\n\nmodule.exports = createSyntax$1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9jcmVhdGUuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvY3JlYXRlLmNqcz8yYWE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgaW5kZXggPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvaW5kZXguY2pzJyk7XG5jb25zdCBjcmVhdGUgPSByZXF1aXJlKCcuLi9wYXJzZXIvY3JlYXRlLmNqcycpO1xuY29uc3QgY3JlYXRlJDIgPSByZXF1aXJlKCcuLi9nZW5lcmF0b3IvY3JlYXRlLmNqcycpO1xuY29uc3QgY3JlYXRlJDMgPSByZXF1aXJlKCcuLi9jb252ZXJ0b3IvY3JlYXRlLmNqcycpO1xuY29uc3QgY3JlYXRlJDEgPSByZXF1aXJlKCcuLi93YWxrZXIvY3JlYXRlLmNqcycpO1xuY29uc3QgTGV4ZXIgPSByZXF1aXJlKCcuLi9sZXhlci9MZXhlci5janMnKTtcbmNvbnN0IG1peCA9IHJlcXVpcmUoJy4vY29uZmlnL21peC5janMnKTtcblxuZnVuY3Rpb24gY3JlYXRlU3ludGF4KGNvbmZpZykge1xuICAgIGNvbnN0IHBhcnNlID0gY3JlYXRlLmNyZWF0ZVBhcnNlcihjb25maWcpO1xuICAgIGNvbnN0IHdhbGsgPSBjcmVhdGUkMS5jcmVhdGVXYWxrZXIoY29uZmlnKTtcbiAgICBjb25zdCBnZW5lcmF0ZSA9IGNyZWF0ZSQyLmNyZWF0ZUdlbmVyYXRvcihjb25maWcpO1xuICAgIGNvbnN0IHsgZnJvbVBsYWluT2JqZWN0LCB0b1BsYWluT2JqZWN0IH0gPSBjcmVhdGUkMy5jcmVhdGVDb252ZXJ0b3Iod2Fsayk7XG5cbiAgICBjb25zdCBzeW50YXggPSB7XG4gICAgICAgIGxleGVyOiBudWxsLFxuICAgICAgICBjcmVhdGVMZXhlcjogY29uZmlnID0+IG5ldyBMZXhlci5MZXhlcihjb25maWcsIHN5bnRheCwgc3ludGF4LmxleGVyLnN0cnVjdHVyZSksXG5cbiAgICAgICAgdG9rZW5pemU6IGluZGV4LnRva2VuaXplLFxuICAgICAgICBwYXJzZSxcbiAgICAgICAgZ2VuZXJhdGUsXG5cbiAgICAgICAgd2FsayxcbiAgICAgICAgZmluZDogd2Fsay5maW5kLFxuICAgICAgICBmaW5kTGFzdDogd2Fsay5maW5kTGFzdCxcbiAgICAgICAgZmluZEFsbDogd2Fsay5maW5kQWxsLFxuXG4gICAgICAgIGZyb21QbGFpbk9iamVjdCxcbiAgICAgICAgdG9QbGFpbk9iamVjdCxcblxuICAgICAgICBmb3JrOiBmdW5jdGlvbihleHRlbnNpb24pIHtcbiAgICAgICAgICAgIGNvbnN0IGJhc2UgPSBtaXgoe30sIGNvbmZpZyk7IC8vIGNvcHkgb2YgY29uZmlnXG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlU3ludGF4KFxuICAgICAgICAgICAgICAgIHR5cGVvZiBleHRlbnNpb24gPT09ICdmdW5jdGlvbidcbiAgICAgICAgICAgICAgICAgICAgPyBleHRlbnNpb24oYmFzZSwgT2JqZWN0LmFzc2lnbilcbiAgICAgICAgICAgICAgICAgICAgOiBtaXgoYmFzZSwgZXh0ZW5zaW9uKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBzeW50YXgubGV4ZXIgPSBuZXcgTGV4ZXIuTGV4ZXIoe1xuICAgICAgICBnZW5lcmljOiB0cnVlLFxuICAgICAgICB0eXBlczogY29uZmlnLnR5cGVzLFxuICAgICAgICBhdHJ1bGVzOiBjb25maWcuYXRydWxlcyxcbiAgICAgICAgcHJvcGVydGllczogY29uZmlnLnByb3BlcnRpZXMsXG4gICAgICAgIG5vZGU6IGNvbmZpZy5ub2RlXG4gICAgfSwgc3ludGF4KTtcblxuICAgIHJldHVybiBzeW50YXg7XG59XG5jb25zdCBjcmVhdGVTeW50YXgkMSA9IGNvbmZpZyA9PiBjcmVhdGVTeW50YXgobWl4KHt9LCBjb25maWcpKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVTeW50YXgkMTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/create.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/function/expression.cjs":
/*!******************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/function/expression.cjs ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// legacy IE function\n// expression( <any-value> )\nfunction expressionFn() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n\nmodule.exports = expressionFn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9mdW5jdGlvbi9leHByZXNzaW9uLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L2Z1bmN0aW9uL2V4cHJlc3Npb24uY2pzP2RjNTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBsZWdhY3kgSUUgZnVuY3Rpb25cbi8vIGV4cHJlc3Npb24oIDxhbnktdmFsdWU+IClcbmZ1bmN0aW9uIGV4cHJlc3Npb25GbigpIHtcbiAgICByZXR1cm4gdGhpcy5jcmVhdGVTaW5nbGVOb2RlTGlzdChcbiAgICAgICAgdGhpcy5SYXcodGhpcy50b2tlbkluZGV4LCBudWxsLCBmYWxzZSlcbiAgICApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cHJlc3Npb25GbjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/function/expression.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/function/var.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/function/var.cjs ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\n// var( <ident> , <value>? )\nfunction varFn() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n\n    this.skipSC();\n\n    if (this.tokenType === types.Comma) {\n        children.push(this.Operator());\n\n        const startIndex = this.tokenIndex;\n        const value = this.parseCustomProperty\n            ? this.Value(null)\n            : this.Raw(this.tokenIndex, this.consumeUntilExclamationMarkOrSemicolon, false);\n\n        if (value.type === 'Value' && value.children.isEmpty) {\n            for (let offset = startIndex - this.tokenIndex; offset <= 0; offset++) {\n                if (this.lookupType(offset) === types.WhiteSpace) {\n                    value.children.appendData({\n                        type: 'WhiteSpace',\n                        loc: null,\n                        value: ' '\n                    });\n                    break;\n                }\n            }\n        }\n\n        children.push(value);\n    }\n\n    return children;\n}\n\nmodule.exports = varFn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9mdW5jdGlvbi92YXIuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvZnVuY3Rpb24vdmFyLmNqcz85ZmExIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG4vLyB2YXIoIDxpZGVudD4gLCA8dmFsdWU+PyApXG5mdW5jdGlvbiB2YXJGbigpIHtcbiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuY3JlYXRlTGlzdCgpO1xuXG4gICAgdGhpcy5za2lwU0MoKTtcblxuICAgIC8vIE5PVEU6IERvbid0IGNoZWNrIG1vcmUgdGhhbiBhIGZpcnN0IGFyZ3VtZW50IGlzIGFuIGlkZW50LCByZXN0IGNoZWNrcyBhcmUgZm9yIGxleGVyXG4gICAgY2hpbGRyZW4ucHVzaCh0aGlzLklkZW50aWZpZXIoKSk7XG5cbiAgICB0aGlzLnNraXBTQygpO1xuXG4gICAgaWYgKHRoaXMudG9rZW5UeXBlID09PSB0eXBlcy5Db21tYSkge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuT3BlcmF0b3IoKSk7XG5cbiAgICAgICAgY29uc3Qgc3RhcnRJbmRleCA9IHRoaXMudG9rZW5JbmRleDtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcnNlQ3VzdG9tUHJvcGVydHlcbiAgICAgICAgICAgID8gdGhpcy5WYWx1ZShudWxsKVxuICAgICAgICAgICAgOiB0aGlzLlJhdyh0aGlzLnRva2VuSW5kZXgsIHRoaXMuY29uc3VtZVVudGlsRXhjbGFtYXRpb25NYXJrT3JTZW1pY29sb24sIGZhbHNlKTtcblxuICAgICAgICBpZiAodmFsdWUudHlwZSA9PT0gJ1ZhbHVlJyAmJiB2YWx1ZS5jaGlsZHJlbi5pc0VtcHR5KSB7XG4gICAgICAgICAgICBmb3IgKGxldCBvZmZzZXQgPSBzdGFydEluZGV4IC0gdGhpcy50b2tlbkluZGV4OyBvZmZzZXQgPD0gMDsgb2Zmc2V0KyspIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5sb29rdXBUeXBlKG9mZnNldCkgPT09IHR5cGVzLldoaXRlU3BhY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUuY2hpbGRyZW4uYXBwZW5kRGF0YSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnV2hpdGVTcGFjZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2M6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJyAnXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjaGlsZHJlbi5wdXNoKHZhbHVlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY2hpbGRyZW47XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdmFyRm47XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/function/var.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/index.cjs":
/*!****************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/index.cjs ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst create = __webpack_require__(/*! ./create.cjs */ \"./node_modules/css-tree/cjs/syntax/create.cjs\");\nconst lexer = __webpack_require__(/*! ./config/lexer.cjs */ \"./node_modules/css-tree/cjs/syntax/config/lexer.cjs\");\nconst parser = __webpack_require__(/*! ./config/parser.cjs */ \"./node_modules/css-tree/cjs/syntax/config/parser.cjs\");\nconst walker = __webpack_require__(/*! ./config/walker.cjs */ \"./node_modules/css-tree/cjs/syntax/config/walker.cjs\");\n\nconst syntax = create({\n    ...lexer,\n    ...parser,\n    ...walker\n});\n\nmodule.exports = syntax;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9pbmRleC5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9pbmRleC5janM/ZmMwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNyZWF0ZSA9IHJlcXVpcmUoJy4vY3JlYXRlLmNqcycpO1xuY29uc3QgbGV4ZXIgPSByZXF1aXJlKCcuL2NvbmZpZy9sZXhlci5janMnKTtcbmNvbnN0IHBhcnNlciA9IHJlcXVpcmUoJy4vY29uZmlnL3BhcnNlci5janMnKTtcbmNvbnN0IHdhbGtlciA9IHJlcXVpcmUoJy4vY29uZmlnL3dhbGtlci5janMnKTtcblxuY29uc3Qgc3ludGF4ID0gY3JlYXRlKHtcbiAgICAuLi5sZXhlcixcbiAgICAuLi5wYXJzZXIsXG4gICAgLi4ud2Fsa2VyXG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBzeW50YXg7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/index.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/AnPlusB.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/AnPlusB.cjs ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\nconst charCodeDefinitions = __webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction checkInteger(offset, disallowSign) {\n    let pos = this.tokenStart + offset;\n    const code = this.charCodeAt(pos);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            this.error('Number sign is not allowed');\n        }\n        pos++;\n    }\n\n    for (; pos < this.tokenEnd; pos++) {\n        if (!charCodeDefinitions.isDigit(this.charCodeAt(pos))) {\n            this.error('Integer is expected', pos);\n        }\n    }\n}\n\nfunction checkTokenIsInteger(disallowSign) {\n    return checkInteger.call(this, 0, disallowSign);\n}\n\nfunction expectCharCode(offset, code) {\n    if (!this.cmpChar(this.tokenStart + offset, code)) {\n        let msg = '';\n\n        switch (code) {\n            case N:\n                msg = 'N is expected';\n                break;\n            case HYPHENMINUS:\n                msg = 'HyphenMinus is expected';\n                break;\n        }\n\n        this.error(msg, this.tokenStart + offset);\n    }\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB() {\n    let offset = 0;\n    let sign = 0;\n    let type = this.tokenType;\n\n    while (type === types.WhiteSpace || type === types.Comment) {\n        type = this.lookupType(++offset);\n    }\n\n    if (type !== types.Number) {\n        if (this.isDelim(PLUSSIGN, offset) ||\n            this.isDelim(HYPHENMINUS, offset)) {\n            sign = this.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\n\n            do {\n                type = this.lookupType(++offset);\n            } while (type === types.WhiteSpace || type === types.Comment);\n\n            if (type !== types.Number) {\n                this.skip(offset);\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    if (offset > 0) {\n        this.skip(offset);\n    }\n\n    if (sign === 0) {\n        type = this.charCodeAt(this.tokenStart);\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\n            this.error('Number sign is expected');\n        }\n    }\n\n    checkTokenIsInteger.call(this, sign !== 0);\n    return sign === HYPHENMINUS ? '-' + this.consume(types.Number) : this.consume(types.Number);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nconst name = 'AnPlusB';\nconst structure = {\n    a: [String, null],\n    b: [String, null]\n};\n\nfunction parse() {\n    /* eslint-disable brace-style*/\n    const start = this.tokenStart;\n    let a = null;\n    let b = null;\n\n    // <integer>\n    if (this.tokenType === types.Number) {\n        checkTokenIsInteger.call(this, ALLOW_SIGN);\n        b = this.consume(types.Number);\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (this.tokenType === types.Ident && this.cmpChar(this.tokenStart, HYPHENMINUS)) {\n        a = '-1';\n\n        expectCharCode.call(this, 1, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // -n- <signless-integer>\n            case 3:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(types.Number);\n                break;\n\n            // <dashndashdigit-ident>\n            default:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n                checkInteger.call(this, 3, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + 2);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (this.tokenType === types.Ident || (this.isDelim(PLUSSIGN) && this.lookupType(1) === types.Ident)) {\n        let sign = 0;\n        a = '1';\n\n        // just ignore a plus\n        if (this.isDelim(PLUSSIGN)) {\n            sign = 1;\n            this.next();\n        }\n\n        expectCharCode.call(this, 0, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // '+'? n- <signless-integer>\n            case 2:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(types.Number);\n                break;\n\n            // '+'? <ndashdigit-ident>\n            default:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n                checkInteger.call(this, 2, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + sign + 1);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (this.tokenType === types.Dimension) {\n        const code = this.charCodeAt(this.tokenStart);\n        const sign = code === PLUSSIGN || code === HYPHENMINUS;\n        let i = this.tokenStart + sign;\n\n        for (; i < this.tokenEnd; i++) {\n            if (!charCodeDefinitions.isDigit(this.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === this.tokenStart + sign) {\n            this.error('Integer is expected', this.tokenStart + sign);\n        }\n\n        expectCharCode.call(this, i - this.tokenStart, N);\n        a = this.substring(start, i);\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === this.tokenEnd) {\n            this.next();\n            b = consumeB.call(this);\n        } else {\n            expectCharCode.call(this, i - this.tokenStart + 1, HYPHENMINUS);\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === this.tokenEnd) {\n                this.next();\n                this.skipSC();\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n                b = '-' + this.consume(types.Number);\n            }\n            // <ndashdigit-dimension>\n            else {\n                checkInteger.call(this, i - this.tokenStart + 2, DISALLOW_SIGN);\n                this.next();\n                b = this.substrToCursor(i + 1);\n            }\n        }\n    } else {\n        this.error();\n    }\n\n    if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\n        a = a.substr(1);\n    }\n\n    if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\n        b = b.substr(1);\n    }\n\n    return {\n        type: 'AnPlusB',\n        loc: this.getLocation(start, this.tokenStart),\n        a,\n        b\n    };\n}\n\nfunction generate(node) {\n    if (node.a) {\n        const a =\n            node.a === '+1' && 'n' ||\n            node.a ===  '1' && 'n' ||\n            node.a === '-1' && '-n' ||\n            node.a + 'n';\n\n        if (node.b) {\n            const b = node.b[0] === '-' || node.b[0] === '+'\n                ? node.b\n                : '+' + node.b;\n            this.tokenize(a + b);\n        } else {\n            this.tokenize(a);\n        }\n    } else {\n        this.tokenize(node.b);\n    }\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/AnPlusB.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Atrule.cjs":
/*!**********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Atrule.cjs ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracketOrSemicolon, true);\n}\n\nfunction isDeclarationBlockAtrule() {\n    for (let offset = 1, type; type = this.lookupType(offset); offset++) {\n        if (type === types.RightCurlyBracket) {\n            return true;\n        }\n\n        if (type === types.LeftCurlyBracket ||\n            type === types.AtKeyword) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\n\nconst name = 'Atrule';\nconst walkContext = 'atrule';\nconst structure = {\n    name: String,\n    prelude: ['AtrulePrelude', 'Raw', null],\n    block: ['Block', null]\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n    let name;\n    let nameLowerCase;\n    let prelude = null;\n    let block = null;\n\n    this.eat(types.AtKeyword);\n\n    name = this.substrToCursor(start + 1);\n    nameLowerCase = name.toLowerCase();\n    this.skipSC();\n\n    // parse prelude\n    if (this.eof === false &&\n        this.tokenType !== types.LeftCurlyBracket &&\n        this.tokenType !== types.Semicolon) {\n        if (this.parseAtrulePrelude) {\n            prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\n        } else {\n            prelude = consumeRaw.call(this, this.tokenIndex);\n        }\n\n        this.skipSC();\n    }\n\n    switch (this.tokenType) {\n        case types.Semicolon:\n            this.next();\n            break;\n\n        case types.LeftCurlyBracket:\n            if (hasOwnProperty.call(this.atrule, nameLowerCase) &&\n                typeof this.atrule[nameLowerCase].block === 'function') {\n                block = this.atrule[nameLowerCase].block.call(this);\n            } else {\n                // TODO: should consume block content as Raw?\n                block = this.Block(isDeclarationBlockAtrule.call(this));\n            }\n\n            break;\n    }\n\n    return {\n        type: 'Atrule',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        prelude,\n        block\n    };\n}\n\nfunction generate(node) {\n    this.token(types.AtKeyword, '@' + node.name);\n\n    if (node.prelude !== null) {\n        this.node(node.prelude);\n    }\n\n    if (node.block) {\n        this.node(node.block);\n    } else {\n        this.token(types.Semicolon, ';');\n    }\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0F0cnVsZS5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0F0cnVsZS5janM/NTEzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuZnVuY3Rpb24gY29uc3VtZVJhdyhzdGFydFRva2VuKSB7XG4gICAgcmV0dXJuIHRoaXMuUmF3KHN0YXJ0VG9rZW4sIHRoaXMuY29uc3VtZVVudGlsTGVmdEN1cmx5QnJhY2tldE9yU2VtaWNvbG9uLCB0cnVlKTtcbn1cblxuZnVuY3Rpb24gaXNEZWNsYXJhdGlvbkJsb2NrQXRydWxlKCkge1xuICAgIGZvciAobGV0IG9mZnNldCA9IDEsIHR5cGU7IHR5cGUgPSB0aGlzLmxvb2t1cFR5cGUob2Zmc2V0KTsgb2Zmc2V0KyspIHtcbiAgICAgICAgaWYgKHR5cGUgPT09IHR5cGVzLlJpZ2h0Q3VybHlCcmFja2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlID09PSB0eXBlcy5MZWZ0Q3VybHlCcmFja2V0IHx8XG4gICAgICAgICAgICB0eXBlID09PSB0eXBlcy5BdEtleXdvcmQpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuXG5jb25zdCBuYW1lID0gJ0F0cnVsZSc7XG5jb25zdCB3YWxrQ29udGV4dCA9ICdhdHJ1bGUnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZyxcbiAgICBwcmVsdWRlOiBbJ0F0cnVsZVByZWx1ZGUnLCAnUmF3JywgbnVsbF0sXG4gICAgYmxvY2s6IFsnQmxvY2snLCBudWxsXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnRva2VuU3RhcnQ7XG4gICAgbGV0IG5hbWU7XG4gICAgbGV0IG5hbWVMb3dlckNhc2U7XG4gICAgbGV0IHByZWx1ZGUgPSBudWxsO1xuICAgIGxldCBibG9jayA9IG51bGw7XG5cbiAgICB0aGlzLmVhdCh0eXBlcy5BdEtleXdvcmQpO1xuXG4gICAgbmFtZSA9IHRoaXMuc3Vic3RyVG9DdXJzb3Ioc3RhcnQgKyAxKTtcbiAgICBuYW1lTG93ZXJDYXNlID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIHRoaXMuc2tpcFNDKCk7XG5cbiAgICAvLyBwYXJzZSBwcmVsdWRlXG4gICAgaWYgKHRoaXMuZW9mID09PSBmYWxzZSAmJlxuICAgICAgICB0aGlzLnRva2VuVHlwZSAhPT0gdHlwZXMuTGVmdEN1cmx5QnJhY2tldCAmJlxuICAgICAgICB0aGlzLnRva2VuVHlwZSAhPT0gdHlwZXMuU2VtaWNvbG9uKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcnNlQXRydWxlUHJlbHVkZSkge1xuICAgICAgICAgICAgcHJlbHVkZSA9IHRoaXMucGFyc2VXaXRoRmFsbGJhY2sodGhpcy5BdHJ1bGVQcmVsdWRlLmJpbmQodGhpcywgbmFtZSksIGNvbnN1bWVSYXcpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJlbHVkZSA9IGNvbnN1bWVSYXcuY2FsbCh0aGlzLCB0aGlzLnRva2VuSW5kZXgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5za2lwU0MoKTtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRoaXMudG9rZW5UeXBlKSB7XG4gICAgICAgIGNhc2UgdHlwZXMuU2VtaWNvbG9uOlxuICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIHR5cGVzLkxlZnRDdXJseUJyYWNrZXQ6XG4gICAgICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmF0cnVsZSwgbmFtZUxvd2VyQ2FzZSkgJiZcbiAgICAgICAgICAgICAgICB0eXBlb2YgdGhpcy5hdHJ1bGVbbmFtZUxvd2VyQ2FzZV0uYmxvY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBibG9jayA9IHRoaXMuYXRydWxlW25hbWVMb3dlckNhc2VdLmJsb2NrLmNhbGwodGhpcyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFRPRE86IHNob3VsZCBjb25zdW1lIGJsb2NrIGNvbnRlbnQgYXMgUmF3P1xuICAgICAgICAgICAgICAgIGJsb2NrID0gdGhpcy5CbG9jayhpc0RlY2xhcmF0aW9uQmxvY2tBdHJ1bGUuY2FsbCh0aGlzKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdBdHJ1bGUnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIG5hbWUsXG4gICAgICAgIHByZWx1ZGUsXG4gICAgICAgIGJsb2NrXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuQXRLZXl3b3JkLCAnQCcgKyBub2RlLm5hbWUpO1xuXG4gICAgaWYgKG5vZGUucHJlbHVkZSAhPT0gbnVsbCkge1xuICAgICAgICB0aGlzLm5vZGUobm9kZS5wcmVsdWRlKTtcbiAgICB9XG5cbiAgICBpZiAobm9kZS5ibG9jaykge1xuICAgICAgICB0aGlzLm5vZGUobm9kZS5ibG9jayk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy50b2tlbih0eXBlcy5TZW1pY29sb24sICc7Jyk7XG4gICAgfVxufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG5leHBvcnRzLndhbGtDb250ZXh0ID0gd2Fsa0NvbnRleHQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Atrule.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/AtrulePrelude.cjs":
/*!*****************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/AtrulePrelude.cjs ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'AtrulePrelude';\nconst walkContext = 'atrulePrelude';\nconst structure = {\n    children: [[]]\n};\n\nfunction parse(name) {\n    let children = null;\n\n    if (name !== null) {\n        name = name.toLowerCase();\n    }\n\n    this.skipSC();\n\n    if (hasOwnProperty.call(this.atrule, name) &&\n        typeof this.atrule[name].prelude === 'function') {\n        // custom consumer\n        children = this.atrule[name].prelude.call(this);\n    } else {\n        // default consumer\n        children = this.readSequence(this.scope.AtrulePrelude);\n    }\n\n    this.skipSC();\n\n    if (this.eof !== true &&\n        this.tokenType !== types.LeftCurlyBracket &&\n        this.tokenType !== types.Semicolon) {\n        this.error('Semicolon or block is expected');\n    }\n\n    return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.children(node);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0F0cnVsZVByZWx1ZGUuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9BdHJ1bGVQcmVsdWRlLmNqcz85M2VhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBuYW1lID0gJ0F0cnVsZVByZWx1ZGUnO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAnYXRydWxlUHJlbHVkZSc7XG5jb25zdCBzdHJ1Y3R1cmUgPSB7XG4gICAgY2hpbGRyZW46IFtbXV1cbn07XG5cbmZ1bmN0aW9uIHBhcnNlKG5hbWUpIHtcbiAgICBsZXQgY2hpbGRyZW4gPSBudWxsO1xuXG4gICAgaWYgKG5hbWUgIT09IG51bGwpIHtcbiAgICAgICAgbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICB9XG5cbiAgICB0aGlzLnNraXBTQygpO1xuXG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwodGhpcy5hdHJ1bGUsIG5hbWUpICYmXG4gICAgICAgIHR5cGVvZiB0aGlzLmF0cnVsZVtuYW1lXS5wcmVsdWRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIGN1c3RvbSBjb25zdW1lclxuICAgICAgICBjaGlsZHJlbiA9IHRoaXMuYXRydWxlW25hbWVdLnByZWx1ZGUuY2FsbCh0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBkZWZhdWx0IGNvbnN1bWVyXG4gICAgICAgIGNoaWxkcmVuID0gdGhpcy5yZWFkU2VxdWVuY2UodGhpcy5zY29wZS5BdHJ1bGVQcmVsdWRlKTtcbiAgICB9XG5cbiAgICB0aGlzLnNraXBTQygpO1xuXG4gICAgaWYgKHRoaXMuZW9mICE9PSB0cnVlICYmXG4gICAgICAgIHRoaXMudG9rZW5UeXBlICE9PSB0eXBlcy5MZWZ0Q3VybHlCcmFja2V0ICYmXG4gICAgICAgIHRoaXMudG9rZW5UeXBlICE9PSB0eXBlcy5TZW1pY29sb24pIHtcbiAgICAgICAgdGhpcy5lcnJvcignU2VtaWNvbG9uIG9yIGJsb2NrIGlzIGV4cGVjdGVkJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0F0cnVsZVByZWx1ZGUnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb25Gcm9tTGlzdChjaGlsZHJlbiksXG4gICAgICAgIGNoaWxkcmVuXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMuY2hpbGRyZW4obm9kZSk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbmV4cG9ydHMud2Fsa0NvbnRleHQgPSB3YWxrQ29udGV4dDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/AtrulePrelude.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/AttributeSelector.cjs":
/*!*********************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/AttributeSelector.cjs ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\nconst ASTERISK = 0x002A;         // U+002A ASTERISK (*)\nconst EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\nconst CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\nconst VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;            // U+007E TILDE (~)\n\nfunction getAttributeName() {\n    if (this.eof) {\n        this.error('Unexpected end of input');\n    }\n\n    const start = this.tokenStart;\n    let expectIdent = false;\n    let checkColon = true;\n\n    if (this.isDelim(ASTERISK)) {\n        expectIdent = true;\n        checkColon = false;\n        this.next();\n    } else if (!this.isDelim(VERTICALLINE)) {\n        this.eat(types.Ident);\n    }\n\n    if (this.isDelim(VERTICALLINE)) {\n        if (this.charCodeAt(this.tokenStart + 1) !== EQUALSSIGN) {\n            this.next();\n            this.eat(types.Ident);\n        } else if (expectIdent) {\n            this.error('Identifier is expected', this.tokenEnd);\n        }\n    } else if (expectIdent) {\n        this.error('Vertical line is expected');\n    }\n\n    if (checkColon && this.tokenType === types.Colon) {\n        this.next();\n        this.eat(types.Ident);\n    }\n\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nfunction getOperator() {\n    const start = this.tokenStart;\n    const code = this.charCodeAt(start);\n\n    if (code !== EQUALSSIGN &&        // =\n        code !== TILDE &&             // ~=\n        code !== CIRCUMFLEXACCENT &&  // ^=\n        code !== DOLLARSIGN &&        // $=\n        code !== ASTERISK &&          // *=\n        code !== VERTICALLINE         // |=\n    ) {\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\n    }\n\n    this.next();\n\n    if (code !== EQUALSSIGN) {\n        if (!this.isDelim(EQUALSSIGN)) {\n            this.error('Equal sign is expected');\n        }\n\n        this.next();\n    }\n\n    return this.substrToCursor(start);\n}\n\n// '[' <wq-name> ']'\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\nconst name = 'AttributeSelector';\nconst structure = {\n    name: 'Identifier',\n    matcher: [String, null],\n    value: ['String', 'Identifier', null],\n    flags: [String, null]\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n    let name;\n    let matcher = null;\n    let value = null;\n    let flags = null;\n\n    this.eat(types.LeftSquareBracket);\n    this.skipSC();\n\n    name = getAttributeName.call(this);\n    this.skipSC();\n\n    if (this.tokenType !== types.RightSquareBracket) {\n        // avoid case `[name i]`\n        if (this.tokenType !== types.Ident) {\n            matcher = getOperator.call(this);\n\n            this.skipSC();\n\n            value = this.tokenType === types.String\n                ? this.String()\n                : this.Identifier();\n\n            this.skipSC();\n        }\n\n        // attribute flags\n        if (this.tokenType === types.Ident) {\n            flags = this.consume(types.Ident);\n\n            this.skipSC();\n        }\n    }\n\n    this.eat(types.RightSquareBracket);\n\n    return {\n        type: 'AttributeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        matcher,\n        value,\n        flags\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Delim, '[');\n    this.node(node.name);\n\n    if (node.matcher !== null) {\n        this.tokenize(node.matcher);\n        this.node(node.value);\n    }\n\n    if (node.flags !== null) {\n        this.token(types.Ident, node.flags);\n    }\n\n    this.token(types.Delim, ']');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0F0dHJpYnV0ZVNlbGVjdG9yLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvQXR0cmlidXRlU2VsZWN0b3IuY2pzPzQ5OWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbnJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmNvbnN0IERPTExBUlNJR04gPSAweDAwMjQ7ICAgICAgIC8vIFUrMDAyNCBET0xMQVIgU0lHTiAoJClcbmNvbnN0IEFTVEVSSVNLID0gMHgwMDJBOyAgICAgICAgIC8vIFUrMDAyQSBBU1RFUklTSyAoKilcbmNvbnN0IEVRVUFMU1NJR04gPSAweDAwM0Q7ICAgICAgIC8vIFUrMDAzRCBFUVVBTFMgU0lHTiAoPSlcbmNvbnN0IENJUkNVTUZMRVhBQ0NFTlQgPSAweDAwNUU7IC8vIFUrMDA1RSAoXilcbmNvbnN0IFZFUlRJQ0FMTElORSA9IDB4MDA3QzsgICAgIC8vIFUrMDA3QyBWRVJUSUNBTCBMSU5FICh8KVxuY29uc3QgVElMREUgPSAweDAwN0U7ICAgICAgICAgICAgLy8gVSswMDdFIFRJTERFICh+KVxuXG5mdW5jdGlvbiBnZXRBdHRyaWJ1dGVOYW1lKCkge1xuICAgIGlmICh0aGlzLmVvZikge1xuICAgICAgICB0aGlzLmVycm9yKCdVbmV4cGVjdGVkIGVuZCBvZiBpbnB1dCcpO1xuICAgIH1cblxuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuICAgIGxldCBleHBlY3RJZGVudCA9IGZhbHNlO1xuICAgIGxldCBjaGVja0NvbG9uID0gdHJ1ZTtcblxuICAgIGlmICh0aGlzLmlzRGVsaW0oQVNURVJJU0spKSB7XG4gICAgICAgIGV4cGVjdElkZW50ID0gdHJ1ZTtcbiAgICAgICAgY2hlY2tDb2xvbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLm5leHQoKTtcbiAgICB9IGVsc2UgaWYgKCF0aGlzLmlzRGVsaW0oVkVSVElDQUxMSU5FKSkge1xuICAgICAgICB0aGlzLmVhdCh0eXBlcy5JZGVudCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNEZWxpbShWRVJUSUNBTExJTkUpKSB7XG4gICAgICAgIGlmICh0aGlzLmNoYXJDb2RlQXQodGhpcy50b2tlblN0YXJ0ICsgMSkgIT09IEVRVUFMU1NJR04pIHtcbiAgICAgICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgICAgICAgdGhpcy5lYXQodHlwZXMuSWRlbnQpO1xuICAgICAgICB9IGVsc2UgaWYgKGV4cGVjdElkZW50KSB7XG4gICAgICAgICAgICB0aGlzLmVycm9yKCdJZGVudGlmaWVyIGlzIGV4cGVjdGVkJywgdGhpcy50b2tlbkVuZCk7XG4gICAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGV4cGVjdElkZW50KSB7XG4gICAgICAgIHRoaXMuZXJyb3IoJ1ZlcnRpY2FsIGxpbmUgaXMgZXhwZWN0ZWQnKTtcbiAgICB9XG5cbiAgICBpZiAoY2hlY2tDb2xvbiAmJiB0aGlzLnRva2VuVHlwZSA9PT0gdHlwZXMuQ29sb24pIHtcbiAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgIHRoaXMuZWF0KHR5cGVzLklkZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnSWRlbnRpZmllcicsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KSxcbiAgICAgICAgbmFtZTogdGhpcy5zdWJzdHJUb0N1cnNvcihzdGFydClcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZXRPcGVyYXRvcigpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBjb25zdCBjb2RlID0gdGhpcy5jaGFyQ29kZUF0KHN0YXJ0KTtcblxuICAgIGlmIChjb2RlICE9PSBFUVVBTFNTSUdOICYmICAgICAgICAvLyA9XG4gICAgICAgIGNvZGUgIT09IFRJTERFICYmICAgICAgICAgICAgIC8vIH49XG4gICAgICAgIGNvZGUgIT09IENJUkNVTUZMRVhBQ0NFTlQgJiYgIC8vIF49XG4gICAgICAgIGNvZGUgIT09IERPTExBUlNJR04gJiYgICAgICAgIC8vICQ9XG4gICAgICAgIGNvZGUgIT09IEFTVEVSSVNLICYmICAgICAgICAgIC8vICo9XG4gICAgICAgIGNvZGUgIT09IFZFUlRJQ0FMTElORSAgICAgICAgIC8vIHw9XG4gICAgKSB7XG4gICAgICAgIHRoaXMuZXJyb3IoJ0F0dHJpYnV0ZSBzZWxlY3RvciAoPSwgfj0sIF49LCAkPSwgKj0sIHw9KSBpcyBleHBlY3RlZCcpO1xuICAgIH1cblxuICAgIHRoaXMubmV4dCgpO1xuXG4gICAgaWYgKGNvZGUgIT09IEVRVUFMU1NJR04pIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzRGVsaW0oRVFVQUxTU0lHTikpIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IoJ0VxdWFsIHNpZ24gaXMgZXhwZWN0ZWQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubmV4dCgpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnN1YnN0clRvQ3Vyc29yKHN0YXJ0KTtcbn1cblxuLy8gJ1snIDx3cS1uYW1lPiAnXSdcbi8vICdbJyA8d3EtbmFtZT4gPGF0dHItbWF0Y2hlcj4gWyA8c3RyaW5nLXRva2VuPiB8IDxpZGVudC10b2tlbj4gXSA8YXR0ci1tb2RpZmllcj4/ICddJ1xuY29uc3QgbmFtZSA9ICdBdHRyaWJ1dGVTZWxlY3Rvcic7XG5jb25zdCBzdHJ1Y3R1cmUgPSB7XG4gICAgbmFtZTogJ0lkZW50aWZpZXInLFxuICAgIG1hdGNoZXI6IFtTdHJpbmcsIG51bGxdLFxuICAgIHZhbHVlOiBbJ1N0cmluZycsICdJZGVudGlmaWVyJywgbnVsbF0sXG4gICAgZmxhZ3M6IFtTdHJpbmcsIG51bGxdXG59O1xuXG5mdW5jdGlvbiBwYXJzZSgpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBsZXQgbmFtZTtcbiAgICBsZXQgbWF0Y2hlciA9IG51bGw7XG4gICAgbGV0IHZhbHVlID0gbnVsbDtcbiAgICBsZXQgZmxhZ3MgPSBudWxsO1xuXG4gICAgdGhpcy5lYXQodHlwZXMuTGVmdFNxdWFyZUJyYWNrZXQpO1xuICAgIHRoaXMuc2tpcFNDKCk7XG5cbiAgICBuYW1lID0gZ2V0QXR0cmlidXRlTmFtZS5jYWxsKHRoaXMpO1xuICAgIHRoaXMuc2tpcFNDKCk7XG5cbiAgICBpZiAodGhpcy50b2tlblR5cGUgIT09IHR5cGVzLlJpZ2h0U3F1YXJlQnJhY2tldCkge1xuICAgICAgICAvLyBhdm9pZCBjYXNlIGBbbmFtZSBpXWBcbiAgICAgICAgaWYgKHRoaXMudG9rZW5UeXBlICE9PSB0eXBlcy5JZGVudCkge1xuICAgICAgICAgICAgbWF0Y2hlciA9IGdldE9wZXJhdG9yLmNhbGwodGhpcyk7XG5cbiAgICAgICAgICAgIHRoaXMuc2tpcFNDKCk7XG5cbiAgICAgICAgICAgIHZhbHVlID0gdGhpcy50b2tlblR5cGUgPT09IHR5cGVzLlN0cmluZ1xuICAgICAgICAgICAgICAgID8gdGhpcy5TdHJpbmcoKVxuICAgICAgICAgICAgICAgIDogdGhpcy5JZGVudGlmaWVyKCk7XG5cbiAgICAgICAgICAgIHRoaXMuc2tpcFNDKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhdHRyaWJ1dGUgZmxhZ3NcbiAgICAgICAgaWYgKHRoaXMudG9rZW5UeXBlID09PSB0eXBlcy5JZGVudCkge1xuICAgICAgICAgICAgZmxhZ3MgPSB0aGlzLmNvbnN1bWUodHlwZXMuSWRlbnQpO1xuXG4gICAgICAgICAgICB0aGlzLnNraXBTQygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5lYXQodHlwZXMuUmlnaHRTcXVhcmVCcmFja2V0KTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdBdHRyaWJ1dGVTZWxlY3RvcicsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KSxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgbWF0Y2hlcixcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIGZsYWdzXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuRGVsaW0sICdbJyk7XG4gICAgdGhpcy5ub2RlKG5vZGUubmFtZSk7XG5cbiAgICBpZiAobm9kZS5tYXRjaGVyICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMudG9rZW5pemUobm9kZS5tYXRjaGVyKTtcbiAgICAgICAgdGhpcy5ub2RlKG5vZGUudmFsdWUpO1xuICAgIH1cblxuICAgIGlmIChub2RlLmZsYWdzICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMudG9rZW4odHlwZXMuSWRlbnQsIG5vZGUuZmxhZ3MpO1xuICAgIH1cblxuICAgIHRoaXMudG9rZW4odHlwZXMuRGVsaW0sICddJyk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/AttributeSelector.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Block.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Block.cjs ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n}\nfunction consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n}\nfunction consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\nfunction consumeDeclaration() {\n    if (this.tokenType === types.Semicolon) {\n        return consumeRawDeclaration.call(this, this.tokenIndex);\n    }\n\n    const node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.tokenType === types.Semicolon) {\n        this.next();\n    }\n\n    return node;\n}\n\nconst name = 'Block';\nconst walkContext = 'block';\nconst structure = {\n    children: [[\n        'Atrule',\n        'Rule',\n        'Declaration'\n    ]]\n};\n\nfunction parse(isDeclaration) {\n    const consumer = isDeclaration ? consumeDeclaration : consumeRule;\n    const start = this.tokenStart;\n    let children = this.createList();\n\n    this.eat(types.LeftCurlyBracket);\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case types.RightCurlyBracket:\n                break scan;\n\n            case types.WhiteSpace:\n            case types.Comment:\n                this.next();\n                break;\n\n            case types.AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule, consumeRaw));\n                break;\n\n            default:\n                children.push(consumer.call(this));\n        }\n    }\n\n    if (!this.eof) {\n        this.eat(types.RightCurlyBracket);\n    }\n\n    return {\n        type: 'Block',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.token(types.LeftCurlyBracket, '{');\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(types.Semicolon, ';');\n        }\n    });\n    this.token(types.RightCurlyBracket, '}');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0Jsb2NrLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvQmxvY2suY2pzPzZmNjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbnJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmZ1bmN0aW9uIGNvbnN1bWVSYXcoc3RhcnRUb2tlbikge1xuICAgIHJldHVybiB0aGlzLlJhdyhzdGFydFRva2VuLCBudWxsLCB0cnVlKTtcbn1cbmZ1bmN0aW9uIGNvbnN1bWVSdWxlKCkge1xuICAgIHJldHVybiB0aGlzLnBhcnNlV2l0aEZhbGxiYWNrKHRoaXMuUnVsZSwgY29uc3VtZVJhdyk7XG59XG5mdW5jdGlvbiBjb25zdW1lUmF3RGVjbGFyYXRpb24oc3RhcnRUb2tlbikge1xuICAgIHJldHVybiB0aGlzLlJhdyhzdGFydFRva2VuLCB0aGlzLmNvbnN1bWVVbnRpbFNlbWljb2xvbkluY2x1ZGVkLCB0cnVlKTtcbn1cbmZ1bmN0aW9uIGNvbnN1bWVEZWNsYXJhdGlvbigpIHtcbiAgICBpZiAodGhpcy50b2tlblR5cGUgPT09IHR5cGVzLlNlbWljb2xvbikge1xuICAgICAgICByZXR1cm4gY29uc3VtZVJhd0RlY2xhcmF0aW9uLmNhbGwodGhpcywgdGhpcy50b2tlbkluZGV4KTtcbiAgICB9XG5cbiAgICBjb25zdCBub2RlID0gdGhpcy5wYXJzZVdpdGhGYWxsYmFjayh0aGlzLkRlY2xhcmF0aW9uLCBjb25zdW1lUmF3RGVjbGFyYXRpb24pO1xuXG4gICAgaWYgKHRoaXMudG9rZW5UeXBlID09PSB0eXBlcy5TZW1pY29sb24pIHtcbiAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5vZGU7XG59XG5cbmNvbnN0IG5hbWUgPSAnQmxvY2snO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAnYmxvY2snO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIGNoaWxkcmVuOiBbW1xuICAgICAgICAnQXRydWxlJyxcbiAgICAgICAgJ1J1bGUnLFxuICAgICAgICAnRGVjbGFyYXRpb24nXG4gICAgXV1cbn07XG5cbmZ1bmN0aW9uIHBhcnNlKGlzRGVjbGFyYXRpb24pIHtcbiAgICBjb25zdCBjb25zdW1lciA9IGlzRGVjbGFyYXRpb24gPyBjb25zdW1lRGVjbGFyYXRpb24gOiBjb25zdW1lUnVsZTtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBsZXQgY2hpbGRyZW4gPSB0aGlzLmNyZWF0ZUxpc3QoKTtcblxuICAgIHRoaXMuZWF0KHR5cGVzLkxlZnRDdXJseUJyYWNrZXQpO1xuXG4gICAgc2NhbjpcbiAgICB3aGlsZSAoIXRoaXMuZW9mKSB7XG4gICAgICAgIHN3aXRjaCAodGhpcy50b2tlblR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgdHlwZXMuUmlnaHRDdXJseUJyYWNrZXQ6XG4gICAgICAgICAgICAgICAgYnJlYWsgc2NhbjtcblxuICAgICAgICAgICAgY2FzZSB0eXBlcy5XaGl0ZVNwYWNlOlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5Db21tZW50OlxuICAgICAgICAgICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIHR5cGVzLkF0S2V5d29yZDpcbiAgICAgICAgICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMucGFyc2VXaXRoRmFsbGJhY2sodGhpcy5BdHJ1bGUsIGNvbnN1bWVSYXcpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICBjaGlsZHJlbi5wdXNoKGNvbnN1bWVyLmNhbGwodGhpcykpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmVvZikge1xuICAgICAgICB0aGlzLmVhdCh0eXBlcy5SaWdodEN1cmx5QnJhY2tldCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0Jsb2NrJyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uKHN0YXJ0LCB0aGlzLnRva2VuU3RhcnQpLFxuICAgICAgICBjaGlsZHJlblxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuKHR5cGVzLkxlZnRDdXJseUJyYWNrZXQsICd7Jyk7XG4gICAgdGhpcy5jaGlsZHJlbihub2RlLCBwcmV2ID0+IHtcbiAgICAgICAgaWYgKHByZXYudHlwZSA9PT0gJ0RlY2xhcmF0aW9uJykge1xuICAgICAgICAgICAgdGhpcy50b2tlbih0eXBlcy5TZW1pY29sb24sICc7Jyk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnRva2VuKHR5cGVzLlJpZ2h0Q3VybHlCcmFja2V0LCAnfScpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG5leHBvcnRzLndhbGtDb250ZXh0ID0gd2Fsa0NvbnRleHQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Block.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Brackets.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Brackets.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Brackets';\nconst structure = {\n    children: [[]]\n};\n\nfunction parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(types.LeftSquareBracket);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(types.RightSquareBracket);\n    }\n\n    return {\n        type: 'Brackets',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Delim, '[');\n    this.children(node);\n    this.token(types.Delim, ']');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0JyYWNrZXRzLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvQnJhY2tldHMuY2pzPzE0ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbnJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmNvbnN0IG5hbWUgPSAnQnJhY2tldHMnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIGNoaWxkcmVuOiBbW11dXG59O1xuXG5mdW5jdGlvbiBwYXJzZShyZWFkU2VxdWVuY2UsIHJlY29nbml6ZXIpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBsZXQgY2hpbGRyZW4gPSBudWxsO1xuXG4gICAgdGhpcy5lYXQodHlwZXMuTGVmdFNxdWFyZUJyYWNrZXQpO1xuXG4gICAgY2hpbGRyZW4gPSByZWFkU2VxdWVuY2UuY2FsbCh0aGlzLCByZWNvZ25pemVyKTtcblxuICAgIGlmICghdGhpcy5lb2YpIHtcbiAgICAgICAgdGhpcy5lYXQodHlwZXMuUmlnaHRTcXVhcmVCcmFja2V0KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnQnJhY2tldHMnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIGNoaWxkcmVuXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuRGVsaW0sICdbJyk7XG4gICAgdGhpcy5jaGlsZHJlbihub2RlKTtcbiAgICB0aGlzLnRva2VuKHR5cGVzLkRlbGltLCAnXScpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Brackets.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/CDC.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/CDC.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'CDC';\nconst structure = [];\n\nfunction parse() {\n    const start = this.tokenStart;\n\n    this.eat(types.CDC); // -->\n\n    return {\n        type: 'CDC',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nfunction generate() {\n    this.token(types.CDC, '-->');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0NEQy5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0NEQy5janM/NDg5MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdDREMnO1xuY29uc3Qgc3RydWN0dXJlID0gW107XG5cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuXG4gICAgdGhpcy5lYXQodHlwZXMuQ0RDKTsgLy8gLS0+XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnQ0RDJyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uKHN0YXJ0LCB0aGlzLnRva2VuU3RhcnQpXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUoKSB7XG4gICAgdGhpcy50b2tlbih0eXBlcy5DREMsICctLT4nKTtcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZSA9IGdlbmVyYXRlO1xuZXhwb3J0cy5uYW1lID0gbmFtZTtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc3RydWN0dXJlID0gc3RydWN0dXJlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/CDC.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/CDO.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/CDO.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'CDO';\nconst structure = [];\n\nfunction parse() {\n    const start = this.tokenStart;\n\n    this.eat(types.CDO); // <!--\n\n    return {\n        type: 'CDO',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nfunction generate() {\n    this.token(types.CDO, '<!--');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0NETy5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0NETy5janM/ZWFjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdDRE8nO1xuY29uc3Qgc3RydWN0dXJlID0gW107XG5cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuXG4gICAgdGhpcy5lYXQodHlwZXMuQ0RPKTsgLy8gPCEtLVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0NETycsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKCkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuQ0RPLCAnPCEtLScpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/CDO.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/ClassSelector.cjs":
/*!*****************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/ClassSelector.cjs ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// '.' ident\nconst name = 'ClassSelector';\nconst structure = {\n    name: String\n};\n\nfunction parse() {\n    this.eatDelim(FULLSTOP);\n\n    return {\n        type: 'ClassSelector',\n        loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),\n        name: this.consume(types.Ident)\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Delim, '.');\n    this.token(types.Ident, node.name);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0NsYXNzU2VsZWN0b3IuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9DbGFzc1NlbGVjdG9yLmNqcz8wNWJmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBGVUxMU1RPUCA9IDB4MDAyRTsgLy8gVSswMDJFIEZVTEwgU1RPUCAoLilcblxuLy8gJy4nIGlkZW50XG5jb25zdCBuYW1lID0gJ0NsYXNzU2VsZWN0b3InO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZ1xufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgdGhpcy5lYXREZWxpbShGVUxMU1RPUCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnQ2xhc3NTZWxlY3RvcicsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbih0aGlzLnRva2VuU3RhcnQgLSAxLCB0aGlzLnRva2VuRW5kKSxcbiAgICAgICAgbmFtZTogdGhpcy5jb25zdW1lKHR5cGVzLklkZW50KVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuKHR5cGVzLkRlbGltLCAnLicpO1xuICAgIHRoaXMudG9rZW4odHlwZXMuSWRlbnQsIG5vZGUubmFtZSk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/ClassSelector.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Combinator.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Combinator.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nconst name = 'Combinator';\nconst structure = {\n    name: String\n};\n\n// + | > | ~ | /deep/\nfunction parse() {\n    const start = this.tokenStart;\n    let name;\n\n    switch (this.tokenType) {\n        case types.WhiteSpace:\n            name = ' ';\n            break;\n\n        case types.Delim:\n            switch (this.charCodeAt(this.tokenStart)) {\n                case GREATERTHANSIGN:\n                case PLUSSIGN:\n                case TILDE:\n                    this.next();\n                    break;\n\n                case SOLIDUS:\n                    this.next();\n                    this.eatIdent('deep');\n                    this.eatDelim(SOLIDUS);\n                    break;\n\n                default:\n                    this.error('Combinator is expected');\n            }\n\n            name = this.substrToCursor(start);\n            break;\n    }\n\n    return {\n        type: 'Combinator',\n        loc: this.getLocation(start, this.tokenStart),\n        name\n    };\n}\n\nfunction generate(node) {\n    this.tokenize(node.name);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0NvbWJpbmF0b3IuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9Db21iaW5hdG9yLmNqcz82MDU0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBQTFVTU0lHTiA9IDB4MDAyQjsgICAgICAgIC8vIFUrMDAyQiBQTFVTIFNJR04gKCspXG5jb25zdCBTT0xJRFVTID0gMHgwMDJGOyAgICAgICAgIC8vIFUrMDAyRiBTT0xJRFVTICgvKVxuY29uc3QgR1JFQVRFUlRIQU5TSUdOID0gMHgwMDNFOyAvLyBVKzAwM0UgR1JFQVRFUi1USEFOIFNJR04gKD4pXG5jb25zdCBUSUxERSA9IDB4MDA3RTsgICAgICAgICAgIC8vIFUrMDA3RSBUSUxERSAofilcblxuY29uc3QgbmFtZSA9ICdDb21iaW5hdG9yJztcbmNvbnN0IHN0cnVjdHVyZSA9IHtcbiAgICBuYW1lOiBTdHJpbmdcbn07XG5cbi8vICsgfCA+IHwgfiB8IC9kZWVwL1xuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnRva2VuU3RhcnQ7XG4gICAgbGV0IG5hbWU7XG5cbiAgICBzd2l0Y2ggKHRoaXMudG9rZW5UeXBlKSB7XG4gICAgICAgIGNhc2UgdHlwZXMuV2hpdGVTcGFjZTpcbiAgICAgICAgICAgIG5hbWUgPSAnICc7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIHR5cGVzLkRlbGltOlxuICAgICAgICAgICAgc3dpdGNoICh0aGlzLmNoYXJDb2RlQXQodGhpcy50b2tlblN0YXJ0KSkge1xuICAgICAgICAgICAgICAgIGNhc2UgR1JFQVRFUlRIQU5TSUdOOlxuICAgICAgICAgICAgICAgIGNhc2UgUExVU1NJR046XG4gICAgICAgICAgICAgICAgY2FzZSBUSUxERTpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSBTT0xJRFVTOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5leHQoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lYXRJZGVudCgnZGVlcCcpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVhdERlbGltKFNPTElEVVMpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IoJ0NvbWJpbmF0b3IgaXMgZXhwZWN0ZWQnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbmFtZSA9IHRoaXMuc3Vic3RyVG9DdXJzb3Ioc3RhcnQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0NvbWJpbmF0b3InLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIG5hbWVcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy50b2tlbml6ZShub2RlLm5hbWUpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Combinator.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Comment.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Comment.cjs ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\n\nconst name = 'Comment';\nconst structure = {\n    value: String\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n    let end = this.tokenEnd;\n\n    this.eat(types.Comment);\n\n    if ((end - start + 2) >= 2 &&\n        this.charCodeAt(end - 2) === ASTERISK &&\n        this.charCodeAt(end - 1) === SOLIDUS) {\n        end -= 2;\n    }\n\n    return {\n        type: 'Comment',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substring(start + 2, end)\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Comment, '/*' + node.value + '*/');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0NvbW1lbnQuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9Db21tZW50LmNqcz8yMTJiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBBU1RFUklTSyA9IDB4MDAyQTsgICAgICAgIC8vIFUrMDAyQSBBU1RFUklTSyAoKilcbmNvbnN0IFNPTElEVVMgPSAweDAwMkY7ICAgICAgICAgLy8gVSswMDJGIFNPTElEVVMgKC8pXG5cblxuY29uc3QgbmFtZSA9ICdDb21tZW50JztcbmNvbnN0IHN0cnVjdHVyZSA9IHtcbiAgICB2YWx1ZTogU3RyaW5nXG59O1xuXG5mdW5jdGlvbiBwYXJzZSgpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBsZXQgZW5kID0gdGhpcy50b2tlbkVuZDtcblxuICAgIHRoaXMuZWF0KHR5cGVzLkNvbW1lbnQpO1xuXG4gICAgaWYgKChlbmQgLSBzdGFydCArIDIpID49IDIgJiZcbiAgICAgICAgdGhpcy5jaGFyQ29kZUF0KGVuZCAtIDIpID09PSBBU1RFUklTSyAmJlxuICAgICAgICB0aGlzLmNoYXJDb2RlQXQoZW5kIC0gMSkgPT09IFNPTElEVVMpIHtcbiAgICAgICAgZW5kIC09IDI7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0NvbW1lbnQnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIHZhbHVlOiB0aGlzLnN1YnN0cmluZyhzdGFydCArIDIsIGVuZClcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy50b2tlbih0eXBlcy5Db21tZW50LCAnLyonICsgbm9kZS52YWx1ZSArICcqLycpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Comment.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Declaration.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Declaration.cjs ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst names = __webpack_require__(/*! ../../utils/names.cjs */ \"./node_modules/css-tree/cjs/utils/names.cjs\");\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    const startValueToken = this.tokenIndex;\n    const value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== types.Semicolon &&\n        this.isDelim(EXCLAMATIONMARK) === false &&\n        this.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nconst name = 'Declaration';\nconst walkContext = 'declaration';\nconst structure = {\n    important: [Boolean, String],\n    property: String,\n    value: ['Value', 'Raw']\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n    const startToken = this.tokenIndex;\n    const property = readProperty.call(this);\n    const customProperty = names.isCustomProperty(property);\n    const parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n    const consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n    let important = false;\n    let value;\n\n    this.skipSC();\n    this.eat(types.Colon);\n\n    const valueStart = this.tokenIndex;\n\n    if (!customProperty) {\n        this.skipSC();\n    }\n\n    if (parseValue) {\n        value = this.parseWithFallback(consumeValue, consumeRaw);\n    } else {\n        value = consumeRaw.call(this, this.tokenIndex);\n    }\n\n    if (customProperty && value.type === 'Value' && value.children.isEmpty) {\n        for (let offset = valueStart - this.tokenIndex; offset <= 0; offset++) {\n            if (this.lookupType(offset) === types.WhiteSpace) {\n                value.children.appendData({\n                    type: 'WhiteSpace',\n                    loc: null,\n                    value: ' '\n                });\n                break;\n            }\n        }\n    }\n\n    if (this.isDelim(EXCLAMATIONMARK)) {\n        important = getImportant.call(this);\n        this.skipSC();\n    }\n\n    // Do not include semicolon to range per spec\n    // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n    if (this.eof === false &&\n        this.tokenType !== types.Semicolon &&\n        this.isBalanceEdge(startToken) === false) {\n        this.error();\n    }\n\n    return {\n        type: 'Declaration',\n        loc: this.getLocation(start, this.tokenStart),\n        important,\n        property,\n        value\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Ident, node.property);\n    this.token(types.Colon, ':');\n    this.node(node.value);\n\n    if (node.important) {\n        this.token(types.Delim, '!');\n        this.token(types.Ident, node.important === true ? 'important' : node.important);\n    }\n}\n\nfunction readProperty() {\n    const start = this.tokenStart;\n\n    // hacks\n    if (this.tokenType === types.Delim) {\n        switch (this.charCodeAt(this.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.next();\n                if (this.isDelim(SOLIDUS)) {\n                    this.next();\n                }\n                break;\n        }\n    }\n\n    if (this.tokenType === types.Hash) {\n        this.eat(types.Hash);\n    } else {\n        this.eat(types.Ident);\n    }\n\n    return this.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(types.Delim);\n    this.skipSC();\n\n    const important = this.consume(types.Ident);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0RlY2xhcmF0aW9uLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvRGVjbGFyYXRpb24uY2pzPzJhMDUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBuYW1lcyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL25hbWVzLmNqcycpO1xuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBFWENMQU1BVElPTk1BUksgPSAweDAwMjE7IC8vIFUrMDAyMSBFWENMQU1BVElPTiBNQVJLICghKVxuY29uc3QgTlVNQkVSU0lHTiA9IDB4MDAyMzsgICAgICAvLyBVKzAwMjMgTlVNQkVSIFNJR04gKCMpXG5jb25zdCBET0xMQVJTSUdOID0gMHgwMDI0OyAgICAgIC8vIFUrMDAyNCBET0xMQVIgU0lHTiAoJClcbmNvbnN0IEFNUEVSU0FORCA9IDB4MDAyNjsgICAgICAgLy8gVSswMDI2IEFNUEVSU0FORCAoJilcbmNvbnN0IEFTVEVSSVNLID0gMHgwMDJBOyAgICAgICAgLy8gVSswMDJBIEFTVEVSSVNLICgqKVxuY29uc3QgUExVU1NJR04gPSAweDAwMkI7ICAgICAgICAvLyBVKzAwMkIgUExVUyBTSUdOICgrKVxuY29uc3QgU09MSURVUyA9IDB4MDAyRjsgICAgICAgICAvLyBVKzAwMkYgU09MSURVUyAoLylcblxuZnVuY3Rpb24gY29uc3VtZVZhbHVlUmF3KHN0YXJ0VG9rZW4pIHtcbiAgICByZXR1cm4gdGhpcy5SYXcoc3RhcnRUb2tlbiwgdGhpcy5jb25zdW1lVW50aWxFeGNsYW1hdGlvbk1hcmtPclNlbWljb2xvbiwgdHJ1ZSk7XG59XG5cbmZ1bmN0aW9uIGNvbnN1bWVDdXN0b21Qcm9wZXJ0eVJhdyhzdGFydFRva2VuKSB7XG4gICAgcmV0dXJuIHRoaXMuUmF3KHN0YXJ0VG9rZW4sIHRoaXMuY29uc3VtZVVudGlsRXhjbGFtYXRpb25NYXJrT3JTZW1pY29sb24sIGZhbHNlKTtcbn1cblxuZnVuY3Rpb24gY29uc3VtZVZhbHVlKCkge1xuICAgIGNvbnN0IHN0YXJ0VmFsdWVUb2tlbiA9IHRoaXMudG9rZW5JbmRleDtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuVmFsdWUoKTtcblxuICAgIGlmICh2YWx1ZS50eXBlICE9PSAnUmF3JyAmJlxuICAgICAgICB0aGlzLmVvZiA9PT0gZmFsc2UgJiZcbiAgICAgICAgdGhpcy50b2tlblR5cGUgIT09IHR5cGVzLlNlbWljb2xvbiAmJlxuICAgICAgICB0aGlzLmlzRGVsaW0oRVhDTEFNQVRJT05NQVJLKSA9PT0gZmFsc2UgJiZcbiAgICAgICAgdGhpcy5pc0JhbGFuY2VFZGdlKHN0YXJ0VmFsdWVUb2tlbikgPT09IGZhbHNlKSB7XG4gICAgICAgIHRoaXMuZXJyb3IoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG59XG5cbmNvbnN0IG5hbWUgPSAnRGVjbGFyYXRpb24nO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAnZGVjbGFyYXRpb24nO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIGltcG9ydGFudDogW0Jvb2xlYW4sIFN0cmluZ10sXG4gICAgcHJvcGVydHk6IFN0cmluZyxcbiAgICB2YWx1ZTogWydWYWx1ZScsICdSYXcnXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnRva2VuU3RhcnQ7XG4gICAgY29uc3Qgc3RhcnRUb2tlbiA9IHRoaXMudG9rZW5JbmRleDtcbiAgICBjb25zdCBwcm9wZXJ0eSA9IHJlYWRQcm9wZXJ0eS5jYWxsKHRoaXMpO1xuICAgIGNvbnN0IGN1c3RvbVByb3BlcnR5ID0gbmFtZXMuaXNDdXN0b21Qcm9wZXJ0eShwcm9wZXJ0eSk7XG4gICAgY29uc3QgcGFyc2VWYWx1ZSA9IGN1c3RvbVByb3BlcnR5ID8gdGhpcy5wYXJzZUN1c3RvbVByb3BlcnR5IDogdGhpcy5wYXJzZVZhbHVlO1xuICAgIGNvbnN0IGNvbnN1bWVSYXcgPSBjdXN0b21Qcm9wZXJ0eSA/IGNvbnN1bWVDdXN0b21Qcm9wZXJ0eVJhdyA6IGNvbnN1bWVWYWx1ZVJhdztcbiAgICBsZXQgaW1wb3J0YW50ID0gZmFsc2U7XG4gICAgbGV0IHZhbHVlO1xuXG4gICAgdGhpcy5za2lwU0MoKTtcbiAgICB0aGlzLmVhdCh0eXBlcy5Db2xvbik7XG5cbiAgICBjb25zdCB2YWx1ZVN0YXJ0ID0gdGhpcy50b2tlbkluZGV4O1xuXG4gICAgaWYgKCFjdXN0b21Qcm9wZXJ0eSkge1xuICAgICAgICB0aGlzLnNraXBTQygpO1xuICAgIH1cblxuICAgIGlmIChwYXJzZVZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gdGhpcy5wYXJzZVdpdGhGYWxsYmFjayhjb25zdW1lVmFsdWUsIGNvbnN1bWVSYXcpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHZhbHVlID0gY29uc3VtZVJhdy5jYWxsKHRoaXMsIHRoaXMudG9rZW5JbmRleCk7XG4gICAgfVxuXG4gICAgaWYgKGN1c3RvbVByb3BlcnR5ICYmIHZhbHVlLnR5cGUgPT09ICdWYWx1ZScgJiYgdmFsdWUuY2hpbGRyZW4uaXNFbXB0eSkge1xuICAgICAgICBmb3IgKGxldCBvZmZzZXQgPSB2YWx1ZVN0YXJ0IC0gdGhpcy50b2tlbkluZGV4OyBvZmZzZXQgPD0gMDsgb2Zmc2V0KyspIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmxvb2t1cFR5cGUob2Zmc2V0KSA9PT0gdHlwZXMuV2hpdGVTcGFjZSkge1xuICAgICAgICAgICAgICAgIHZhbHVlLmNoaWxkcmVuLmFwcGVuZERhdGEoe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnV2hpdGVTcGFjZScsXG4gICAgICAgICAgICAgICAgICAgIGxvYzogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICcgJ1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNEZWxpbShFWENMQU1BVElPTk1BUkspKSB7XG4gICAgICAgIGltcG9ydGFudCA9IGdldEltcG9ydGFudC5jYWxsKHRoaXMpO1xuICAgICAgICB0aGlzLnNraXBTQygpO1xuICAgIH1cblxuICAgIC8vIERvIG5vdCBpbmNsdWRlIHNlbWljb2xvbiB0byByYW5nZSBwZXIgc3BlY1xuICAgIC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3Mtc3ludGF4LyNkZWNsYXJhdGlvbi1kaWFncmFtXG5cbiAgICBpZiAodGhpcy5lb2YgPT09IGZhbHNlICYmXG4gICAgICAgIHRoaXMudG9rZW5UeXBlICE9PSB0eXBlcy5TZW1pY29sb24gJiZcbiAgICAgICAgdGhpcy5pc0JhbGFuY2VFZGdlKHN0YXJ0VG9rZW4pID09PSBmYWxzZSkge1xuICAgICAgICB0aGlzLmVycm9yKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0RlY2xhcmF0aW9uJyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uKHN0YXJ0LCB0aGlzLnRva2VuU3RhcnQpLFxuICAgICAgICBpbXBvcnRhbnQsXG4gICAgICAgIHByb3BlcnR5LFxuICAgICAgICB2YWx1ZVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuKHR5cGVzLklkZW50LCBub2RlLnByb3BlcnR5KTtcbiAgICB0aGlzLnRva2VuKHR5cGVzLkNvbG9uLCAnOicpO1xuICAgIHRoaXMubm9kZShub2RlLnZhbHVlKTtcblxuICAgIGlmIChub2RlLmltcG9ydGFudCkge1xuICAgICAgICB0aGlzLnRva2VuKHR5cGVzLkRlbGltLCAnIScpO1xuICAgICAgICB0aGlzLnRva2VuKHR5cGVzLklkZW50LCBub2RlLmltcG9ydGFudCA9PT0gdHJ1ZSA/ICdpbXBvcnRhbnQnIDogbm9kZS5pbXBvcnRhbnQpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gcmVhZFByb3BlcnR5KCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuXG4gICAgLy8gaGFja3NcbiAgICBpZiAodGhpcy50b2tlblR5cGUgPT09IHR5cGVzLkRlbGltKSB7XG4gICAgICAgIHN3aXRjaCAodGhpcy5jaGFyQ29kZUF0KHRoaXMudG9rZW5TdGFydCkpIHtcbiAgICAgICAgICAgIGNhc2UgQVNURVJJU0s6XG4gICAgICAgICAgICBjYXNlIERPTExBUlNJR046XG4gICAgICAgICAgICBjYXNlIFBMVVNTSUdOOlxuICAgICAgICAgICAgY2FzZSBOVU1CRVJTSUdOOlxuICAgICAgICAgICAgY2FzZSBBTVBFUlNBTkQ6XG4gICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIC8vIFRPRE86IG5vdCBzdXJlIHdlIHNob3VsZCBzdXBwb3J0IHRoaXMgaGFja1xuICAgICAgICAgICAgY2FzZSBTT0xJRFVTOlxuICAgICAgICAgICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzRGVsaW0oU09MSURVUykpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudG9rZW5UeXBlID09PSB0eXBlcy5IYXNoKSB7XG4gICAgICAgIHRoaXMuZWF0KHR5cGVzLkhhc2gpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZWF0KHR5cGVzLklkZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5zdWJzdHJUb0N1cnNvcihzdGFydCk7XG59XG5cbi8vICEgd3MqIGltcG9ydGFudFxuZnVuY3Rpb24gZ2V0SW1wb3J0YW50KCkge1xuICAgIHRoaXMuZWF0KHR5cGVzLkRlbGltKTtcbiAgICB0aGlzLnNraXBTQygpO1xuXG4gICAgY29uc3QgaW1wb3J0YW50ID0gdGhpcy5jb25zdW1lKHR5cGVzLklkZW50KTtcblxuICAgIC8vIHN0b3JlIG9yaWdpbmFsIHZhbHVlIGluIGNhc2UgaXQgZGlmZmVyIGZyb20gYGltcG9ydGFudGBcbiAgICAvLyBmb3IgYmV0dGVyIG9yaWdpbmFsIHNvdXJjZSByZXN0b3JpbmcgYW5kIGhhY2tzIGxpa2UgYCFpZWAgc3VwcG9ydFxuICAgIHJldHVybiBpbXBvcnRhbnQgPT09ICdpbXBvcnRhbnQnID8gdHJ1ZSA6IGltcG9ydGFudDtcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZSA9IGdlbmVyYXRlO1xuZXhwb3J0cy5uYW1lID0gbmFtZTtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc3RydWN0dXJlID0gc3RydWN0dXJlO1xuZXhwb3J0cy53YWxrQ29udGV4dCA9IHdhbGtDb250ZXh0O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Declaration.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/DeclarationList.cjs":
/*!*******************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/DeclarationList.cjs ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\n\nconst name = 'DeclarationList';\nconst structure = {\n    children: [[\n        'Declaration'\n    ]]\n};\n\nfunction parse() {\n    const children = this.createList();\n\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case types.WhiteSpace:\n            case types.Comment:\n            case types.Semicolon:\n                this.next();\n                break;\n\n            default:\n                children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n        }\n    }\n\n    return {\n        type: 'DeclarationList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(types.Semicolon, ';');\n        }\n    });\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0RlY2xhcmF0aW9uTGlzdC5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0RlY2xhcmF0aW9uTGlzdC5janM/MzNkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuZnVuY3Rpb24gY29uc3VtZVJhdyhzdGFydFRva2VuKSB7XG4gICAgcmV0dXJuIHRoaXMuUmF3KHN0YXJ0VG9rZW4sIHRoaXMuY29uc3VtZVVudGlsU2VtaWNvbG9uSW5jbHVkZWQsIHRydWUpO1xufVxuXG5jb25zdCBuYW1lID0gJ0RlY2xhcmF0aW9uTGlzdCc7XG5jb25zdCBzdHJ1Y3R1cmUgPSB7XG4gICAgY2hpbGRyZW46IFtbXG4gICAgICAgICdEZWNsYXJhdGlvbidcbiAgICBdXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLmNyZWF0ZUxpc3QoKTtcblxuICAgIHdoaWxlICghdGhpcy5lb2YpIHtcbiAgICAgICAgc3dpdGNoICh0aGlzLnRva2VuVHlwZSkge1xuICAgICAgICAgICAgY2FzZSB0eXBlcy5XaGl0ZVNwYWNlOlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5Db21tZW50OlxuICAgICAgICAgICAgY2FzZSB0eXBlcy5TZW1pY29sb246XG4gICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzLnBhcnNlV2l0aEZhbGxiYWNrKHRoaXMuRGVjbGFyYXRpb24sIGNvbnN1bWVSYXcpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdEZWNsYXJhdGlvbkxpc3QnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb25Gcm9tTGlzdChjaGlsZHJlbiksXG4gICAgICAgIGNoaWxkcmVuXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMuY2hpbGRyZW4obm9kZSwgcHJldiA9PiB7XG4gICAgICAgIGlmIChwcmV2LnR5cGUgPT09ICdEZWNsYXJhdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMudG9rZW4odHlwZXMuU2VtaWNvbG9uLCAnOycpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/DeclarationList.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Dimension.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Dimension.cjs ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Dimension';\nconst structure = {\n    value: String,\n    unit: String\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n    const value = this.consumeNumber(types.Dimension);\n\n    return {\n        type: 'Dimension',\n        loc: this.getLocation(start, this.tokenStart),\n        value,\n        unit: this.substring(start + value.length, this.tokenStart)\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Dimension, node.value + node.unit);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0RpbWVuc2lvbi5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0RpbWVuc2lvbi5janM/NWU5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdEaW1lbnNpb24nO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIHZhbHVlOiBTdHJpbmcsXG4gICAgdW5pdDogU3RyaW5nXG59O1xuXG5mdW5jdGlvbiBwYXJzZSgpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuY29uc3VtZU51bWJlcih0eXBlcy5EaW1lbnNpb24pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0RpbWVuc2lvbicsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KSxcbiAgICAgICAgdmFsdWUsXG4gICAgICAgIHVuaXQ6IHRoaXMuc3Vic3RyaW5nKHN0YXJ0ICsgdmFsdWUubGVuZ3RoLCB0aGlzLnRva2VuU3RhcnQpXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuRGltZW5zaW9uLCBub2RlLnZhbHVlICsgbm9kZS51bml0KTtcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZSA9IGdlbmVyYXRlO1xuZXhwb3J0cy5uYW1lID0gbmFtZTtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc3RydWN0dXJlID0gc3RydWN0dXJlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Dimension.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Function.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Function.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Function';\nconst walkContext = 'function';\nconst structure = {\n    name: String,\n    children: [[]]\n};\n\n// <function-token> <sequence> )\nfunction parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    const name = this.consumeFunctionName();\n    const nameLowerCase = name.toLowerCase();\n    let children;\n\n    children = recognizer.hasOwnProperty(nameLowerCase)\n        ? recognizer[nameLowerCase].call(this, recognizer)\n        : readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(types.RightParenthesis);\n    }\n\n    return {\n        type: 'Function',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Function, node.name + '(');\n    this.children(node);\n    this.token(types.RightParenthesis, ')');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0Z1bmN0aW9uLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvRnVuY3Rpb24uY2pzPzIyOTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbnJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmNvbnN0IG5hbWUgPSAnRnVuY3Rpb24nO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAnZnVuY3Rpb24nO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZyxcbiAgICBjaGlsZHJlbjogW1tdXVxufTtcblxuLy8gPGZ1bmN0aW9uLXRva2VuPiA8c2VxdWVuY2U+IClcbmZ1bmN0aW9uIHBhcnNlKHJlYWRTZXF1ZW5jZSwgcmVjb2duaXplcikge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuICAgIGNvbnN0IG5hbWUgPSB0aGlzLmNvbnN1bWVGdW5jdGlvbk5hbWUoKTtcbiAgICBjb25zdCBuYW1lTG93ZXJDYXNlID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgIGxldCBjaGlsZHJlbjtcblxuICAgIGNoaWxkcmVuID0gcmVjb2duaXplci5oYXNPd25Qcm9wZXJ0eShuYW1lTG93ZXJDYXNlKVxuICAgICAgICA/IHJlY29nbml6ZXJbbmFtZUxvd2VyQ2FzZV0uY2FsbCh0aGlzLCByZWNvZ25pemVyKVxuICAgICAgICA6IHJlYWRTZXF1ZW5jZS5jYWxsKHRoaXMsIHJlY29nbml6ZXIpO1xuXG4gICAgaWYgKCF0aGlzLmVvZikge1xuICAgICAgICB0aGlzLmVhdCh0eXBlcy5SaWdodFBhcmVudGhlc2lzKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnRnVuY3Rpb24nLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIG5hbWUsXG4gICAgICAgIGNoaWxkcmVuXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuRnVuY3Rpb24sIG5vZGUubmFtZSArICcoJyk7XG4gICAgdGhpcy5jaGlsZHJlbihub2RlKTtcbiAgICB0aGlzLnRva2VuKHR5cGVzLlJpZ2h0UGFyZW50aGVzaXMsICcpJyk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbmV4cG9ydHMud2Fsa0NvbnRleHQgPSB3YWxrQ29udGV4dDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Function.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Hash.cjs":
/*!********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Hash.cjs ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\n// '#' ident\nconst xxx = 'XXX';\nconst name = 'Hash';\nconst structure = {\n    value: String\n};\nfunction parse() {\n    const start = this.tokenStart;\n\n    this.eat(types.Hash);\n\n    return {\n        type: 'Hash',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start + 1)\n    };\n}\nfunction generate(node) {\n    this.token(types.Hash, '#' + node.value);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.xxx = xxx;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0hhc2guY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9IYXNoLmNqcz81OTA2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG4vLyAnIycgaWRlbnRcbmNvbnN0IHh4eCA9ICdYWFgnO1xuY29uc3QgbmFtZSA9ICdIYXNoJztcbmNvbnN0IHN0cnVjdHVyZSA9IHtcbiAgICB2YWx1ZTogU3RyaW5nXG59O1xuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnRva2VuU3RhcnQ7XG5cbiAgICB0aGlzLmVhdCh0eXBlcy5IYXNoKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdIYXNoJyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uKHN0YXJ0LCB0aGlzLnRva2VuU3RhcnQpLFxuICAgICAgICB2YWx1ZTogdGhpcy5zdWJzdHJUb0N1cnNvcihzdGFydCArIDEpXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuKHR5cGVzLkhhc2gsICcjJyArIG5vZGUudmFsdWUpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG5leHBvcnRzLnh4eCA9IHh4eDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Hash.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/IdSelector.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/IdSelector.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'IdSelector';\nconst structure = {\n    name: String\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n\n    // TODO: check value is an ident\n    this.eat(types.Hash);\n\n    return {\n        type: 'IdSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start + 1)\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Hash, '#' + node.name);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0lkU2VsZWN0b3IuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9JZFNlbGVjdG9yLmNqcz81MzBlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBuYW1lID0gJ0lkU2VsZWN0b3InO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZ1xufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnRva2VuU3RhcnQ7XG5cbiAgICAvLyBUT0RPOiBjaGVjayB2YWx1ZSBpcyBhbiBpZGVudFxuICAgIHRoaXMuZWF0KHR5cGVzLkhhc2gpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0lkU2VsZWN0b3InLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIG5hbWU6IHRoaXMuc3Vic3RyVG9DdXJzb3Ioc3RhcnQgKyAxKVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuKHR5cGVzLkhhc2gsICcjJyArIG5vZGUubmFtZSk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/IdSelector.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Identifier.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Identifier.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Identifier';\nconst structure = {\n    name: String\n};\n\nfunction parse() {\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        name: this.consume(types.Ident)\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Ident, node.name);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL0lkZW50aWZpZXIuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9JZGVudGlmaWVyLmNqcz82OTczIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBuYW1lID0gJ0lkZW50aWZpZXInO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZ1xufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ0lkZW50aWZpZXInLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24odGhpcy50b2tlblN0YXJ0LCB0aGlzLnRva2VuRW5kKSxcbiAgICAgICAgbmFtZTogdGhpcy5jb25zdW1lKHR5cGVzLklkZW50KVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuKHR5cGVzLklkZW50LCBub2RlLm5hbWUpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Identifier.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/MediaFeature.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/MediaFeature.cjs ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'MediaFeature';\nconst structure = {\n    name: String,\n    value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n    let name;\n    let value = null;\n\n    this.eat(types.LeftParenthesis);\n    this.skipSC();\n\n    name = this.consume(types.Ident);\n    this.skipSC();\n\n    if (this.tokenType !== types.RightParenthesis) {\n        this.eat(types.Colon);\n        this.skipSC();\n\n        switch (this.tokenType) {\n            case types.Number:\n                if (this.lookupNonWSType(1) === types.Delim) {\n                    value = this.Ratio();\n                } else {\n                    value = this.Number();\n                }\n\n                break;\n\n            case types.Dimension:\n                value = this.Dimension();\n                break;\n\n            case types.Ident:\n                value = this.Identifier();\n                break;\n\n            default:\n                this.error('Number, dimension, ratio or identifier is expected');\n        }\n\n        this.skipSC();\n    }\n\n    this.eat(types.RightParenthesis);\n\n    return {\n        type: 'MediaFeature',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        value\n    };\n}\n\nfunction generate(node) {\n    this.token(types.LeftParenthesis, '(');\n    this.token(types.Ident, node.name);\n\n    if (node.value !== null) {\n        this.token(types.Colon, ':');\n        this.node(node.value);\n    }\n\n    this.token(types.RightParenthesis, ')');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL01lZGlhRmVhdHVyZS5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL01lZGlhRmVhdHVyZS5janM/MDdlOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdNZWRpYUZlYXR1cmUnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZyxcbiAgICB2YWx1ZTogWydJZGVudGlmaWVyJywgJ051bWJlcicsICdEaW1lbnNpb24nLCAnUmF0aW8nLCBudWxsXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnRva2VuU3RhcnQ7XG4gICAgbGV0IG5hbWU7XG4gICAgbGV0IHZhbHVlID0gbnVsbDtcblxuICAgIHRoaXMuZWF0KHR5cGVzLkxlZnRQYXJlbnRoZXNpcyk7XG4gICAgdGhpcy5za2lwU0MoKTtcblxuICAgIG5hbWUgPSB0aGlzLmNvbnN1bWUodHlwZXMuSWRlbnQpO1xuICAgIHRoaXMuc2tpcFNDKCk7XG5cbiAgICBpZiAodGhpcy50b2tlblR5cGUgIT09IHR5cGVzLlJpZ2h0UGFyZW50aGVzaXMpIHtcbiAgICAgICAgdGhpcy5lYXQodHlwZXMuQ29sb24pO1xuICAgICAgICB0aGlzLnNraXBTQygpO1xuXG4gICAgICAgIHN3aXRjaCAodGhpcy50b2tlblR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgdHlwZXMuTnVtYmVyOlxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmxvb2t1cE5vbldTVHlwZSgxKSA9PT0gdHlwZXMuRGVsaW0pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSB0aGlzLlJhdGlvKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSB0aGlzLk51bWJlcigpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIHR5cGVzLkRpbWVuc2lvbjpcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHRoaXMuRGltZW5zaW9uKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgdHlwZXMuSWRlbnQ6XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB0aGlzLklkZW50aWZpZXIoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aGlzLmVycm9yKCdOdW1iZXIsIGRpbWVuc2lvbiwgcmF0aW8gb3IgaWRlbnRpZmllciBpcyBleHBlY3RlZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5za2lwU0MoKTtcbiAgICB9XG5cbiAgICB0aGlzLmVhdCh0eXBlcy5SaWdodFBhcmVudGhlc2lzKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdNZWRpYUZlYXR1cmUnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIG5hbWUsXG4gICAgICAgIHZhbHVlXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuTGVmdFBhcmVudGhlc2lzLCAnKCcpO1xuICAgIHRoaXMudG9rZW4odHlwZXMuSWRlbnQsIG5vZGUubmFtZSk7XG5cbiAgICBpZiAobm9kZS52YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgICB0aGlzLnRva2VuKHR5cGVzLkNvbG9uLCAnOicpO1xuICAgICAgICB0aGlzLm5vZGUobm9kZS52YWx1ZSk7XG4gICAgfVxuXG4gICAgdGhpcy50b2tlbih0eXBlcy5SaWdodFBhcmVudGhlc2lzLCAnKScpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/MediaFeature.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/MediaQuery.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/MediaQuery.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'MediaQuery';\nconst structure = {\n    children: [[\n        'Identifier',\n        'MediaFeature',\n        'WhiteSpace'\n    ]]\n};\n\nfunction parse() {\n    const children = this.createList();\n    let child = null;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case types.Comment:\n            case types.WhiteSpace:\n                this.next();\n                continue;\n\n            case types.Ident:\n                child = this.Identifier();\n                break;\n\n            case types.LeftParenthesis:\n                child = this.MediaFeature();\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    if (child === null) {\n        this.error('Identifier or parenthesis is expected');\n    }\n\n    return {\n        type: 'MediaQuery',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.children(node);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL01lZGlhUXVlcnkuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9NZWRpYVF1ZXJ5LmNqcz80MGIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBuYW1lID0gJ01lZGlhUXVlcnknO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIGNoaWxkcmVuOiBbW1xuICAgICAgICAnSWRlbnRpZmllcicsXG4gICAgICAgICdNZWRpYUZlYXR1cmUnLFxuICAgICAgICAnV2hpdGVTcGFjZSdcbiAgICBdXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLmNyZWF0ZUxpc3QoKTtcbiAgICBsZXQgY2hpbGQgPSBudWxsO1xuXG4gICAgdGhpcy5za2lwU0MoKTtcblxuICAgIHNjYW46XG4gICAgd2hpbGUgKCF0aGlzLmVvZikge1xuICAgICAgICBzd2l0Y2ggKHRoaXMudG9rZW5UeXBlKSB7XG4gICAgICAgICAgICBjYXNlIHR5cGVzLkNvbW1lbnQ6XG4gICAgICAgICAgICBjYXNlIHR5cGVzLldoaXRlU3BhY2U6XG4gICAgICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG5cbiAgICAgICAgICAgIGNhc2UgdHlwZXMuSWRlbnQ6XG4gICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLklkZW50aWZpZXIoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSB0eXBlcy5MZWZ0UGFyZW50aGVzaXM6XG4gICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLk1lZGlhRmVhdHVyZSgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGJyZWFrIHNjYW47XG4gICAgICAgIH1cblxuICAgICAgICBjaGlsZHJlbi5wdXNoKGNoaWxkKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgPT09IG51bGwpIHtcbiAgICAgICAgdGhpcy5lcnJvcignSWRlbnRpZmllciBvciBwYXJlbnRoZXNpcyBpcyBleHBlY3RlZCcpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdNZWRpYVF1ZXJ5JyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uRnJvbUxpc3QoY2hpbGRyZW4pLFxuICAgICAgICBjaGlsZHJlblxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLmNoaWxkcmVuKG5vZGUpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/MediaQuery.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/MediaQueryList.cjs":
/*!******************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/MediaQueryList.cjs ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'MediaQueryList';\nconst structure = {\n    children: [[\n        'MediaQuery'\n    ]]\n};\n\nfunction parse() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    while (!this.eof) {\n        children.push(this.MediaQuery());\n\n        if (this.tokenType !== types.Comma) {\n            break;\n        }\n\n        this.next();\n    }\n\n    return {\n        type: 'MediaQueryList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.children(node, () => this.token(types.Comma, ','));\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL01lZGlhUXVlcnlMaXN0LmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvTWVkaWFRdWVyeUxpc3QuY2pzPzQ2NjciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbnJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmNvbnN0IG5hbWUgPSAnTWVkaWFRdWVyeUxpc3QnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIGNoaWxkcmVuOiBbW1xuICAgICAgICAnTWVkaWFRdWVyeSdcbiAgICBdXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLmNyZWF0ZUxpc3QoKTtcblxuICAgIHRoaXMuc2tpcFNDKCk7XG5cbiAgICB3aGlsZSAoIXRoaXMuZW9mKSB7XG4gICAgICAgIGNoaWxkcmVuLnB1c2godGhpcy5NZWRpYVF1ZXJ5KCkpO1xuXG4gICAgICAgIGlmICh0aGlzLnRva2VuVHlwZSAhPT0gdHlwZXMuQ29tbWEpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ01lZGlhUXVlcnlMaXN0JyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uRnJvbUxpc3QoY2hpbGRyZW4pLFxuICAgICAgICBjaGlsZHJlblxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLmNoaWxkcmVuKG5vZGUsICgpID0+IHRoaXMudG9rZW4odHlwZXMuQ29tbWEsICcsJykpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/MediaQueryList.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Nth.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Nth.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Nth';\nconst structure = {\n    nth: ['AnPlusB', 'Identifier'],\n    selector: ['SelectorList', null]\n};\n\nfunction parse() {\n    this.skipSC();\n\n    const start = this.tokenStart;\n    let end = start;\n    let selector = null;\n    let nth;\n\n    if (this.lookupValue(0, 'odd') || this.lookupValue(0, 'even')) {\n        nth = this.Identifier();\n    } else {\n        nth = this.AnPlusB();\n    }\n\n    end = this.tokenStart;\n    this.skipSC();\n\n    if (this.lookupValue(0, 'of')) {\n        this.next();\n\n        selector = this.SelectorList();\n        end = this.tokenStart;\n    }\n\n    return {\n        type: 'Nth',\n        loc: this.getLocation(start, end),\n        nth,\n        selector\n    };\n}\n\nfunction generate(node) {\n    this.node(node.nth);\n    if (node.selector !== null) {\n        this.token(types.Ident, 'of');\n        this.node(node.selector);\n    }\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL050aC5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL050aC5janM/YzBlNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdOdGgnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG50aDogWydBblBsdXNCJywgJ0lkZW50aWZpZXInXSxcbiAgICBzZWxlY3RvcjogWydTZWxlY3Rvckxpc3QnLCBudWxsXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgdGhpcy5za2lwU0MoKTtcblxuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuICAgIGxldCBlbmQgPSBzdGFydDtcbiAgICBsZXQgc2VsZWN0b3IgPSBudWxsO1xuICAgIGxldCBudGg7XG5cbiAgICBpZiAodGhpcy5sb29rdXBWYWx1ZSgwLCAnb2RkJykgfHwgdGhpcy5sb29rdXBWYWx1ZSgwLCAnZXZlbicpKSB7XG4gICAgICAgIG50aCA9IHRoaXMuSWRlbnRpZmllcigpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG50aCA9IHRoaXMuQW5QbHVzQigpO1xuICAgIH1cblxuICAgIGVuZCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICB0aGlzLnNraXBTQygpO1xuXG4gICAgaWYgKHRoaXMubG9va3VwVmFsdWUoMCwgJ29mJykpIHtcbiAgICAgICAgdGhpcy5uZXh0KCk7XG5cbiAgICAgICAgc2VsZWN0b3IgPSB0aGlzLlNlbGVjdG9yTGlzdCgpO1xuICAgICAgICBlbmQgPSB0aGlzLnRva2VuU3RhcnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ050aCcsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgZW5kKSxcbiAgICAgICAgbnRoLFxuICAgICAgICBzZWxlY3RvclxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLm5vZGUobm9kZS5udGgpO1xuICAgIGlmIChub2RlLnNlbGVjdG9yICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMudG9rZW4odHlwZXMuSWRlbnQsICdvZicpO1xuICAgICAgICB0aGlzLm5vZGUobm9kZS5zZWxlY3Rvcik7XG4gICAgfVxufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Nth.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Number.cjs":
/*!**********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Number.cjs ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Number';\nconst structure = {\n    value: String\n};\n\nfunction parse() {\n    return {\n        type: 'Number',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consume(types.Number)\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Number, node.value);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL051bWJlci5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL051bWJlci5janM/OWY0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdOdW1iZXInO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIHZhbHVlOiBTdHJpbmdcbn07XG5cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdOdW1iZXInLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24odGhpcy50b2tlblN0YXJ0LCB0aGlzLnRva2VuRW5kKSxcbiAgICAgICAgdmFsdWU6IHRoaXMuY29uc3VtZSh0eXBlcy5OdW1iZXIpXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuTnVtYmVyLCBub2RlLnZhbHVlKTtcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZSA9IGdlbmVyYXRlO1xuZXhwb3J0cy5uYW1lID0gbmFtZTtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc3RydWN0dXJlID0gc3RydWN0dXJlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Number.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Operator.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Operator.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// '/' | '*' | ',' | ':' | '+' | '-'\nconst name = 'Operator';\nconst structure = {\n    value: String\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n\n    this.next();\n\n    return {\n        type: 'Operator',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nfunction generate(node) {\n    this.tokenize(node.value);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL09wZXJhdG9yLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvT3BlcmF0b3IuY2pzPzJlMTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyAnLycgfCAnKicgfCAnLCcgfCAnOicgfCAnKycgfCAnLSdcbmNvbnN0IG5hbWUgPSAnT3BlcmF0b3InO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIHZhbHVlOiBTdHJpbmdcbn07XG5cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuXG4gICAgdGhpcy5uZXh0KCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnT3BlcmF0b3InLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIHZhbHVlOiB0aGlzLnN1YnN0clRvQ3Vyc29yKHN0YXJ0KVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuaXplKG5vZGUudmFsdWUpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Operator.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Parentheses.cjs":
/*!***************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Parentheses.cjs ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Parentheses';\nconst structure = {\n    children: [[]]\n};\n\nfunction parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(types.LeftParenthesis);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(types.RightParenthesis);\n    }\n\n    return {\n        type: 'Parentheses',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.token(types.LeftParenthesis, '(');\n    this.children(node);\n    this.token(types.RightParenthesis, ')');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1BhcmVudGhlc2VzLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvUGFyZW50aGVzZXMuY2pzP2M1NjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbnJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmNvbnN0IG5hbWUgPSAnUGFyZW50aGVzZXMnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIGNoaWxkcmVuOiBbW11dXG59O1xuXG5mdW5jdGlvbiBwYXJzZShyZWFkU2VxdWVuY2UsIHJlY29nbml6ZXIpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBsZXQgY2hpbGRyZW4gPSBudWxsO1xuXG4gICAgdGhpcy5lYXQodHlwZXMuTGVmdFBhcmVudGhlc2lzKTtcblxuICAgIGNoaWxkcmVuID0gcmVhZFNlcXVlbmNlLmNhbGwodGhpcywgcmVjb2duaXplcik7XG5cbiAgICBpZiAoIXRoaXMuZW9mKSB7XG4gICAgICAgIHRoaXMuZWF0KHR5cGVzLlJpZ2h0UGFyZW50aGVzaXMpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdQYXJlbnRoZXNlcycsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KSxcbiAgICAgICAgY2hpbGRyZW5cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy50b2tlbih0eXBlcy5MZWZ0UGFyZW50aGVzaXMsICcoJyk7XG4gICAgdGhpcy5jaGlsZHJlbihub2RlKTtcbiAgICB0aGlzLnRva2VuKHR5cGVzLlJpZ2h0UGFyZW50aGVzaXMsICcpJyk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Parentheses.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Percentage.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Percentage.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Percentage';\nconst structure = {\n    value: String\n};\n\nfunction parse() {\n    return {\n        type: 'Percentage',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consumeNumber(types.Percentage)\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Percentage, node.value + '%');\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1BlcmNlbnRhZ2UuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9QZXJjZW50YWdlLmNqcz83YWQyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBuYW1lID0gJ1BlcmNlbnRhZ2UnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIHZhbHVlOiBTdHJpbmdcbn07XG5cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdQZXJjZW50YWdlJyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uKHRoaXMudG9rZW5TdGFydCwgdGhpcy50b2tlbkVuZCksXG4gICAgICAgIHZhbHVlOiB0aGlzLmNvbnN1bWVOdW1iZXIodHlwZXMuUGVyY2VudGFnZSlcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy50b2tlbih0eXBlcy5QZXJjZW50YWdlLCBub2RlLnZhbHVlICsgJyUnKTtcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZSA9IGdlbmVyYXRlO1xuZXhwb3J0cy5uYW1lID0gbmFtZTtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc3RydWN0dXJlID0gc3RydWN0dXJlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Percentage.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/PseudoClassSelector.cjs":
/*!***********************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/PseudoClassSelector.cjs ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'PseudoClassSelector';\nconst walkContext = 'function';\nconst structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// : [ <ident> | <function-token> <any-value>? ) ]\nfunction parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(types.Colon);\n\n    if (this.tokenType === types.Function) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(types.RightParenthesis);\n    } else {\n        name = this.consume(types.Ident);\n    }\n\n    return {\n        type: 'PseudoClassSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Colon, ':');\n\n    if (node.children === null) {\n        this.token(types.Ident, node.name);\n    } else {\n        this.token(types.Function, node.name + '(');\n        this.children(node);\n        this.token(types.RightParenthesis, ')');\n    }\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1BzZXVkb0NsYXNzU2VsZWN0b3IuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9Qc2V1ZG9DbGFzc1NlbGVjdG9yLmNqcz84OGI4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBuYW1lID0gJ1BzZXVkb0NsYXNzU2VsZWN0b3InO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAnZnVuY3Rpb24nO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZyxcbiAgICBjaGlsZHJlbjogW1snUmF3J10sIG51bGxdXG59O1xuXG4vLyA6IFsgPGlkZW50PiB8IDxmdW5jdGlvbi10b2tlbj4gPGFueS12YWx1ZT4/ICkgXVxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnRva2VuU3RhcnQ7XG4gICAgbGV0IGNoaWxkcmVuID0gbnVsbDtcbiAgICBsZXQgbmFtZTtcbiAgICBsZXQgbmFtZUxvd2VyQ2FzZTtcblxuICAgIHRoaXMuZWF0KHR5cGVzLkNvbG9uKTtcblxuICAgIGlmICh0aGlzLnRva2VuVHlwZSA9PT0gdHlwZXMuRnVuY3Rpb24pIHtcbiAgICAgICAgbmFtZSA9IHRoaXMuY29uc3VtZUZ1bmN0aW9uTmFtZSgpO1xuICAgICAgICBuYW1lTG93ZXJDYXNlID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMucHNldWRvLCBuYW1lTG93ZXJDYXNlKSkge1xuICAgICAgICAgICAgdGhpcy5za2lwU0MoKTtcbiAgICAgICAgICAgIGNoaWxkcmVuID0gdGhpcy5wc2V1ZG9bbmFtZUxvd2VyQ2FzZV0uY2FsbCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuc2tpcFNDKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjaGlsZHJlbiA9IHRoaXMuY3JlYXRlTGlzdCgpO1xuICAgICAgICAgICAgY2hpbGRyZW4ucHVzaChcbiAgICAgICAgICAgICAgICB0aGlzLlJhdyh0aGlzLnRva2VuSW5kZXgsIG51bGwsIGZhbHNlKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZWF0KHR5cGVzLlJpZ2h0UGFyZW50aGVzaXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG5hbWUgPSB0aGlzLmNvbnN1bWUodHlwZXMuSWRlbnQpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdQc2V1ZG9DbGFzc1NlbGVjdG9yJyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uKHN0YXJ0LCB0aGlzLnRva2VuU3RhcnQpLFxuICAgICAgICBuYW1lLFxuICAgICAgICBjaGlsZHJlblxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuKHR5cGVzLkNvbG9uLCAnOicpO1xuXG4gICAgaWYgKG5vZGUuY2hpbGRyZW4gPT09IG51bGwpIHtcbiAgICAgICAgdGhpcy50b2tlbih0eXBlcy5JZGVudCwgbm9kZS5uYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRva2VuKHR5cGVzLkZ1bmN0aW9uLCBub2RlLm5hbWUgKyAnKCcpO1xuICAgICAgICB0aGlzLmNoaWxkcmVuKG5vZGUpO1xuICAgICAgICB0aGlzLnRva2VuKHR5cGVzLlJpZ2h0UGFyZW50aGVzaXMsICcpJyk7XG4gICAgfVxufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG5leHBvcnRzLndhbGtDb250ZXh0ID0gd2Fsa0NvbnRleHQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/PseudoClassSelector.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/PseudoElementSelector.cjs":
/*!*************************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/PseudoElementSelector.cjs ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'PseudoElementSelector';\nconst walkContext = 'function';\nconst structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// :: [ <ident> | <function-token> <any-value>? ) ]\nfunction parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(types.Colon);\n    this.eat(types.Colon);\n\n    if (this.tokenType === types.Function) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(types.RightParenthesis);\n    } else {\n        name = this.consume(types.Ident);\n    }\n\n    return {\n        type: 'PseudoElementSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Colon, ':');\n    this.token(types.Colon, ':');\n\n    if (node.children === null) {\n        this.token(types.Ident, node.name);\n    } else {\n        this.token(types.Function, node.name + '(');\n        this.children(node);\n        this.token(types.RightParenthesis, ')');\n    }\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1BzZXVkb0VsZW1lbnRTZWxlY3Rvci5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1BzZXVkb0VsZW1lbnRTZWxlY3Rvci5janM/MjEyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdQc2V1ZG9FbGVtZW50U2VsZWN0b3InO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAnZnVuY3Rpb24nO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZyxcbiAgICBjaGlsZHJlbjogW1snUmF3J10sIG51bGxdXG59O1xuXG4vLyA6OiBbIDxpZGVudD4gfCA8ZnVuY3Rpb24tdG9rZW4+IDxhbnktdmFsdWU+PyApIF1cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuICAgIGxldCBjaGlsZHJlbiA9IG51bGw7XG4gICAgbGV0IG5hbWU7XG4gICAgbGV0IG5hbWVMb3dlckNhc2U7XG5cbiAgICB0aGlzLmVhdCh0eXBlcy5Db2xvbik7XG4gICAgdGhpcy5lYXQodHlwZXMuQ29sb24pO1xuXG4gICAgaWYgKHRoaXMudG9rZW5UeXBlID09PSB0eXBlcy5GdW5jdGlvbikge1xuICAgICAgICBuYW1lID0gdGhpcy5jb25zdW1lRnVuY3Rpb25OYW1lKCk7XG4gICAgICAgIG5hbWVMb3dlckNhc2UgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwodGhpcy5wc2V1ZG8sIG5hbWVMb3dlckNhc2UpKSB7XG4gICAgICAgICAgICB0aGlzLnNraXBTQygpO1xuICAgICAgICAgICAgY2hpbGRyZW4gPSB0aGlzLnBzZXVkb1tuYW1lTG93ZXJDYXNlXS5jYWxsKHRoaXMpO1xuICAgICAgICAgICAgdGhpcy5za2lwU0MoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNoaWxkcmVuID0gdGhpcy5jcmVhdGVMaXN0KCk7XG4gICAgICAgICAgICBjaGlsZHJlbi5wdXNoKFxuICAgICAgICAgICAgICAgIHRoaXMuUmF3KHRoaXMudG9rZW5JbmRleCwgbnVsbCwgZmFsc2UpXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5lYXQodHlwZXMuUmlnaHRQYXJlbnRoZXNpcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgbmFtZSA9IHRoaXMuY29uc3VtZSh0eXBlcy5JZGVudCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ1BzZXVkb0VsZW1lbnRTZWxlY3RvcicsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KSxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgY2hpbGRyZW5cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy50b2tlbih0eXBlcy5Db2xvbiwgJzonKTtcbiAgICB0aGlzLnRva2VuKHR5cGVzLkNvbG9uLCAnOicpO1xuXG4gICAgaWYgKG5vZGUuY2hpbGRyZW4gPT09IG51bGwpIHtcbiAgICAgICAgdGhpcy50b2tlbih0eXBlcy5JZGVudCwgbm9kZS5uYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRva2VuKHR5cGVzLkZ1bmN0aW9uLCBub2RlLm5hbWUgKyAnKCcpO1xuICAgICAgICB0aGlzLmNoaWxkcmVuKG5vZGUpO1xuICAgICAgICB0aGlzLnRva2VuKHR5cGVzLlJpZ2h0UGFyZW50aGVzaXMsICcpJyk7XG4gICAgfVxufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG5leHBvcnRzLndhbGtDb250ZXh0ID0gd2Fsa0NvbnRleHQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/PseudoElementSelector.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Ratio.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Ratio.cjs ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\nconst charCodeDefinitions = __webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// Terms of <ratio> should be a positive numbers (not zero or negative)\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\n// and this is using by various sites. Therefore we relax checking on parse\n// to test a term is unsigned number without an exponent part.\n// Additional checking may be applied on lexer validation.\nfunction consumeNumber() {\n    this.skipSC();\n\n    const value = this.consume(types.Number);\n\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if (!charCodeDefinitions.isDigit(code) && code !== FULLSTOP) {\n            this.error('Unsigned number is expected', this.tokenStart - value.length + i);\n        }\n    }\n\n    if (Number(value) === 0) {\n        this.error('Zero number is not allowed', this.tokenStart - value.length);\n    }\n\n    return value;\n}\n\nconst name = 'Ratio';\nconst structure = {\n    left: String,\n    right: String\n};\n\n// <positive-integer> S* '/' S* <positive-integer>\nfunction parse() {\n    const start = this.tokenStart;\n    const left = consumeNumber.call(this);\n    let right;\n\n    this.skipSC();\n    this.eatDelim(SOLIDUS);\n    right = consumeNumber.call(this);\n\n    return {\n        type: 'Ratio',\n        loc: this.getLocation(start, this.tokenStart),\n        left,\n        right\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Number, node.left);\n    this.token(types.Delim, '/');\n    this.token(types.Number, node.right);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1JhdGlvLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvUmF0aW8uY2pzP2RiNjYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbmNvbnN0IGNoYXJDb2RlRGVmaW5pdGlvbnMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBTT0xJRFVTID0gMHgwMDJGOyAgLy8gVSswMDJGIFNPTElEVVMgKC8pXG5jb25zdCBGVUxMU1RPUCA9IDB4MDAyRTsgLy8gVSswMDJFIEZVTEwgU1RPUCAoLilcblxuLy8gVGVybXMgb2YgPHJhdGlvPiBzaG91bGQgYmUgYSBwb3NpdGl2ZSBudW1iZXJzIChub3QgemVybyBvciBuZWdhdGl2ZSlcbi8vIChzZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL21lZGlhcXVlcmllcy0zLyN2YWx1ZXMpXG4vLyBIb3dldmVyLCAtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvIHRha2VzIGZyYWN0aW9uYWwgdmFsdWVzIGFzIGEgcmF0aW8ncyB0ZXJtXG4vLyBhbmQgdGhpcyBpcyB1c2luZyBieSB2YXJpb3VzIHNpdGVzLiBUaGVyZWZvcmUgd2UgcmVsYXggY2hlY2tpbmcgb24gcGFyc2Vcbi8vIHRvIHRlc3QgYSB0ZXJtIGlzIHVuc2lnbmVkIG51bWJlciB3aXRob3V0IGFuIGV4cG9uZW50IHBhcnQuXG4vLyBBZGRpdGlvbmFsIGNoZWNraW5nIG1heSBiZSBhcHBsaWVkIG9uIGxleGVyIHZhbGlkYXRpb24uXG5mdW5jdGlvbiBjb25zdW1lTnVtYmVyKCkge1xuICAgIHRoaXMuc2tpcFNDKCk7XG5cbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuY29uc3VtZSh0eXBlcy5OdW1iZXIpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBjb2RlID0gdmFsdWUuY2hhckNvZGVBdChpKTtcbiAgICAgICAgaWYgKCFjaGFyQ29kZURlZmluaXRpb25zLmlzRGlnaXQoY29kZSkgJiYgY29kZSAhPT0gRlVMTFNUT1ApIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IoJ1Vuc2lnbmVkIG51bWJlciBpcyBleHBlY3RlZCcsIHRoaXMudG9rZW5TdGFydCAtIHZhbHVlLmxlbmd0aCArIGkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKE51bWJlcih2YWx1ZSkgPT09IDApIHtcbiAgICAgICAgdGhpcy5lcnJvcignWmVybyBudW1iZXIgaXMgbm90IGFsbG93ZWQnLCB0aGlzLnRva2VuU3RhcnQgLSB2YWx1ZS5sZW5ndGgpO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbn1cblxuY29uc3QgbmFtZSA9ICdSYXRpbyc7XG5jb25zdCBzdHJ1Y3R1cmUgPSB7XG4gICAgbGVmdDogU3RyaW5nLFxuICAgIHJpZ2h0OiBTdHJpbmdcbn07XG5cbi8vIDxwb3NpdGl2ZS1pbnRlZ2VyPiBTKiAnLycgUyogPHBvc2l0aXZlLWludGVnZXI+XG5mdW5jdGlvbiBwYXJzZSgpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBjb25zdCBsZWZ0ID0gY29uc3VtZU51bWJlci5jYWxsKHRoaXMpO1xuICAgIGxldCByaWdodDtcblxuICAgIHRoaXMuc2tpcFNDKCk7XG4gICAgdGhpcy5lYXREZWxpbShTT0xJRFVTKTtcbiAgICByaWdodCA9IGNvbnN1bWVOdW1iZXIuY2FsbCh0aGlzKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdSYXRpbycsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KSxcbiAgICAgICAgbGVmdCxcbiAgICAgICAgcmlnaHRcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy50b2tlbih0eXBlcy5OdW1iZXIsIG5vZGUubGVmdCk7XG4gICAgdGhpcy50b2tlbih0eXBlcy5EZWxpbSwgJy8nKTtcbiAgICB0aGlzLnRva2VuKHR5cGVzLk51bWJlciwgbm9kZS5yaWdodCk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Ratio.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Raw.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Raw.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nfunction getOffsetExcludeWS() {\n    if (this.tokenIndex > 0) {\n        if (this.lookupType(-1) === types.WhiteSpace) {\n            return this.tokenIndex > 1\n                ? this.getTokenStart(this.tokenIndex - 1)\n                : this.firstCharOffset;\n        }\n    }\n\n    return this.tokenStart;\n}\n\nconst name = 'Raw';\nconst structure = {\n    value: String\n};\n\nfunction parse(startToken, consumeUntil, excludeWhiteSpace) {\n    const startOffset = this.getTokenStart(startToken);\n    let endOffset;\n\n    this.skipUntilBalanced(startToken, consumeUntil || this.consumeUntilBalanceEnd);\n\n    if (excludeWhiteSpace && this.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n    } else {\n        endOffset = this.tokenStart;\n    }\n\n    return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.substring(startOffset, endOffset)\n    };\n}\n\nfunction generate(node) {\n    this.tokenize(node.value);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1Jhdy5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1Jhdy5janM/M2E3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuZnVuY3Rpb24gZ2V0T2Zmc2V0RXhjbHVkZVdTKCkge1xuICAgIGlmICh0aGlzLnRva2VuSW5kZXggPiAwKSB7XG4gICAgICAgIGlmICh0aGlzLmxvb2t1cFR5cGUoLTEpID09PSB0eXBlcy5XaGl0ZVNwYWNlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy50b2tlbkluZGV4ID4gMVxuICAgICAgICAgICAgICAgID8gdGhpcy5nZXRUb2tlblN0YXJ0KHRoaXMudG9rZW5JbmRleCAtIDEpXG4gICAgICAgICAgICAgICAgOiB0aGlzLmZpcnN0Q2hhck9mZnNldDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnRva2VuU3RhcnQ7XG59XG5cbmNvbnN0IG5hbWUgPSAnUmF3JztcbmNvbnN0IHN0cnVjdHVyZSA9IHtcbiAgICB2YWx1ZTogU3RyaW5nXG59O1xuXG5mdW5jdGlvbiBwYXJzZShzdGFydFRva2VuLCBjb25zdW1lVW50aWwsIGV4Y2x1ZGVXaGl0ZVNwYWNlKSB7XG4gICAgY29uc3Qgc3RhcnRPZmZzZXQgPSB0aGlzLmdldFRva2VuU3RhcnQoc3RhcnRUb2tlbik7XG4gICAgbGV0IGVuZE9mZnNldDtcblxuICAgIHRoaXMuc2tpcFVudGlsQmFsYW5jZWQoc3RhcnRUb2tlbiwgY29uc3VtZVVudGlsIHx8IHRoaXMuY29uc3VtZVVudGlsQmFsYW5jZUVuZCk7XG5cbiAgICBpZiAoZXhjbHVkZVdoaXRlU3BhY2UgJiYgdGhpcy50b2tlblN0YXJ0ID4gc3RhcnRPZmZzZXQpIHtcbiAgICAgICAgZW5kT2Zmc2V0ID0gZ2V0T2Zmc2V0RXhjbHVkZVdTLmNhbGwodGhpcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZW5kT2Zmc2V0ID0gdGhpcy50b2tlblN0YXJ0O1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdSYXcnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnRPZmZzZXQsIGVuZE9mZnNldCksXG4gICAgICAgIHZhbHVlOiB0aGlzLnN1YnN0cmluZyhzdGFydE9mZnNldCwgZW5kT2Zmc2V0KVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuaXplKG5vZGUudmFsdWUpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Raw.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Rule.cjs":
/*!********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Rule.cjs ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n    const prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== types.LeftCurlyBracket) {\n        this.error();\n    }\n\n    return prelude;\n}\n\nconst name = 'Rule';\nconst walkContext = 'rule';\nconst structure = {\n    prelude: ['SelectorList', 'Raw'],\n    block: ['Block']\n};\n\nfunction parse() {\n    const startToken = this.tokenIndex;\n    const startOffset = this.tokenStart;\n    let prelude;\n    let block;\n\n    if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n    } else {\n        prelude = consumeRaw.call(this, startToken);\n    }\n\n    block = this.Block(true);\n\n    return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.tokenStart),\n        prelude,\n        block\n    };\n}\nfunction generate(node) {\n    this.node(node.prelude);\n    this.node(node.block);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1J1bGUuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9SdWxlLmNqcz85ZThiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5mdW5jdGlvbiBjb25zdW1lUmF3KHN0YXJ0VG9rZW4pIHtcbiAgICByZXR1cm4gdGhpcy5SYXcoc3RhcnRUb2tlbiwgdGhpcy5jb25zdW1lVW50aWxMZWZ0Q3VybHlCcmFja2V0LCB0cnVlKTtcbn1cblxuZnVuY3Rpb24gY29uc3VtZVByZWx1ZGUoKSB7XG4gICAgY29uc3QgcHJlbHVkZSA9IHRoaXMuU2VsZWN0b3JMaXN0KCk7XG5cbiAgICBpZiAocHJlbHVkZS50eXBlICE9PSAnUmF3JyAmJlxuICAgICAgICB0aGlzLmVvZiA9PT0gZmFsc2UgJiZcbiAgICAgICAgdGhpcy50b2tlblR5cGUgIT09IHR5cGVzLkxlZnRDdXJseUJyYWNrZXQpIHtcbiAgICAgICAgdGhpcy5lcnJvcigpO1xuICAgIH1cblxuICAgIHJldHVybiBwcmVsdWRlO1xufVxuXG5jb25zdCBuYW1lID0gJ1J1bGUnO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAncnVsZSc7XG5jb25zdCBzdHJ1Y3R1cmUgPSB7XG4gICAgcHJlbHVkZTogWydTZWxlY3Rvckxpc3QnLCAnUmF3J10sXG4gICAgYmxvY2s6IFsnQmxvY2snXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnRUb2tlbiA9IHRoaXMudG9rZW5JbmRleDtcbiAgICBjb25zdCBzdGFydE9mZnNldCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBsZXQgcHJlbHVkZTtcbiAgICBsZXQgYmxvY2s7XG5cbiAgICBpZiAodGhpcy5wYXJzZVJ1bGVQcmVsdWRlKSB7XG4gICAgICAgIHByZWx1ZGUgPSB0aGlzLnBhcnNlV2l0aEZhbGxiYWNrKGNvbnN1bWVQcmVsdWRlLCBjb25zdW1lUmF3KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBwcmVsdWRlID0gY29uc3VtZVJhdy5jYWxsKHRoaXMsIHN0YXJ0VG9rZW4pO1xuICAgIH1cblxuICAgIGJsb2NrID0gdGhpcy5CbG9jayh0cnVlKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdSdWxlJyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uKHN0YXJ0T2Zmc2V0LCB0aGlzLnRva2VuU3RhcnQpLFxuICAgICAgICBwcmVsdWRlLFxuICAgICAgICBibG9ja1xuICAgIH07XG59XG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy5ub2RlKG5vZGUucHJlbHVkZSk7XG4gICAgdGhpcy5ub2RlKG5vZGUuYmxvY2spO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG5leHBvcnRzLndhbGtDb250ZXh0ID0gd2Fsa0NvbnRleHQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Rule.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Selector.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Selector.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst name = 'Selector';\nconst structure = {\n    children: [[\n        'TypeSelector',\n        'IdSelector',\n        'ClassSelector',\n        'AttributeSelector',\n        'PseudoClassSelector',\n        'PseudoElementSelector',\n        'Combinator',\n        'WhiteSpace'\n    ]]\n};\n\nfunction parse() {\n    const children = this.readSequence(this.scope.Selector);\n\n    // nothing were consumed\n    if (this.getFirstListNode(children) === null) {\n        this.error('Selector is expected');\n    }\n\n    return {\n        type: 'Selector',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.children(node);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1NlbGVjdG9yLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvU2VsZWN0b3IuY2pzPzk1YmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBuYW1lID0gJ1NlbGVjdG9yJztcbmNvbnN0IHN0cnVjdHVyZSA9IHtcbiAgICBjaGlsZHJlbjogW1tcbiAgICAgICAgJ1R5cGVTZWxlY3RvcicsXG4gICAgICAgICdJZFNlbGVjdG9yJyxcbiAgICAgICAgJ0NsYXNzU2VsZWN0b3InLFxuICAgICAgICAnQXR0cmlidXRlU2VsZWN0b3InLFxuICAgICAgICAnUHNldWRvQ2xhc3NTZWxlY3RvcicsXG4gICAgICAgICdQc2V1ZG9FbGVtZW50U2VsZWN0b3InLFxuICAgICAgICAnQ29tYmluYXRvcicsXG4gICAgICAgICdXaGl0ZVNwYWNlJ1xuICAgIF1dXG59O1xuXG5mdW5jdGlvbiBwYXJzZSgpIHtcbiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMucmVhZFNlcXVlbmNlKHRoaXMuc2NvcGUuU2VsZWN0b3IpO1xuXG4gICAgLy8gbm90aGluZyB3ZXJlIGNvbnN1bWVkXG4gICAgaWYgKHRoaXMuZ2V0Rmlyc3RMaXN0Tm9kZShjaGlsZHJlbikgPT09IG51bGwpIHtcbiAgICAgICAgdGhpcy5lcnJvcignU2VsZWN0b3IgaXMgZXhwZWN0ZWQnKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnU2VsZWN0b3InLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb25Gcm9tTGlzdChjaGlsZHJlbiksXG4gICAgICAgIGNoaWxkcmVuXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMuY2hpbGRyZW4obm9kZSk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Selector.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/SelectorList.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/SelectorList.cjs ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'SelectorList';\nconst walkContext = 'selector';\nconst structure = {\n    children: [[\n        'Selector',\n        'Raw'\n    ]]\n};\n\nfunction parse() {\n    const children = this.createList();\n\n    while (!this.eof) {\n        children.push(this.Selector());\n\n        if (this.tokenType === types.Comma) {\n            this.next();\n            continue;\n        }\n\n        break;\n    }\n\n    return {\n        type: 'SelectorList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.children(node, () => this.token(types.Comma, ','));\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1NlbGVjdG9yTGlzdC5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1NlbGVjdG9yTGlzdC5janM/OTJiNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdTZWxlY3Rvckxpc3QnO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAnc2VsZWN0b3InO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIGNoaWxkcmVuOiBbW1xuICAgICAgICAnU2VsZWN0b3InLFxuICAgICAgICAnUmF3J1xuICAgIF1dXG59O1xuXG5mdW5jdGlvbiBwYXJzZSgpIHtcbiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuY3JlYXRlTGlzdCgpO1xuXG4gICAgd2hpbGUgKCF0aGlzLmVvZikge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKHRoaXMuU2VsZWN0b3IoKSk7XG5cbiAgICAgICAgaWYgKHRoaXMudG9rZW5UeXBlID09PSB0eXBlcy5Db21tYSkge1xuICAgICAgICAgICAgdGhpcy5uZXh0KCk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdTZWxlY3Rvckxpc3QnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb25Gcm9tTGlzdChjaGlsZHJlbiksXG4gICAgICAgIGNoaWxkcmVuXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMuY2hpbGRyZW4obm9kZSwgKCkgPT4gdGhpcy50b2tlbih0eXBlcy5Db21tYSwgJywnKSk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbmV4cG9ydHMud2Fsa0NvbnRleHQgPSB3YWxrQ29udGV4dDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/SelectorList.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/String.cjs":
/*!**********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/String.cjs ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst string = __webpack_require__(/*! ../../utils/string.cjs */ \"./node_modules/css-tree/cjs/utils/string.cjs\");\n\nconst name = 'String';\nconst structure = {\n    value: String\n};\n\nfunction parse() {\n    return {\n        type: 'String',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: string.decode(this.consume(types.String))\n    };\n}\n\nfunction generate(node) {\n    this.token(types.String, string.encode(node.value));\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1N0cmluZy5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1N0cmluZy5janM/ZmE0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcbmNvbnN0IHN0cmluZyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3N0cmluZy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdTdHJpbmcnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIHZhbHVlOiBTdHJpbmdcbn07XG5cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdTdHJpbmcnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24odGhpcy50b2tlblN0YXJ0LCB0aGlzLnRva2VuRW5kKSxcbiAgICAgICAgdmFsdWU6IHN0cmluZy5kZWNvZGUodGhpcy5jb25zdW1lKHR5cGVzLlN0cmluZykpXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMudG9rZW4odHlwZXMuU3RyaW5nLCBzdHJpbmcuZW5jb2RlKG5vZGUudmFsdWUpKTtcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZSA9IGdlbmVyYXRlO1xuZXhwb3J0cy5uYW1lID0gbmFtZTtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc3RydWN0dXJlID0gc3RydWN0dXJlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/String.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/StyleSheet.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/StyleSheet.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, false);\n}\n\nconst name = 'StyleSheet';\nconst walkContext = 'stylesheet';\nconst structure = {\n    children: [[\n        'Comment',\n        'CDO',\n        'CDC',\n        'Atrule',\n        'Rule',\n        'Raw'\n    ]]\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n    const children = this.createList();\n    let child;\n\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case types.WhiteSpace:\n                this.next();\n                continue;\n\n            case types.Comment:\n                // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n                if (this.charCodeAt(this.tokenStart + 2) !== EXCLAMATIONMARK) {\n                    this.next();\n                    continue;\n                }\n\n                child = this.Comment();\n                break;\n\n            case types.CDO: // <!--\n                child = this.CDO();\n                break;\n\n            case types.CDC: // -->\n                child = this.CDC();\n                break;\n\n            // CSS Syntax Module Level 3\n            // §2.2 Error handling\n            // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n            case types.AtKeyword:\n                child = this.parseWithFallback(this.Atrule, consumeRaw);\n                break;\n\n            // Anything else starts a qualified rule ...\n            default:\n                child = this.parseWithFallback(this.Rule, consumeRaw);\n        }\n\n        children.push(child);\n    }\n\n    return {\n        type: 'StyleSheet',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.children(node);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\nexports.walkContext = walkContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1N0eWxlU2hlZXQuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9TdHlsZVNoZWV0LmNqcz9lY2Y1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBFWENMQU1BVElPTk1BUksgPSAweDAwMjE7IC8vIFUrMDAyMSBFWENMQU1BVElPTiBNQVJLICghKVxuXG5mdW5jdGlvbiBjb25zdW1lUmF3KHN0YXJ0VG9rZW4pIHtcbiAgICByZXR1cm4gdGhpcy5SYXcoc3RhcnRUb2tlbiwgbnVsbCwgZmFsc2UpO1xufVxuXG5jb25zdCBuYW1lID0gJ1N0eWxlU2hlZXQnO1xuY29uc3Qgd2Fsa0NvbnRleHQgPSAnc3R5bGVzaGVldCc7XG5jb25zdCBzdHJ1Y3R1cmUgPSB7XG4gICAgY2hpbGRyZW46IFtbXG4gICAgICAgICdDb21tZW50JyxcbiAgICAgICAgJ0NETycsXG4gICAgICAgICdDREMnLFxuICAgICAgICAnQXRydWxlJyxcbiAgICAgICAgJ1J1bGUnLFxuICAgICAgICAnUmF3J1xuICAgIF1dXG59O1xuXG5mdW5jdGlvbiBwYXJzZSgpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuY3JlYXRlTGlzdCgpO1xuICAgIGxldCBjaGlsZDtcblxuICAgIHdoaWxlICghdGhpcy5lb2YpIHtcbiAgICAgICAgc3dpdGNoICh0aGlzLnRva2VuVHlwZSkge1xuICAgICAgICAgICAgY2FzZSB0eXBlcy5XaGl0ZVNwYWNlOlxuICAgICAgICAgICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICBjYXNlIHR5cGVzLkNvbW1lbnQ6XG4gICAgICAgICAgICAgICAgLy8gaWdub3JlIGNvbW1lbnRzIGV4Y2VwdCBleGNsYW1hdGlvbiBjb21tZW50cyAoaS5lLiAvKiEgLi4gKi8pIG9uIHRvcCBsZXZlbFxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoYXJDb2RlQXQodGhpcy50b2tlblN0YXJ0ICsgMikgIT09IEVYQ0xBTUFUSU9OTUFSSykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5leHQoKTtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY2hpbGQgPSB0aGlzLkNvbW1lbnQoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSB0eXBlcy5DRE86IC8vIDwhLS1cbiAgICAgICAgICAgICAgICBjaGlsZCA9IHRoaXMuQ0RPKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgdHlwZXMuQ0RDOiAvLyAtLT5cbiAgICAgICAgICAgICAgICBjaGlsZCA9IHRoaXMuQ0RDKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIC8vIENTUyBTeW50YXggTW9kdWxlIExldmVsIDNcbiAgICAgICAgICAgIC8vIMKnMi4yIEVycm9yIGhhbmRsaW5nXG4gICAgICAgICAgICAvLyBBdCB0aGUgXCJ0b3AgbGV2ZWxcIiBvZiBhIHN0eWxlc2hlZXQsIGFuIDxhdC1rZXl3b3JkLXRva2VuPiBzdGFydHMgYW4gYXQtcnVsZS5cbiAgICAgICAgICAgIGNhc2UgdHlwZXMuQXRLZXl3b3JkOlxuICAgICAgICAgICAgICAgIGNoaWxkID0gdGhpcy5wYXJzZVdpdGhGYWxsYmFjayh0aGlzLkF0cnVsZSwgY29uc3VtZVJhdyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIC8vIEFueXRoaW5nIGVsc2Ugc3RhcnRzIGEgcXVhbGlmaWVkIHJ1bGUgLi4uXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGNoaWxkID0gdGhpcy5wYXJzZVdpdGhGYWxsYmFjayh0aGlzLlJ1bGUsIGNvbnN1bWVSYXcpO1xuICAgICAgICB9XG5cbiAgICAgICAgY2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ1N0eWxlU2hlZXQnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIGNoaWxkcmVuXG4gICAgfTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUobm9kZSkge1xuICAgIHRoaXMuY2hpbGRyZW4obm9kZSk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbmV4cG9ydHMud2Fsa0NvbnRleHQgPSB3YWxrQ29udGV4dDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/StyleSheet.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/TypeSelector.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/TypeSelector.cjs ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst ASTERISK = 0x002A;     // U+002A ASTERISK (*)\nconst VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\n\nfunction eatIdentifierOrAsterisk() {\n    if (this.tokenType !== types.Ident &&\n        this.isDelim(ASTERISK) === false) {\n        this.error('Identifier or asterisk is expected');\n    }\n\n    this.next();\n}\n\nconst name = 'TypeSelector';\nconst structure = {\n    name: String\n};\n\n// ident\n// ident|ident\n// ident|*\n// *\n// *|ident\n// *|*\n// |ident\n// |*\nfunction parse() {\n    const start = this.tokenStart;\n\n    if (this.isDelim(VERTICALLINE)) {\n        this.next();\n        eatIdentifierOrAsterisk.call(this);\n    } else {\n        eatIdentifierOrAsterisk.call(this);\n\n        if (this.isDelim(VERTICALLINE)) {\n            this.next();\n            eatIdentifierOrAsterisk.call(this);\n        }\n    }\n\n    return {\n        type: 'TypeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nfunction generate(node) {\n    this.tokenize(node.name);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1R5cGVTZWxlY3Rvci5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1R5cGVTZWxlY3Rvci5janM/YTI5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgQVNURVJJU0sgPSAweDAwMkE7ICAgICAvLyBVKzAwMkEgQVNURVJJU0sgKCopXG5jb25zdCBWRVJUSUNBTExJTkUgPSAweDAwN0M7IC8vIFUrMDA3QyBWRVJUSUNBTCBMSU5FICh8KVxuXG5mdW5jdGlvbiBlYXRJZGVudGlmaWVyT3JBc3RlcmlzaygpIHtcbiAgICBpZiAodGhpcy50b2tlblR5cGUgIT09IHR5cGVzLklkZW50ICYmXG4gICAgICAgIHRoaXMuaXNEZWxpbShBU1RFUklTSykgPT09IGZhbHNlKSB7XG4gICAgICAgIHRoaXMuZXJyb3IoJ0lkZW50aWZpZXIgb3IgYXN0ZXJpc2sgaXMgZXhwZWN0ZWQnKTtcbiAgICB9XG5cbiAgICB0aGlzLm5leHQoKTtcbn1cblxuY29uc3QgbmFtZSA9ICdUeXBlU2VsZWN0b3InO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIG5hbWU6IFN0cmluZ1xufTtcblxuLy8gaWRlbnRcbi8vIGlkZW50fGlkZW50XG4vLyBpZGVudHwqXG4vLyAqXG4vLyAqfGlkZW50XG4vLyAqfCpcbi8vIHxpZGVudFxuLy8gfCpcbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuXG4gICAgaWYgKHRoaXMuaXNEZWxpbShWRVJUSUNBTExJTkUpKSB7XG4gICAgICAgIHRoaXMubmV4dCgpO1xuICAgICAgICBlYXRJZGVudGlmaWVyT3JBc3Rlcmlzay5jYWxsKHRoaXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGVhdElkZW50aWZpZXJPckFzdGVyaXNrLmNhbGwodGhpcyk7XG5cbiAgICAgICAgaWYgKHRoaXMuaXNEZWxpbShWRVJUSUNBTExJTkUpKSB7XG4gICAgICAgICAgICB0aGlzLm5leHQoKTtcbiAgICAgICAgICAgIGVhdElkZW50aWZpZXJPckFzdGVyaXNrLmNhbGwodGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnVHlwZVNlbGVjdG9yJyxcbiAgICAgICAgbG9jOiB0aGlzLmdldExvY2F0aW9uKHN0YXJ0LCB0aGlzLnRva2VuU3RhcnQpLFxuICAgICAgICBuYW1lOiB0aGlzLnN1YnN0clRvQ3Vyc29yKHN0YXJ0KVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuaXplKG5vZGUubmFtZSk7XG59XG5cbmV4cG9ydHMuZ2VuZXJhdGUgPSBnZW5lcmF0ZTtcbmV4cG9ydHMubmFtZSA9IG5hbWU7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnN0cnVjdHVyZSA9IHN0cnVjdHVyZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/TypeSelector.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/UnicodeRange.cjs":
/*!****************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/UnicodeRange.cjs ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\nconst charCodeDefinitions = __webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n\nfunction eatHexSequence(offset, allowDash) {\n    let len = 0;\n\n    for (let pos = this.tokenStart + offset; pos < this.tokenEnd; pos++) {\n        const code = this.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\n            eatHexSequence.call(this, offset + len + 1, false);\n            return -1;\n        }\n\n        if (!charCodeDefinitions.isHexDigit(code)) {\n            this.error(\n                allowDash && len !== 0\n                    ? 'Hyphen minus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\n                pos\n            );\n        }\n\n        if (++len > 6) {\n            this.error('Too many hex digits', pos);\n        }    }\n\n    this.next();\n    return len;\n}\n\nfunction eatQuestionMarkSequence(max) {\n    let count = 0;\n\n    while (this.isDelim(QUESTIONMARK)) {\n        if (++count > max) {\n            this.error('Too many question marks');\n        }\n\n        this.next();\n    }\n}\n\nfunction startsWith(code) {\n    if (this.charCodeAt(this.tokenStart) !== code) {\n        this.error((code === PLUSSIGN ? 'Plus sign' : 'Hyphen minus') + ' is expected');\n    }\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nfunction scanUnicodeRange() {\n    let hexLength = 0;\n\n    switch (this.tokenType) {\n        case types.Number:\n            // u <number-token> '?'*\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (this.isDelim(QUESTIONMARK)) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n                break;\n            }\n\n            if (this.tokenType === types.Dimension ||\n                this.tokenType === types.Number) {\n                startsWith.call(this, HYPHENMINUS);\n                eatHexSequence.call(this, 1, false);\n                break;\n            }\n\n            break;\n\n        case types.Dimension:\n            // u <dimension-token> '?'*\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (hexLength > 0) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n            }\n\n            break;\n\n        default:\n            // u '+' <ident-token> '?'*\n            // u '+' '?'+\n            this.eatDelim(PLUSSIGN);\n\n            if (this.tokenType === types.Ident) {\n                hexLength = eatHexSequence.call(this, 0, true);\n                if (hexLength > 0) {\n                    eatQuestionMarkSequence.call(this, 6 - hexLength);\n                }\n                break;\n            }\n\n            if (this.isDelim(QUESTIONMARK)) {\n                this.next();\n                eatQuestionMarkSequence.call(this, 5);\n                break;\n            }\n\n            this.error('Hex digit or question mark is expected');\n    }\n}\n\nconst name = 'UnicodeRange';\nconst structure = {\n    value: String\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n\n    // U or u\n    this.eatIdent('u');\n    scanUnicodeRange.call(this);\n\n    return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nfunction generate(node) {\n    this.tokenize(node.value);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1VuaWNvZGVSYW5nZS5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1VuaWNvZGVSYW5nZS5janM/NmM2YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xuY29uc3QgY2hhckNvZGVEZWZpbml0aW9ucyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmNvbnN0IFBMVVNTSUdOID0gMHgwMDJCOyAgICAgLy8gVSswMDJCIFBMVVMgU0lHTiAoKylcbmNvbnN0IEhZUEhFTk1JTlVTID0gMHgwMDJEOyAgLy8gVSswMDJEIEhZUEhFTi1NSU5VUyAoLSlcbmNvbnN0IFFVRVNUSU9OTUFSSyA9IDB4MDAzRjsgLy8gVSswMDNGIFFVRVNUSU9OIE1BUksgKD8pXG5cbmZ1bmN0aW9uIGVhdEhleFNlcXVlbmNlKG9mZnNldCwgYWxsb3dEYXNoKSB7XG4gICAgbGV0IGxlbiA9IDA7XG5cbiAgICBmb3IgKGxldCBwb3MgPSB0aGlzLnRva2VuU3RhcnQgKyBvZmZzZXQ7IHBvcyA8IHRoaXMudG9rZW5FbmQ7IHBvcysrKSB7XG4gICAgICAgIGNvbnN0IGNvZGUgPSB0aGlzLmNoYXJDb2RlQXQocG9zKTtcblxuICAgICAgICBpZiAoY29kZSA9PT0gSFlQSEVOTUlOVVMgJiYgYWxsb3dEYXNoICYmIGxlbiAhPT0gMCkge1xuICAgICAgICAgICAgZWF0SGV4U2VxdWVuY2UuY2FsbCh0aGlzLCBvZmZzZXQgKyBsZW4gKyAxLCBmYWxzZSk7XG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIWNoYXJDb2RlRGVmaW5pdGlvbnMuaXNIZXhEaWdpdChjb2RlKSkge1xuICAgICAgICAgICAgdGhpcy5lcnJvcihcbiAgICAgICAgICAgICAgICBhbGxvd0Rhc2ggJiYgbGVuICE9PSAwXG4gICAgICAgICAgICAgICAgICAgID8gJ0h5cGhlbiBtaW51cycgKyAobGVuIDwgNiA/ICcgb3IgaGV4IGRpZ2l0JyA6ICcnKSArICcgaXMgZXhwZWN0ZWQnXG4gICAgICAgICAgICAgICAgICAgIDogKGxlbiA8IDYgPyAnSGV4IGRpZ2l0IGlzIGV4cGVjdGVkJyA6ICdVbmV4cGVjdGVkIGlucHV0JyksXG4gICAgICAgICAgICAgICAgcG9zXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCsrbGVuID4gNikge1xuICAgICAgICAgICAgdGhpcy5lcnJvcignVG9vIG1hbnkgaGV4IGRpZ2l0cycsIHBvcyk7XG4gICAgICAgIH0gICAgfVxuXG4gICAgdGhpcy5uZXh0KCk7XG4gICAgcmV0dXJuIGxlbjtcbn1cblxuZnVuY3Rpb24gZWF0UXVlc3Rpb25NYXJrU2VxdWVuY2UobWF4KSB7XG4gICAgbGV0IGNvdW50ID0gMDtcblxuICAgIHdoaWxlICh0aGlzLmlzRGVsaW0oUVVFU1RJT05NQVJLKSkge1xuICAgICAgICBpZiAoKytjb3VudCA+IG1heCkge1xuICAgICAgICAgICAgdGhpcy5lcnJvcignVG9vIG1hbnkgcXVlc3Rpb24gbWFya3MnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubmV4dCgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gc3RhcnRzV2l0aChjb2RlKSB7XG4gICAgaWYgKHRoaXMuY2hhckNvZGVBdCh0aGlzLnRva2VuU3RhcnQpICE9PSBjb2RlKSB7XG4gICAgICAgIHRoaXMuZXJyb3IoKGNvZGUgPT09IFBMVVNTSUdOID8gJ1BsdXMgc2lnbicgOiAnSHlwaGVuIG1pbnVzJykgKyAnIGlzIGV4cGVjdGVkJyk7XG4gICAgfVxufVxuXG4vLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXN5bnRheC8jdXJhbmdlXG4vLyBJbmZvcm1hbGx5LCB0aGUgPHVyYW5nZT4gcHJvZHVjdGlvbiBoYXMgdGhyZWUgZm9ybXM6XG4vLyBVKzAwMDFcbi8vICAgICAgRGVmaW5lcyBhIHJhbmdlIGNvbnNpc3Rpbmcgb2YgYSBzaW5nbGUgY29kZSBwb2ludCwgaW4gdGhpcyBjYXNlIHRoZSBjb2RlIHBvaW50IFwiMVwiLlxuLy8gVSswMDAxLTAwZmZcbi8vICAgICAgRGVmaW5lcyBhIHJhbmdlIG9mIGNvZGVwb2ludHMgYmV0d2VlbiB0aGUgZmlyc3QgYW5kIHRoZSBzZWNvbmQgdmFsdWUsIGluIHRoaXMgY2FzZVxuLy8gICAgICB0aGUgcmFuZ2UgYmV0d2VlbiBcIjFcIiBhbmQgXCJmZlwiICgyNTUgaW4gZGVjaW1hbCkgaW5jbHVzaXZlLlxuLy8gVSswMD8/XG4vLyAgICAgIERlZmluZXMgYSByYW5nZSBvZiBjb2RlcG9pbnRzIHdoZXJlIHRoZSBcIj9cIiBjaGFyYWN0ZXJzIHJhbmdlIG92ZXIgYWxsIGhleCBkaWdpdHMsXG4vLyAgICAgIGluIHRoaXMgY2FzZSBkZWZpbmluZyB0aGUgc2FtZSBhcyB0aGUgdmFsdWUgVSswMDAwLTAwZmYuXG4vLyBJbiBlYWNoIGZvcm0sIGEgbWF4aW11bSBvZiA2IGRpZ2l0cyBpcyBhbGxvd2VkIGZvciBlYWNoIGhleGFkZWNpbWFsIG51bWJlciAoaWYgeW91IHRyZWF0IFwiP1wiIGFzIGEgaGV4YWRlY2ltYWwgZGlnaXQpLlxuLy9cbi8vIDx1cmFuZ2U+ID1cbi8vICAgdSAnKycgPGlkZW50LXRva2VuPiAnPycqIHxcbi8vICAgdSA8ZGltZW5zaW9uLXRva2VuPiAnPycqIHxcbi8vICAgdSA8bnVtYmVyLXRva2VuPiAnPycqIHxcbi8vICAgdSA8bnVtYmVyLXRva2VuPiA8ZGltZW5zaW9uLXRva2VuPiB8XG4vLyAgIHUgPG51bWJlci10b2tlbj4gPG51bWJlci10b2tlbj4gfFxuLy8gICB1ICcrJyAnPycrXG5mdW5jdGlvbiBzY2FuVW5pY29kZVJhbmdlKCkge1xuICAgIGxldCBoZXhMZW5ndGggPSAwO1xuXG4gICAgc3dpdGNoICh0aGlzLnRva2VuVHlwZSkge1xuICAgICAgICBjYXNlIHR5cGVzLk51bWJlcjpcbiAgICAgICAgICAgIC8vIHUgPG51bWJlci10b2tlbj4gJz8nKlxuICAgICAgICAgICAgLy8gdSA8bnVtYmVyLXRva2VuPiA8ZGltZW5zaW9uLXRva2VuPlxuICAgICAgICAgICAgLy8gdSA8bnVtYmVyLXRva2VuPiA8bnVtYmVyLXRva2VuPlxuICAgICAgICAgICAgaGV4TGVuZ3RoID0gZWF0SGV4U2VxdWVuY2UuY2FsbCh0aGlzLCAxLCB0cnVlKTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuaXNEZWxpbShRVUVTVElPTk1BUkspKSB7XG4gICAgICAgICAgICAgICAgZWF0UXVlc3Rpb25NYXJrU2VxdWVuY2UuY2FsbCh0aGlzLCA2IC0gaGV4TGVuZ3RoKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMudG9rZW5UeXBlID09PSB0eXBlcy5EaW1lbnNpb24gfHxcbiAgICAgICAgICAgICAgICB0aGlzLnRva2VuVHlwZSA9PT0gdHlwZXMuTnVtYmVyKSB7XG4gICAgICAgICAgICAgICAgc3RhcnRzV2l0aC5jYWxsKHRoaXMsIEhZUEhFTk1JTlVTKTtcbiAgICAgICAgICAgICAgICBlYXRIZXhTZXF1ZW5jZS5jYWxsKHRoaXMsIDEsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSB0eXBlcy5EaW1lbnNpb246XG4gICAgICAgICAgICAvLyB1IDxkaW1lbnNpb24tdG9rZW4+ICc/JypcbiAgICAgICAgICAgIGhleExlbmd0aCA9IGVhdEhleFNlcXVlbmNlLmNhbGwodGhpcywgMSwgdHJ1ZSk7XG5cbiAgICAgICAgICAgIGlmIChoZXhMZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgZWF0UXVlc3Rpb25NYXJrU2VxdWVuY2UuY2FsbCh0aGlzLCA2IC0gaGV4TGVuZ3RoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIC8vIHUgJysnIDxpZGVudC10b2tlbj4gJz8nKlxuICAgICAgICAgICAgLy8gdSAnKycgJz8nK1xuICAgICAgICAgICAgdGhpcy5lYXREZWxpbShQTFVTU0lHTik7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnRva2VuVHlwZSA9PT0gdHlwZXMuSWRlbnQpIHtcbiAgICAgICAgICAgICAgICBoZXhMZW5ndGggPSBlYXRIZXhTZXF1ZW5jZS5jYWxsKHRoaXMsIDAsIHRydWUpO1xuICAgICAgICAgICAgICAgIGlmIChoZXhMZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGVhdFF1ZXN0aW9uTWFya1NlcXVlbmNlLmNhbGwodGhpcywgNiAtIGhleExlbmd0aCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5pc0RlbGltKFFVRVNUSU9OTUFSSykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm5leHQoKTtcbiAgICAgICAgICAgICAgICBlYXRRdWVzdGlvbk1hcmtTZXF1ZW5jZS5jYWxsKHRoaXMsIDUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmVycm9yKCdIZXggZGlnaXQgb3IgcXVlc3Rpb24gbWFyayBpcyBleHBlY3RlZCcpO1xuICAgIH1cbn1cblxuY29uc3QgbmFtZSA9ICdVbmljb2RlUmFuZ2UnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIHZhbHVlOiBTdHJpbmdcbn07XG5cbmZ1bmN0aW9uIHBhcnNlKCkge1xuICAgIGNvbnN0IHN0YXJ0ID0gdGhpcy50b2tlblN0YXJ0O1xuXG4gICAgLy8gVSBvciB1XG4gICAgdGhpcy5lYXRJZGVudCgndScpO1xuICAgIHNjYW5Vbmljb2RlUmFuZ2UuY2FsbCh0aGlzKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdVbmljb2RlUmFuZ2UnLFxuICAgICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24oc3RhcnQsIHRoaXMudG9rZW5TdGFydCksXG4gICAgICAgIHZhbHVlOiB0aGlzLnN1YnN0clRvQ3Vyc29yKHN0YXJ0KVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuaXplKG5vZGUudmFsdWUpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/UnicodeRange.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Url.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Url.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst url = __webpack_require__(/*! ../../utils/url.cjs */ \"./node_modules/css-tree/cjs/utils/url.cjs\");\nconst string = __webpack_require__(/*! ../../utils/string.cjs */ \"./node_modules/css-tree/cjs/utils/string.cjs\");\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst name = 'Url';\nconst structure = {\n    value: String\n};\n\n// <url-token> | <function-token> <string> )\nfunction parse() {\n    const start = this.tokenStart;\n    let value;\n\n    switch (this.tokenType) {\n        case types.Url:\n            value = url.decode(this.consume(types.Url));\n            break;\n\n        case types.Function:\n            if (!this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')) {\n                this.error('Function name must be `url`');\n            }\n\n            this.eat(types.Function);\n            this.skipSC();\n            value = string.decode(this.consume(types.String));\n            this.skipSC();\n            if (!this.eof) {\n                this.eat(types.RightParenthesis);\n            }\n            break;\n\n        default:\n            this.error('Url or Function is expected');\n    }\n\n    return {\n        type: 'Url',\n        loc: this.getLocation(start, this.tokenStart),\n        value\n    };\n}\n\nfunction generate(node) {\n    this.token(types.Url, url.encode(node.value));\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1VybC5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1VybC5janM/ZWU3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHVybCA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3VybC5janMnKTtcbmNvbnN0IHN0cmluZyA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzL3N0cmluZy5janMnKTtcbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgbmFtZSA9ICdVcmwnO1xuY29uc3Qgc3RydWN0dXJlID0ge1xuICAgIHZhbHVlOiBTdHJpbmdcbn07XG5cbi8vIDx1cmwtdG9rZW4+IHwgPGZ1bmN0aW9uLXRva2VuPiA8c3RyaW5nPiApXG5mdW5jdGlvbiBwYXJzZSgpIHtcbiAgICBjb25zdCBzdGFydCA9IHRoaXMudG9rZW5TdGFydDtcbiAgICBsZXQgdmFsdWU7XG5cbiAgICBzd2l0Y2ggKHRoaXMudG9rZW5UeXBlKSB7XG4gICAgICAgIGNhc2UgdHlwZXMuVXJsOlxuICAgICAgICAgICAgdmFsdWUgPSB1cmwuZGVjb2RlKHRoaXMuY29uc3VtZSh0eXBlcy5VcmwpKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgdHlwZXMuRnVuY3Rpb246XG4gICAgICAgICAgICBpZiAoIXRoaXMuY21wU3RyKHRoaXMudG9rZW5TdGFydCwgdGhpcy50b2tlbkVuZCwgJ3VybCgnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IoJ0Z1bmN0aW9uIG5hbWUgbXVzdCBiZSBgdXJsYCcpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmVhdCh0eXBlcy5GdW5jdGlvbik7XG4gICAgICAgICAgICB0aGlzLnNraXBTQygpO1xuICAgICAgICAgICAgdmFsdWUgPSBzdHJpbmcuZGVjb2RlKHRoaXMuY29uc3VtZSh0eXBlcy5TdHJpbmcpKTtcbiAgICAgICAgICAgIHRoaXMuc2tpcFNDKCk7XG4gICAgICAgICAgICBpZiAoIXRoaXMuZW9mKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lYXQodHlwZXMuUmlnaHRQYXJlbnRoZXNpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhpcy5lcnJvcignVXJsIG9yIEZ1bmN0aW9uIGlzIGV4cGVjdGVkJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ1VybCcsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KSxcbiAgICAgICAgdmFsdWVcbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy50b2tlbih0eXBlcy5VcmwsIHVybC5lbmNvZGUobm9kZS52YWx1ZSkpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Url.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/Value.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/Value.cjs ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst name = 'Value';\nconst structure = {\n    children: [[]]\n};\n\nfunction parse() {\n    const start = this.tokenStart;\n    const children = this.readSequence(this.scope.Value);\n\n    return {\n        type: 'Value',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nfunction generate(node) {\n    this.children(node);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1ZhbHVlLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvVmFsdWUuY2pzPzBmYzYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBuYW1lID0gJ1ZhbHVlJztcbmNvbnN0IHN0cnVjdHVyZSA9IHtcbiAgICBjaGlsZHJlbjogW1tdXVxufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgY29uc3Qgc3RhcnQgPSB0aGlzLnRva2VuU3RhcnQ7XG4gICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLnJlYWRTZXF1ZW5jZSh0aGlzLnNjb3BlLlZhbHVlKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdWYWx1ZScsXG4gICAgICAgIGxvYzogdGhpcy5nZXRMb2NhdGlvbihzdGFydCwgdGhpcy50b2tlblN0YXJ0KSxcbiAgICAgICAgY2hpbGRyZW5cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZShub2RlKSB7XG4gICAgdGhpcy5jaGlsZHJlbihub2RlKTtcbn1cblxuZXhwb3J0cy5nZW5lcmF0ZSA9IGdlbmVyYXRlO1xuZXhwb3J0cy5uYW1lID0gbmFtZTtcbmV4cG9ydHMucGFyc2UgPSBwYXJzZTtcbmV4cG9ydHMuc3RydWN0dXJlID0gc3RydWN0dXJlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/Value.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/WhiteSpace.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/WhiteSpace.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst SPACE = Object.freeze({\n    type: 'WhiteSpace',\n    loc: null,\n    value: ' '\n});\n\nconst name = 'WhiteSpace';\nconst structure = {\n    value: String\n};\n\nfunction parse() {\n    this.eat(types.WhiteSpace);\n    return SPACE;\n\n    // return {\n    //     type: 'WhiteSpace',\n    //     loc: this.getLocation(this.tokenStart, this.tokenEnd),\n    //     value: this.consume(WHITESPACE)\n    // };\n}\n\nfunction generate(node) {\n    this.token(types.WhiteSpace, node.value);\n}\n\nexports.generate = generate;\nexports.name = name;\nexports.parse = parse;\nexports.structure = structure;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL1doaXRlU3BhY2UuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvbm9kZS9XaGl0ZVNwYWNlLmNqcz84YzcwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvdHlwZXMuY2pzJyk7XG5yZXF1aXJlKCcuLi8uLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBTUEFDRSA9IE9iamVjdC5mcmVlemUoe1xuICAgIHR5cGU6ICdXaGl0ZVNwYWNlJyxcbiAgICBsb2M6IG51bGwsXG4gICAgdmFsdWU6ICcgJ1xufSk7XG5cbmNvbnN0IG5hbWUgPSAnV2hpdGVTcGFjZSc7XG5jb25zdCBzdHJ1Y3R1cmUgPSB7XG4gICAgdmFsdWU6IFN0cmluZ1xufTtcblxuZnVuY3Rpb24gcGFyc2UoKSB7XG4gICAgdGhpcy5lYXQodHlwZXMuV2hpdGVTcGFjZSk7XG4gICAgcmV0dXJuIFNQQUNFO1xuXG4gICAgLy8gcmV0dXJuIHtcbiAgICAvLyAgICAgdHlwZTogJ1doaXRlU3BhY2UnLFxuICAgIC8vICAgICBsb2M6IHRoaXMuZ2V0TG9jYXRpb24odGhpcy50b2tlblN0YXJ0LCB0aGlzLnRva2VuRW5kKSxcbiAgICAvLyAgICAgdmFsdWU6IHRoaXMuY29uc3VtZShXSElURVNQQUNFKVxuICAgIC8vIH07XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKG5vZGUpIHtcbiAgICB0aGlzLnRva2VuKHR5cGVzLldoaXRlU3BhY2UsIG5vZGUudmFsdWUpO1xufVxuXG5leHBvcnRzLmdlbmVyYXRlID0gZ2VuZXJhdGU7XG5leHBvcnRzLm5hbWUgPSBuYW1lO1xuZXhwb3J0cy5wYXJzZSA9IHBhcnNlO1xuZXhwb3J0cy5zdHJ1Y3R1cmUgPSBzdHJ1Y3R1cmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/WhiteSpace.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/node/index.cjs":
/*!*********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/node/index.cjs ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst AnPlusB = __webpack_require__(/*! ./AnPlusB.cjs */ \"./node_modules/css-tree/cjs/syntax/node/AnPlusB.cjs\");\nconst Atrule = __webpack_require__(/*! ./Atrule.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Atrule.cjs\");\nconst AtrulePrelude = __webpack_require__(/*! ./AtrulePrelude.cjs */ \"./node_modules/css-tree/cjs/syntax/node/AtrulePrelude.cjs\");\nconst AttributeSelector = __webpack_require__(/*! ./AttributeSelector.cjs */ \"./node_modules/css-tree/cjs/syntax/node/AttributeSelector.cjs\");\nconst Block = __webpack_require__(/*! ./Block.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Block.cjs\");\nconst Brackets = __webpack_require__(/*! ./Brackets.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Brackets.cjs\");\nconst CDC = __webpack_require__(/*! ./CDC.cjs */ \"./node_modules/css-tree/cjs/syntax/node/CDC.cjs\");\nconst CDO = __webpack_require__(/*! ./CDO.cjs */ \"./node_modules/css-tree/cjs/syntax/node/CDO.cjs\");\nconst ClassSelector = __webpack_require__(/*! ./ClassSelector.cjs */ \"./node_modules/css-tree/cjs/syntax/node/ClassSelector.cjs\");\nconst Combinator = __webpack_require__(/*! ./Combinator.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Combinator.cjs\");\nconst Comment = __webpack_require__(/*! ./Comment.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Comment.cjs\");\nconst Declaration = __webpack_require__(/*! ./Declaration.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Declaration.cjs\");\nconst DeclarationList = __webpack_require__(/*! ./DeclarationList.cjs */ \"./node_modules/css-tree/cjs/syntax/node/DeclarationList.cjs\");\nconst Dimension = __webpack_require__(/*! ./Dimension.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Dimension.cjs\");\nconst _Function = __webpack_require__(/*! ./Function.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Function.cjs\");\nconst Hash = __webpack_require__(/*! ./Hash.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Hash.cjs\");\nconst Identifier = __webpack_require__(/*! ./Identifier.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Identifier.cjs\");\nconst IdSelector = __webpack_require__(/*! ./IdSelector.cjs */ \"./node_modules/css-tree/cjs/syntax/node/IdSelector.cjs\");\nconst MediaFeature = __webpack_require__(/*! ./MediaFeature.cjs */ \"./node_modules/css-tree/cjs/syntax/node/MediaFeature.cjs\");\nconst MediaQuery = __webpack_require__(/*! ./MediaQuery.cjs */ \"./node_modules/css-tree/cjs/syntax/node/MediaQuery.cjs\");\nconst MediaQueryList = __webpack_require__(/*! ./MediaQueryList.cjs */ \"./node_modules/css-tree/cjs/syntax/node/MediaQueryList.cjs\");\nconst Nth = __webpack_require__(/*! ./Nth.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Nth.cjs\");\nconst _Number = __webpack_require__(/*! ./Number.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Number.cjs\");\nconst Operator = __webpack_require__(/*! ./Operator.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Operator.cjs\");\nconst Parentheses = __webpack_require__(/*! ./Parentheses.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Parentheses.cjs\");\nconst Percentage = __webpack_require__(/*! ./Percentage.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Percentage.cjs\");\nconst PseudoClassSelector = __webpack_require__(/*! ./PseudoClassSelector.cjs */ \"./node_modules/css-tree/cjs/syntax/node/PseudoClassSelector.cjs\");\nconst PseudoElementSelector = __webpack_require__(/*! ./PseudoElementSelector.cjs */ \"./node_modules/css-tree/cjs/syntax/node/PseudoElementSelector.cjs\");\nconst Ratio = __webpack_require__(/*! ./Ratio.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Ratio.cjs\");\nconst Raw = __webpack_require__(/*! ./Raw.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Raw.cjs\");\nconst Rule = __webpack_require__(/*! ./Rule.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Rule.cjs\");\nconst Selector = __webpack_require__(/*! ./Selector.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Selector.cjs\");\nconst SelectorList = __webpack_require__(/*! ./SelectorList.cjs */ \"./node_modules/css-tree/cjs/syntax/node/SelectorList.cjs\");\nconst _String = __webpack_require__(/*! ./String.cjs */ \"./node_modules/css-tree/cjs/syntax/node/String.cjs\");\nconst StyleSheet = __webpack_require__(/*! ./StyleSheet.cjs */ \"./node_modules/css-tree/cjs/syntax/node/StyleSheet.cjs\");\nconst TypeSelector = __webpack_require__(/*! ./TypeSelector.cjs */ \"./node_modules/css-tree/cjs/syntax/node/TypeSelector.cjs\");\nconst UnicodeRange = __webpack_require__(/*! ./UnicodeRange.cjs */ \"./node_modules/css-tree/cjs/syntax/node/UnicodeRange.cjs\");\nconst Url = __webpack_require__(/*! ./Url.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Url.cjs\");\nconst Value = __webpack_require__(/*! ./Value.cjs */ \"./node_modules/css-tree/cjs/syntax/node/Value.cjs\");\nconst WhiteSpace = __webpack_require__(/*! ./WhiteSpace.cjs */ \"./node_modules/css-tree/cjs/syntax/node/WhiteSpace.cjs\");\n\n\n\nexports.AnPlusB = AnPlusB;\nexports.Atrule = Atrule;\nexports.AtrulePrelude = AtrulePrelude;\nexports.AttributeSelector = AttributeSelector;\nexports.Block = Block;\nexports.Brackets = Brackets;\nexports.CDC = CDC;\nexports.CDO = CDO;\nexports.ClassSelector = ClassSelector;\nexports.Combinator = Combinator;\nexports.Comment = Comment;\nexports.Declaration = Declaration;\nexports.DeclarationList = DeclarationList;\nexports.Dimension = Dimension;\nexports.Function = _Function;\nexports.Hash = Hash;\nexports.Identifier = Identifier;\nexports.IdSelector = IdSelector;\nexports.MediaFeature = MediaFeature;\nexports.MediaQuery = MediaQuery;\nexports.MediaQueryList = MediaQueryList;\nexports.Nth = Nth;\nexports.Number = _Number;\nexports.Operator = Operator;\nexports.Parentheses = Parentheses;\nexports.Percentage = Percentage;\nexports.PseudoClassSelector = PseudoClassSelector;\nexports.PseudoElementSelector = PseudoElementSelector;\nexports.Ratio = Ratio;\nexports.Raw = Raw;\nexports.Rule = Rule;\nexports.Selector = Selector;\nexports.SelectorList = SelectorList;\nexports.String = _String;\nexports.StyleSheet = StyleSheet;\nexports.TypeSelector = TypeSelector;\nexports.UnicodeRange = UnicodeRange;\nexports.Url = Url;\nexports.Value = Value;\nexports.WhiteSpace = WhiteSpace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9ub2RlL2luZGV4LmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L25vZGUvaW5kZXguY2pzPzMzOTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBBblBsdXNCID0gcmVxdWlyZSgnLi9BblBsdXNCLmNqcycpO1xuY29uc3QgQXRydWxlID0gcmVxdWlyZSgnLi9BdHJ1bGUuY2pzJyk7XG5jb25zdCBBdHJ1bGVQcmVsdWRlID0gcmVxdWlyZSgnLi9BdHJ1bGVQcmVsdWRlLmNqcycpO1xuY29uc3QgQXR0cmlidXRlU2VsZWN0b3IgPSByZXF1aXJlKCcuL0F0dHJpYnV0ZVNlbGVjdG9yLmNqcycpO1xuY29uc3QgQmxvY2sgPSByZXF1aXJlKCcuL0Jsb2NrLmNqcycpO1xuY29uc3QgQnJhY2tldHMgPSByZXF1aXJlKCcuL0JyYWNrZXRzLmNqcycpO1xuY29uc3QgQ0RDID0gcmVxdWlyZSgnLi9DREMuY2pzJyk7XG5jb25zdCBDRE8gPSByZXF1aXJlKCcuL0NETy5janMnKTtcbmNvbnN0IENsYXNzU2VsZWN0b3IgPSByZXF1aXJlKCcuL0NsYXNzU2VsZWN0b3IuY2pzJyk7XG5jb25zdCBDb21iaW5hdG9yID0gcmVxdWlyZSgnLi9Db21iaW5hdG9yLmNqcycpO1xuY29uc3QgQ29tbWVudCA9IHJlcXVpcmUoJy4vQ29tbWVudC5janMnKTtcbmNvbnN0IERlY2xhcmF0aW9uID0gcmVxdWlyZSgnLi9EZWNsYXJhdGlvbi5janMnKTtcbmNvbnN0IERlY2xhcmF0aW9uTGlzdCA9IHJlcXVpcmUoJy4vRGVjbGFyYXRpb25MaXN0LmNqcycpO1xuY29uc3QgRGltZW5zaW9uID0gcmVxdWlyZSgnLi9EaW1lbnNpb24uY2pzJyk7XG5jb25zdCBfRnVuY3Rpb24gPSByZXF1aXJlKCcuL0Z1bmN0aW9uLmNqcycpO1xuY29uc3QgSGFzaCA9IHJlcXVpcmUoJy4vSGFzaC5janMnKTtcbmNvbnN0IElkZW50aWZpZXIgPSByZXF1aXJlKCcuL0lkZW50aWZpZXIuY2pzJyk7XG5jb25zdCBJZFNlbGVjdG9yID0gcmVxdWlyZSgnLi9JZFNlbGVjdG9yLmNqcycpO1xuY29uc3QgTWVkaWFGZWF0dXJlID0gcmVxdWlyZSgnLi9NZWRpYUZlYXR1cmUuY2pzJyk7XG5jb25zdCBNZWRpYVF1ZXJ5ID0gcmVxdWlyZSgnLi9NZWRpYVF1ZXJ5LmNqcycpO1xuY29uc3QgTWVkaWFRdWVyeUxpc3QgPSByZXF1aXJlKCcuL01lZGlhUXVlcnlMaXN0LmNqcycpO1xuY29uc3QgTnRoID0gcmVxdWlyZSgnLi9OdGguY2pzJyk7XG5jb25zdCBfTnVtYmVyID0gcmVxdWlyZSgnLi9OdW1iZXIuY2pzJyk7XG5jb25zdCBPcGVyYXRvciA9IHJlcXVpcmUoJy4vT3BlcmF0b3IuY2pzJyk7XG5jb25zdCBQYXJlbnRoZXNlcyA9IHJlcXVpcmUoJy4vUGFyZW50aGVzZXMuY2pzJyk7XG5jb25zdCBQZXJjZW50YWdlID0gcmVxdWlyZSgnLi9QZXJjZW50YWdlLmNqcycpO1xuY29uc3QgUHNldWRvQ2xhc3NTZWxlY3RvciA9IHJlcXVpcmUoJy4vUHNldWRvQ2xhc3NTZWxlY3Rvci5janMnKTtcbmNvbnN0IFBzZXVkb0VsZW1lbnRTZWxlY3RvciA9IHJlcXVpcmUoJy4vUHNldWRvRWxlbWVudFNlbGVjdG9yLmNqcycpO1xuY29uc3QgUmF0aW8gPSByZXF1aXJlKCcuL1JhdGlvLmNqcycpO1xuY29uc3QgUmF3ID0gcmVxdWlyZSgnLi9SYXcuY2pzJyk7XG5jb25zdCBSdWxlID0gcmVxdWlyZSgnLi9SdWxlLmNqcycpO1xuY29uc3QgU2VsZWN0b3IgPSByZXF1aXJlKCcuL1NlbGVjdG9yLmNqcycpO1xuY29uc3QgU2VsZWN0b3JMaXN0ID0gcmVxdWlyZSgnLi9TZWxlY3Rvckxpc3QuY2pzJyk7XG5jb25zdCBfU3RyaW5nID0gcmVxdWlyZSgnLi9TdHJpbmcuY2pzJyk7XG5jb25zdCBTdHlsZVNoZWV0ID0gcmVxdWlyZSgnLi9TdHlsZVNoZWV0LmNqcycpO1xuY29uc3QgVHlwZVNlbGVjdG9yID0gcmVxdWlyZSgnLi9UeXBlU2VsZWN0b3IuY2pzJyk7XG5jb25zdCBVbmljb2RlUmFuZ2UgPSByZXF1aXJlKCcuL1VuaWNvZGVSYW5nZS5janMnKTtcbmNvbnN0IFVybCA9IHJlcXVpcmUoJy4vVXJsLmNqcycpO1xuY29uc3QgVmFsdWUgPSByZXF1aXJlKCcuL1ZhbHVlLmNqcycpO1xuY29uc3QgV2hpdGVTcGFjZSA9IHJlcXVpcmUoJy4vV2hpdGVTcGFjZS5janMnKTtcblxuXG5cbmV4cG9ydHMuQW5QbHVzQiA9IEFuUGx1c0I7XG5leHBvcnRzLkF0cnVsZSA9IEF0cnVsZTtcbmV4cG9ydHMuQXRydWxlUHJlbHVkZSA9IEF0cnVsZVByZWx1ZGU7XG5leHBvcnRzLkF0dHJpYnV0ZVNlbGVjdG9yID0gQXR0cmlidXRlU2VsZWN0b3I7XG5leHBvcnRzLkJsb2NrID0gQmxvY2s7XG5leHBvcnRzLkJyYWNrZXRzID0gQnJhY2tldHM7XG5leHBvcnRzLkNEQyA9IENEQztcbmV4cG9ydHMuQ0RPID0gQ0RPO1xuZXhwb3J0cy5DbGFzc1NlbGVjdG9yID0gQ2xhc3NTZWxlY3RvcjtcbmV4cG9ydHMuQ29tYmluYXRvciA9IENvbWJpbmF0b3I7XG5leHBvcnRzLkNvbW1lbnQgPSBDb21tZW50O1xuZXhwb3J0cy5EZWNsYXJhdGlvbiA9IERlY2xhcmF0aW9uO1xuZXhwb3J0cy5EZWNsYXJhdGlvbkxpc3QgPSBEZWNsYXJhdGlvbkxpc3Q7XG5leHBvcnRzLkRpbWVuc2lvbiA9IERpbWVuc2lvbjtcbmV4cG9ydHMuRnVuY3Rpb24gPSBfRnVuY3Rpb247XG5leHBvcnRzLkhhc2ggPSBIYXNoO1xuZXhwb3J0cy5JZGVudGlmaWVyID0gSWRlbnRpZmllcjtcbmV4cG9ydHMuSWRTZWxlY3RvciA9IElkU2VsZWN0b3I7XG5leHBvcnRzLk1lZGlhRmVhdHVyZSA9IE1lZGlhRmVhdHVyZTtcbmV4cG9ydHMuTWVkaWFRdWVyeSA9IE1lZGlhUXVlcnk7XG5leHBvcnRzLk1lZGlhUXVlcnlMaXN0ID0gTWVkaWFRdWVyeUxpc3Q7XG5leHBvcnRzLk50aCA9IE50aDtcbmV4cG9ydHMuTnVtYmVyID0gX051bWJlcjtcbmV4cG9ydHMuT3BlcmF0b3IgPSBPcGVyYXRvcjtcbmV4cG9ydHMuUGFyZW50aGVzZXMgPSBQYXJlbnRoZXNlcztcbmV4cG9ydHMuUGVyY2VudGFnZSA9IFBlcmNlbnRhZ2U7XG5leHBvcnRzLlBzZXVkb0NsYXNzU2VsZWN0b3IgPSBQc2V1ZG9DbGFzc1NlbGVjdG9yO1xuZXhwb3J0cy5Qc2V1ZG9FbGVtZW50U2VsZWN0b3IgPSBQc2V1ZG9FbGVtZW50U2VsZWN0b3I7XG5leHBvcnRzLlJhdGlvID0gUmF0aW87XG5leHBvcnRzLlJhdyA9IFJhdztcbmV4cG9ydHMuUnVsZSA9IFJ1bGU7XG5leHBvcnRzLlNlbGVjdG9yID0gU2VsZWN0b3I7XG5leHBvcnRzLlNlbGVjdG9yTGlzdCA9IFNlbGVjdG9yTGlzdDtcbmV4cG9ydHMuU3RyaW5nID0gX1N0cmluZztcbmV4cG9ydHMuU3R5bGVTaGVldCA9IFN0eWxlU2hlZXQ7XG5leHBvcnRzLlR5cGVTZWxlY3RvciA9IFR5cGVTZWxlY3RvcjtcbmV4cG9ydHMuVW5pY29kZVJhbmdlID0gVW5pY29kZVJhbmdlO1xuZXhwb3J0cy5VcmwgPSBVcmw7XG5leHBvcnRzLlZhbHVlID0gVmFsdWU7XG5leHBvcnRzLldoaXRlU3BhY2UgPSBXaGl0ZVNwYWNlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/node/index.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/pseudo/index.cjs":
/*!***********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/pseudo/index.cjs ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst selectorList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.SelectorList()\n        );\n    }\n};\n\nconst selector = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Selector()\n        );\n    }\n};\n\nconst identList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Identifier()\n        );\n    }\n};\n\nconst nth = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Nth()\n        );\n    }\n};\n\nconst pseudo = {\n    'dir': identList,\n    'has': selectorList,\n    'lang': identList,\n    'matches': selectorList,\n    'not': selectorList,\n    'nth-child': nth,\n    'nth-last-child': nth,\n    'nth-last-of-type': nth,\n    'nth-of-type': nth,\n    'slotted': selector\n};\n\nmodule.exports = pseudo;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9wc2V1ZG8vaW5kZXguY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy9zeW50YXgvcHNldWRvL2luZGV4LmNqcz9hYjNiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3Qgc2VsZWN0b3JMaXN0ID0ge1xuICAgIHBhcnNlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGVTaW5nbGVOb2RlTGlzdChcbiAgICAgICAgICAgIHRoaXMuU2VsZWN0b3JMaXN0KClcbiAgICAgICAgKTtcbiAgICB9XG59O1xuXG5jb25zdCBzZWxlY3RvciA9IHtcbiAgICBwYXJzZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlU2luZ2xlTm9kZUxpc3QoXG4gICAgICAgICAgICB0aGlzLlNlbGVjdG9yKClcbiAgICAgICAgKTtcbiAgICB9XG59O1xuXG5jb25zdCBpZGVudExpc3QgPSB7XG4gICAgcGFyc2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVNpbmdsZU5vZGVMaXN0KFxuICAgICAgICAgICAgdGhpcy5JZGVudGlmaWVyKClcbiAgICAgICAgKTtcbiAgICB9XG59O1xuXG5jb25zdCBudGggPSB7XG4gICAgcGFyc2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNyZWF0ZVNpbmdsZU5vZGVMaXN0KFxuICAgICAgICAgICAgdGhpcy5OdGgoKVxuICAgICAgICApO1xuICAgIH1cbn07XG5cbmNvbnN0IHBzZXVkbyA9IHtcbiAgICAnZGlyJzogaWRlbnRMaXN0LFxuICAgICdoYXMnOiBzZWxlY3Rvckxpc3QsXG4gICAgJ2xhbmcnOiBpZGVudExpc3QsXG4gICAgJ21hdGNoZXMnOiBzZWxlY3Rvckxpc3QsXG4gICAgJ25vdCc6IHNlbGVjdG9yTGlzdCxcbiAgICAnbnRoLWNoaWxkJzogbnRoLFxuICAgICdudGgtbGFzdC1jaGlsZCc6IG50aCxcbiAgICAnbnRoLWxhc3Qtb2YtdHlwZSc6IG50aCxcbiAgICAnbnRoLW9mLXR5cGUnOiBudGgsXG4gICAgJ3Nsb3R0ZWQnOiBzZWxlY3RvclxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBwc2V1ZG87XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/pseudo/index.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/scope/atrulePrelude.cjs":
/*!******************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/scope/atrulePrelude.cjs ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst _default = __webpack_require__(/*! ./default.cjs */ \"./node_modules/css-tree/cjs/syntax/scope/default.cjs\");\n\nconst atrulePrelude = {\n    getNode: _default\n};\n\nmodule.exports = atrulePrelude;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9zY29wZS9hdHJ1bGVQcmVsdWRlLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L3Njb3BlL2F0cnVsZVByZWx1ZGUuY2pzPzMzM2QiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBfZGVmYXVsdCA9IHJlcXVpcmUoJy4vZGVmYXVsdC5janMnKTtcblxuY29uc3QgYXRydWxlUHJlbHVkZSA9IHtcbiAgICBnZXROb2RlOiBfZGVmYXVsdFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBhdHJ1bGVQcmVsdWRlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/scope/atrulePrelude.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/scope/default.cjs":
/*!************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/scope/default.cjs ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nconst ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nconst U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nfunction defaultRecognizer(context) {\n    switch (this.tokenType) {\n        case types.Hash:\n            return this.Hash();\n\n        case types.Comma:\n            return this.Operator();\n\n        case types.LeftParenthesis:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case types.LeftSquareBracket:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case types.String:\n            return this.String();\n\n        case types.Dimension:\n            return this.Dimension();\n\n        case types.Percentage:\n            return this.Percentage();\n\n        case types.Number:\n            return this.Number();\n\n        case types.Function:\n            return this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case types.Url:\n            return this.Url();\n\n        case types.Ident:\n            // check for unicode range, it should start with u+ or U+\n            if (this.cmpChar(this.tokenStart, U) &&\n                this.cmpChar(this.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case types.Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.tokenStart + 1);\n            }\n\n            break;\n        }\n    }\n}\n\nmodule.exports = defaultRecognizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9zY29wZS9kZWZhdWx0LmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvc3ludGF4L3Njb3BlL2RlZmF1bHQuY2pzP2M1ODQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB0eXBlcyA9IHJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci90eXBlcy5janMnKTtcbnJlcXVpcmUoJy4uLy4uL3Rva2VuaXplci9jaGFyLWNvZGUtZGVmaW5pdGlvbnMuY2pzJyk7XG5cbmNvbnN0IE5VTUJFUlNJR04gPSAweDAwMjM7ICAvLyBVKzAwMjMgTlVNQkVSIFNJR04gKCMpXG5jb25zdCBBU1RFUklTSyA9IDB4MDAyQTsgICAgLy8gVSswMDJBIEFTVEVSSVNLICgqKVxuY29uc3QgUExVU1NJR04gPSAweDAwMkI7ICAgIC8vIFUrMDAyQiBQTFVTIFNJR04gKCspXG5jb25zdCBIWVBIRU5NSU5VUyA9IDB4MDAyRDsgLy8gVSswMDJEIEhZUEhFTi1NSU5VUyAoLSlcbmNvbnN0IFNPTElEVVMgPSAweDAwMkY7ICAgICAvLyBVKzAwMkYgU09MSURVUyAoLylcbmNvbnN0IFUgPSAweDAwNzU7ICAgICAgICAgICAvLyBVKzAwNzUgTEFUSU4gU01BTEwgTEVUVEVSIFUgKHUpXG5cbmZ1bmN0aW9uIGRlZmF1bHRSZWNvZ25pemVyKGNvbnRleHQpIHtcbiAgICBzd2l0Y2ggKHRoaXMudG9rZW5UeXBlKSB7XG4gICAgICAgIGNhc2UgdHlwZXMuSGFzaDpcbiAgICAgICAgICAgIHJldHVybiB0aGlzLkhhc2goKTtcblxuICAgICAgICBjYXNlIHR5cGVzLkNvbW1hOlxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuT3BlcmF0b3IoKTtcblxuICAgICAgICBjYXNlIHR5cGVzLkxlZnRQYXJlbnRoZXNpczpcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlBhcmVudGhlc2VzKHRoaXMucmVhZFNlcXVlbmNlLCBjb250ZXh0LnJlY29nbml6ZXIpO1xuXG4gICAgICAgIGNhc2UgdHlwZXMuTGVmdFNxdWFyZUJyYWNrZXQ6XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5CcmFja2V0cyh0aGlzLnJlYWRTZXF1ZW5jZSwgY29udGV4dC5yZWNvZ25pemVyKTtcblxuICAgICAgICBjYXNlIHR5cGVzLlN0cmluZzpcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlN0cmluZygpO1xuXG4gICAgICAgIGNhc2UgdHlwZXMuRGltZW5zaW9uOlxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuRGltZW5zaW9uKCk7XG5cbiAgICAgICAgY2FzZSB0eXBlcy5QZXJjZW50YWdlOlxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuUGVyY2VudGFnZSgpO1xuXG4gICAgICAgIGNhc2UgdHlwZXMuTnVtYmVyOlxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuTnVtYmVyKCk7XG5cbiAgICAgICAgY2FzZSB0eXBlcy5GdW5jdGlvbjpcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNtcFN0cih0aGlzLnRva2VuU3RhcnQsIHRoaXMudG9rZW5FbmQsICd1cmwoJylcbiAgICAgICAgICAgICAgICA/IHRoaXMuVXJsKClcbiAgICAgICAgICAgICAgICA6IHRoaXMuRnVuY3Rpb24odGhpcy5yZWFkU2VxdWVuY2UsIGNvbnRleHQucmVjb2duaXplcik7XG5cbiAgICAgICAgY2FzZSB0eXBlcy5Vcmw6XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5VcmwoKTtcblxuICAgICAgICBjYXNlIHR5cGVzLklkZW50OlxuICAgICAgICAgICAgLy8gY2hlY2sgZm9yIHVuaWNvZGUgcmFuZ2UsIGl0IHNob3VsZCBzdGFydCB3aXRoIHUrIG9yIFUrXG4gICAgICAgICAgICBpZiAodGhpcy5jbXBDaGFyKHRoaXMudG9rZW5TdGFydCwgVSkgJiZcbiAgICAgICAgICAgICAgICB0aGlzLmNtcENoYXIodGhpcy50b2tlblN0YXJ0ICsgMSwgUExVU1NJR04pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuVW5pY29kZVJhbmdlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLklkZW50aWZpZXIoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICBjYXNlIHR5cGVzLkRlbGltOiB7XG4gICAgICAgICAgICBjb25zdCBjb2RlID0gdGhpcy5jaGFyQ29kZUF0KHRoaXMudG9rZW5TdGFydCk7XG5cbiAgICAgICAgICAgIGlmIChjb2RlID09PSBTT0xJRFVTIHx8XG4gICAgICAgICAgICAgICAgY29kZSA9PT0gQVNURVJJU0sgfHxcbiAgICAgICAgICAgICAgICBjb2RlID09PSBQTFVTU0lHTiB8fFxuICAgICAgICAgICAgICAgIGNvZGUgPT09IEhZUEhFTk1JTlVTKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuT3BlcmF0b3IoKTsgLy8gVE9ETzogcmVwbGFjZSB3aXRoIERlbGltXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFRPRE86IHByb2R1Y2UgYSBub2RlIHdpdGggRGVsaW0gbm9kZSB0eXBlXG5cbiAgICAgICAgICAgIGlmIChjb2RlID09PSBOVU1CRVJTSUdOKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lcnJvcignSGV4IG9yIGlkZW50aWZpZXIgaXMgZXhwZWN0ZWQnLCB0aGlzLnRva2VuU3RhcnQgKyAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdFJlY29nbml6ZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/scope/default.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/scope/index.cjs":
/*!**********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/scope/index.cjs ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst atrulePrelude = __webpack_require__(/*! ./atrulePrelude.cjs */ \"./node_modules/css-tree/cjs/syntax/scope/atrulePrelude.cjs\");\nconst selector = __webpack_require__(/*! ./selector.cjs */ \"./node_modules/css-tree/cjs/syntax/scope/selector.cjs\");\nconst value = __webpack_require__(/*! ./value.cjs */ \"./node_modules/css-tree/cjs/syntax/scope/value.cjs\");\n\n\n\nexports.AtrulePrelude = atrulePrelude;\nexports.Selector = selector;\nexports.Value = value;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9zY29wZS9pbmRleC5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9zY29wZS9pbmRleC5janM/NTEwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGF0cnVsZVByZWx1ZGUgPSByZXF1aXJlKCcuL2F0cnVsZVByZWx1ZGUuY2pzJyk7XG5jb25zdCBzZWxlY3RvciA9IHJlcXVpcmUoJy4vc2VsZWN0b3IuY2pzJyk7XG5jb25zdCB2YWx1ZSA9IHJlcXVpcmUoJy4vdmFsdWUuY2pzJyk7XG5cblxuXG5leHBvcnRzLkF0cnVsZVByZWx1ZGUgPSBhdHJ1bGVQcmVsdWRlO1xuZXhwb3J0cy5TZWxlY3RvciA9IHNlbGVjdG9yO1xuZXhwb3J0cy5WYWx1ZSA9IHZhbHVlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/scope/index.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/scope/selector.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/scope/selector.cjs ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ../../tokenizer/types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n__webpack_require__(/*! ../../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nfunction onWhiteSpace(next, children) {\n    if (children.last !== null && children.last.type !== 'Combinator' &&\n        next !== null && next.type !== 'Combinator') {\n        children.push({  // FIXME: this.Combinator() should be used instead\n            type: 'Combinator',\n            loc: null,\n            name: ' '\n        });\n    }\n}\n\nfunction getNode() {\n    switch (this.tokenType) {\n        case types.LeftSquareBracket:\n            return this.AttributeSelector();\n\n        case types.Hash:\n            return this.IdSelector();\n\n        case types.Colon:\n            if (this.lookupType(1) === types.Colon) {\n                return this.PseudoElementSelector();\n            } else {\n                return this.PseudoClassSelector();\n            }\n\n        case types.Ident:\n            return this.TypeSelector();\n\n        case types.Number:\n        case types.Percentage:\n            return this.Percentage();\n\n        case types.Dimension:\n            // throws when .123ident\n            if (this.charCodeAt(this.tokenStart) === FULLSTOP) {\n                this.error('Identifier is expected', this.tokenStart + 1);\n            }\n            break;\n\n        case types.Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            switch (code) {\n                case PLUSSIGN:\n                case GREATERTHANSIGN:\n                case TILDE:\n                case SOLIDUS:  // /deep/\n                    return this.Combinator();\n\n                case FULLSTOP:\n                    return this.ClassSelector();\n\n                case ASTERISK:\n                case VERTICALLINE:\n                    return this.TypeSelector();\n\n                case NUMBERSIGN:\n                    return this.IdSelector();\n            }\n\n            break;\n        }\n    }\n}\nconst selector = {\n    onWhiteSpace,\n    getNode\n};\n\nmodule.exports = selector;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9zY29wZS9zZWxlY3Rvci5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9zY29wZS9zZWxlY3Rvci5janM/YzA5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHR5cGVzID0gcmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL3R5cGVzLmNqcycpO1xucmVxdWlyZSgnLi4vLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcblxuY29uc3QgTlVNQkVSU0lHTiA9IDB4MDAyMzsgICAgICAvLyBVKzAwMjMgTlVNQkVSIFNJR04gKCMpXG5jb25zdCBBU1RFUklTSyA9IDB4MDAyQTsgICAgICAgIC8vIFUrMDAyQSBBU1RFUklTSyAoKilcbmNvbnN0IFBMVVNTSUdOID0gMHgwMDJCOyAgICAgICAgLy8gVSswMDJCIFBMVVMgU0lHTiAoKylcbmNvbnN0IFNPTElEVVMgPSAweDAwMkY7ICAgICAgICAgLy8gVSswMDJGIFNPTElEVVMgKC8pXG5jb25zdCBGVUxMU1RPUCA9IDB4MDAyRTsgICAgICAgIC8vIFUrMDAyRSBGVUxMIFNUT1AgKC4pXG5jb25zdCBHUkVBVEVSVEhBTlNJR04gPSAweDAwM0U7IC8vIFUrMDAzRSBHUkVBVEVSLVRIQU4gU0lHTiAoPilcbmNvbnN0IFZFUlRJQ0FMTElORSA9IDB4MDA3QzsgICAgLy8gVSswMDdDIFZFUlRJQ0FMIExJTkUgKHwpXG5jb25zdCBUSUxERSA9IDB4MDA3RTsgICAgICAgICAgIC8vIFUrMDA3RSBUSUxERSAofilcblxuZnVuY3Rpb24gb25XaGl0ZVNwYWNlKG5leHQsIGNoaWxkcmVuKSB7XG4gICAgaWYgKGNoaWxkcmVuLmxhc3QgIT09IG51bGwgJiYgY2hpbGRyZW4ubGFzdC50eXBlICE9PSAnQ29tYmluYXRvcicgJiZcbiAgICAgICAgbmV4dCAhPT0gbnVsbCAmJiBuZXh0LnR5cGUgIT09ICdDb21iaW5hdG9yJykge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKHsgIC8vIEZJWE1FOiB0aGlzLkNvbWJpbmF0b3IoKSBzaG91bGQgYmUgdXNlZCBpbnN0ZWFkXG4gICAgICAgICAgICB0eXBlOiAnQ29tYmluYXRvcicsXG4gICAgICAgICAgICBsb2M6IG51bGwsXG4gICAgICAgICAgICBuYW1lOiAnICdcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXROb2RlKCkge1xuICAgIHN3aXRjaCAodGhpcy50b2tlblR5cGUpIHtcbiAgICAgICAgY2FzZSB0eXBlcy5MZWZ0U3F1YXJlQnJhY2tldDpcbiAgICAgICAgICAgIHJldHVybiB0aGlzLkF0dHJpYnV0ZVNlbGVjdG9yKCk7XG5cbiAgICAgICAgY2FzZSB0eXBlcy5IYXNoOlxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuSWRTZWxlY3RvcigpO1xuXG4gICAgICAgIGNhc2UgdHlwZXMuQ29sb246XG4gICAgICAgICAgICBpZiAodGhpcy5sb29rdXBUeXBlKDEpID09PSB0eXBlcy5Db2xvbikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLlBzZXVkb0VsZW1lbnRTZWxlY3RvcigpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5Qc2V1ZG9DbGFzc1NlbGVjdG9yKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgY2FzZSB0eXBlcy5JZGVudDpcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlR5cGVTZWxlY3RvcigpO1xuXG4gICAgICAgIGNhc2UgdHlwZXMuTnVtYmVyOlxuICAgICAgICBjYXNlIHR5cGVzLlBlcmNlbnRhZ2U6XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5QZXJjZW50YWdlKCk7XG5cbiAgICAgICAgY2FzZSB0eXBlcy5EaW1lbnNpb246XG4gICAgICAgICAgICAvLyB0aHJvd3Mgd2hlbiAuMTIzaWRlbnRcbiAgICAgICAgICAgIGlmICh0aGlzLmNoYXJDb2RlQXQodGhpcy50b2tlblN0YXJ0KSA9PT0gRlVMTFNUT1ApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVycm9yKCdJZGVudGlmaWVyIGlzIGV4cGVjdGVkJywgdGhpcy50b2tlblN0YXJ0ICsgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIHR5cGVzLkRlbGltOiB7XG4gICAgICAgICAgICBjb25zdCBjb2RlID0gdGhpcy5jaGFyQ29kZUF0KHRoaXMudG9rZW5TdGFydCk7XG5cbiAgICAgICAgICAgIHN3aXRjaCAoY29kZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgUExVU1NJR046XG4gICAgICAgICAgICAgICAgY2FzZSBHUkVBVEVSVEhBTlNJR046XG4gICAgICAgICAgICAgICAgY2FzZSBUSUxERTpcbiAgICAgICAgICAgICAgICBjYXNlIFNPTElEVVM6ICAvLyAvZGVlcC9cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuQ29tYmluYXRvcigpO1xuXG4gICAgICAgICAgICAgICAgY2FzZSBGVUxMU1RPUDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuQ2xhc3NTZWxlY3RvcigpO1xuXG4gICAgICAgICAgICAgICAgY2FzZSBBU1RFUklTSzpcbiAgICAgICAgICAgICAgICBjYXNlIFZFUlRJQ0FMTElORTpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuVHlwZVNlbGVjdG9yKCk7XG5cbiAgICAgICAgICAgICAgICBjYXNlIE5VTUJFUlNJR046XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLklkU2VsZWN0b3IoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59XG5jb25zdCBzZWxlY3RvciA9IHtcbiAgICBvbldoaXRlU3BhY2UsXG4gICAgZ2V0Tm9kZVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBzZWxlY3RvcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/scope/selector.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/syntax/scope/value.cjs":
/*!**********************************************************!*\
  !*** ./node_modules/css-tree/cjs/syntax/scope/value.cjs ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst _default = __webpack_require__(/*! ./default.cjs */ \"./node_modules/css-tree/cjs/syntax/scope/default.cjs\");\nconst expression = __webpack_require__(/*! ../function/expression.cjs */ \"./node_modules/css-tree/cjs/syntax/function/expression.cjs\");\nconst _var = __webpack_require__(/*! ../function/var.cjs */ \"./node_modules/css-tree/cjs/syntax/function/var.cjs\");\n\nfunction isPlusMinusOperator(node) {\n    return (\n        node !== null &&\n        node.type === 'Operator' &&\n        (node.value[node.value.length - 1] === '-' || node.value[node.value.length - 1] === '+')\n    );\n}\n\nconst value = {\n    getNode: _default,\n    onWhiteSpace: function(next, children) {\n        if (isPlusMinusOperator(next)) {\n            next.value = ' ' + next.value;\n        }\n        if (isPlusMinusOperator(children.last)) {\n            children.last.value += ' ';\n        }\n    },\n    'expression': expression,\n    'var': _var\n};\n\nmodule.exports = value;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9zY29wZS92YWx1ZS5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3N5bnRheC9zY29wZS92YWx1ZS5janM/MDg5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IF9kZWZhdWx0ID0gcmVxdWlyZSgnLi9kZWZhdWx0LmNqcycpO1xuY29uc3QgZXhwcmVzc2lvbiA9IHJlcXVpcmUoJy4uL2Z1bmN0aW9uL2V4cHJlc3Npb24uY2pzJyk7XG5jb25zdCBfdmFyID0gcmVxdWlyZSgnLi4vZnVuY3Rpb24vdmFyLmNqcycpO1xuXG5mdW5jdGlvbiBpc1BsdXNNaW51c09wZXJhdG9yKG5vZGUpIHtcbiAgICByZXR1cm4gKFxuICAgICAgICBub2RlICE9PSBudWxsICYmXG4gICAgICAgIG5vZGUudHlwZSA9PT0gJ09wZXJhdG9yJyAmJlxuICAgICAgICAobm9kZS52YWx1ZVtub2RlLnZhbHVlLmxlbmd0aCAtIDFdID09PSAnLScgfHwgbm9kZS52YWx1ZVtub2RlLnZhbHVlLmxlbmd0aCAtIDFdID09PSAnKycpXG4gICAgKTtcbn1cblxuY29uc3QgdmFsdWUgPSB7XG4gICAgZ2V0Tm9kZTogX2RlZmF1bHQsXG4gICAgb25XaGl0ZVNwYWNlOiBmdW5jdGlvbihuZXh0LCBjaGlsZHJlbikge1xuICAgICAgICBpZiAoaXNQbHVzTWludXNPcGVyYXRvcihuZXh0KSkge1xuICAgICAgICAgICAgbmV4dC52YWx1ZSA9ICcgJyArIG5leHQudmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzUGx1c01pbnVzT3BlcmF0b3IoY2hpbGRyZW4ubGFzdCkpIHtcbiAgICAgICAgICAgIGNoaWxkcmVuLmxhc3QudmFsdWUgKz0gJyAnO1xuICAgICAgICB9XG4gICAgfSxcbiAgICAnZXhwcmVzc2lvbic6IGV4cHJlc3Npb24sXG4gICAgJ3Zhcic6IF92YXJcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gdmFsdWU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/syntax/scope/value.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/tokenizer/OffsetToLocation.cjs":
/*!******************************************************************!*\
  !*** ./node_modules/css-tree/cjs/tokenizer/OffsetToLocation.cjs ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst adoptBuffer = __webpack_require__(/*! ./adopt-buffer.cjs */ \"./node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs\");\nconst charCodeDefinitions = __webpack_require__(/*! ./char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nconst N = 10;\nconst F = 12;\nconst R = 13;\n\nfunction computeLinesAndColumns(host) {\n    const source = host.source;\n    const sourceLength = source.length;\n    const startOffset = source.length > 0 ? charCodeDefinitions.isBOM(source.charCodeAt(0)) : 0;\n    const lines = adoptBuffer.adoptBuffer(host.lines, sourceLength);\n    const columns = adoptBuffer.adoptBuffer(host.columns, sourceLength);\n    let line = host.startLine;\n    let column = host.startColumn;\n\n    for (let i = startOffset; i < sourceLength; i++) {\n        const code = source.charCodeAt(i);\n\n        lines[i] = line;\n        columns[i] = column++;\n\n        if (code === N || code === R || code === F) {\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\n                i++;\n                lines[i] = line;\n                columns[i] = column;\n            }\n\n            line++;\n            column = 1;\n        }\n    }\n\n    lines[sourceLength] = line;\n    columns[sourceLength] = column;\n\n    host.lines = lines;\n    host.columns = columns;\n    host.computed = true;\n}\n\nclass OffsetToLocation {\n    constructor() {\n        this.lines = null;\n        this.columns = null;\n        this.computed = false;\n    }\n    setSource(source, startOffset = 0, startLine = 1, startColumn = 1) {\n        this.source = source;\n        this.startOffset = startOffset;\n        this.startLine = startLine;\n        this.startColumn = startColumn;\n        this.computed = false;\n    }\n    getLocation(offset, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            offset: this.startOffset + offset,\n            line: this.lines[offset],\n            column: this.columns[offset]\n        };\n    }\n    getLocationRange(start, end, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            start: {\n                offset: this.startOffset + start,\n                line: this.lines[start],\n                column: this.columns[start]\n            },\n            end: {\n                offset: this.startOffset + end,\n                line: this.lines[end],\n                column: this.columns[end]\n            }\n        };\n    }\n}\n\nexports.OffsetToLocation = OffsetToLocation;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3Rva2VuaXplci9PZmZzZXRUb0xvY2F0aW9uLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvdG9rZW5pemVyL09mZnNldFRvTG9jYXRpb24uY2pzP2VjODciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBhZG9wdEJ1ZmZlciA9IHJlcXVpcmUoJy4vYWRvcHQtYnVmZmVyLmNqcycpO1xuY29uc3QgY2hhckNvZGVEZWZpbml0aW9ucyA9IHJlcXVpcmUoJy4vY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuXG5jb25zdCBOID0gMTA7XG5jb25zdCBGID0gMTI7XG5jb25zdCBSID0gMTM7XG5cbmZ1bmN0aW9uIGNvbXB1dGVMaW5lc0FuZENvbHVtbnMoaG9zdCkge1xuICAgIGNvbnN0IHNvdXJjZSA9IGhvc3Quc291cmNlO1xuICAgIGNvbnN0IHNvdXJjZUxlbmd0aCA9IHNvdXJjZS5sZW5ndGg7XG4gICAgY29uc3Qgc3RhcnRPZmZzZXQgPSBzb3VyY2UubGVuZ3RoID4gMCA/IGNoYXJDb2RlRGVmaW5pdGlvbnMuaXNCT00oc291cmNlLmNoYXJDb2RlQXQoMCkpIDogMDtcbiAgICBjb25zdCBsaW5lcyA9IGFkb3B0QnVmZmVyLmFkb3B0QnVmZmVyKGhvc3QubGluZXMsIHNvdXJjZUxlbmd0aCk7XG4gICAgY29uc3QgY29sdW1ucyA9IGFkb3B0QnVmZmVyLmFkb3B0QnVmZmVyKGhvc3QuY29sdW1ucywgc291cmNlTGVuZ3RoKTtcbiAgICBsZXQgbGluZSA9IGhvc3Quc3RhcnRMaW5lO1xuICAgIGxldCBjb2x1bW4gPSBob3N0LnN0YXJ0Q29sdW1uO1xuXG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0T2Zmc2V0OyBpIDwgc291cmNlTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY29kZSA9IHNvdXJjZS5jaGFyQ29kZUF0KGkpO1xuXG4gICAgICAgIGxpbmVzW2ldID0gbGluZTtcbiAgICAgICAgY29sdW1uc1tpXSA9IGNvbHVtbisrO1xuXG4gICAgICAgIGlmIChjb2RlID09PSBOIHx8IGNvZGUgPT09IFIgfHwgY29kZSA9PT0gRikge1xuICAgICAgICAgICAgaWYgKGNvZGUgPT09IFIgJiYgaSArIDEgPCBzb3VyY2VMZW5ndGggJiYgc291cmNlLmNoYXJDb2RlQXQoaSArIDEpID09PSBOKSB7XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIGxpbmVzW2ldID0gbGluZTtcbiAgICAgICAgICAgICAgICBjb2x1bW5zW2ldID0gY29sdW1uO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsaW5lKys7XG4gICAgICAgICAgICBjb2x1bW4gPSAxO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbGluZXNbc291cmNlTGVuZ3RoXSA9IGxpbmU7XG4gICAgY29sdW1uc1tzb3VyY2VMZW5ndGhdID0gY29sdW1uO1xuXG4gICAgaG9zdC5saW5lcyA9IGxpbmVzO1xuICAgIGhvc3QuY29sdW1ucyA9IGNvbHVtbnM7XG4gICAgaG9zdC5jb21wdXRlZCA9IHRydWU7XG59XG5cbmNsYXNzIE9mZnNldFRvTG9jYXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmxpbmVzID0gbnVsbDtcbiAgICAgICAgdGhpcy5jb2x1bW5zID0gbnVsbDtcbiAgICAgICAgdGhpcy5jb21wdXRlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBzZXRTb3VyY2Uoc291cmNlLCBzdGFydE9mZnNldCA9IDAsIHN0YXJ0TGluZSA9IDEsIHN0YXJ0Q29sdW1uID0gMSkge1xuICAgICAgICB0aGlzLnNvdXJjZSA9IHNvdXJjZTtcbiAgICAgICAgdGhpcy5zdGFydE9mZnNldCA9IHN0YXJ0T2Zmc2V0O1xuICAgICAgICB0aGlzLnN0YXJ0TGluZSA9IHN0YXJ0TGluZTtcbiAgICAgICAgdGhpcy5zdGFydENvbHVtbiA9IHN0YXJ0Q29sdW1uO1xuICAgICAgICB0aGlzLmNvbXB1dGVkID0gZmFsc2U7XG4gICAgfVxuICAgIGdldExvY2F0aW9uKG9mZnNldCwgZmlsZW5hbWUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNvbXB1dGVkKSB7XG4gICAgICAgICAgICBjb21wdXRlTGluZXNBbmRDb2x1bW5zKHRoaXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNvdXJjZTogZmlsZW5hbWUsXG4gICAgICAgICAgICBvZmZzZXQ6IHRoaXMuc3RhcnRPZmZzZXQgKyBvZmZzZXQsXG4gICAgICAgICAgICBsaW5lOiB0aGlzLmxpbmVzW29mZnNldF0sXG4gICAgICAgICAgICBjb2x1bW46IHRoaXMuY29sdW1uc1tvZmZzZXRdXG4gICAgICAgIH07XG4gICAgfVxuICAgIGdldExvY2F0aW9uUmFuZ2Uoc3RhcnQsIGVuZCwgZmlsZW5hbWUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNvbXB1dGVkKSB7XG4gICAgICAgICAgICBjb21wdXRlTGluZXNBbmRDb2x1bW5zKHRoaXMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNvdXJjZTogZmlsZW5hbWUsXG4gICAgICAgICAgICBzdGFydDoge1xuICAgICAgICAgICAgICAgIG9mZnNldDogdGhpcy5zdGFydE9mZnNldCArIHN0YXJ0LFxuICAgICAgICAgICAgICAgIGxpbmU6IHRoaXMubGluZXNbc3RhcnRdLFxuICAgICAgICAgICAgICAgIGNvbHVtbjogdGhpcy5jb2x1bW5zW3N0YXJ0XVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVuZDoge1xuICAgICAgICAgICAgICAgIG9mZnNldDogdGhpcy5zdGFydE9mZnNldCArIGVuZCxcbiAgICAgICAgICAgICAgICBsaW5lOiB0aGlzLmxpbmVzW2VuZF0sXG4gICAgICAgICAgICAgICAgY29sdW1uOiB0aGlzLmNvbHVtbnNbZW5kXVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbn1cblxuZXhwb3J0cy5PZmZzZXRUb0xvY2F0aW9uID0gT2Zmc2V0VG9Mb2NhdGlvbjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/tokenizer/OffsetToLocation.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/tokenizer/TokenStream.cjs":
/*!*************************************************************!*\
  !*** ./node_modules/css-tree/cjs/tokenizer/TokenStream.cjs ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst adoptBuffer = __webpack_require__(/*! ./adopt-buffer.cjs */ \"./node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs\");\nconst utils = __webpack_require__(/*! ./utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\nconst names = __webpack_require__(/*! ./names.cjs */ \"./node_modules/css-tree/cjs/tokenizer/names.cjs\");\nconst types = __webpack_require__(/*! ./types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\n\nconst OFFSET_MASK = 0x00FFFFFF;\nconst TYPE_SHIFT = 24;\nconst balancePair = new Map([\n    [types.Function, types.RightParenthesis],\n    [types.LeftParenthesis, types.RightParenthesis],\n    [types.LeftSquareBracket, types.RightSquareBracket],\n    [types.LeftCurlyBracket, types.RightCurlyBracket]\n]);\n\nclass TokenStream {\n    constructor(source, tokenize) {\n        this.setSource(source, tokenize);\n    }\n    reset() {\n        this.eof = false;\n        this.tokenIndex = -1;\n        this.tokenType = 0;\n        this.tokenStart = this.firstCharOffset;\n        this.tokenEnd = this.firstCharOffset;\n    }\n    setSource(source = '', tokenize = () => {}) {\n        source = String(source || '');\n\n        const sourceLength = source.length;\n        const offsetAndType = adoptBuffer.adoptBuffer(this.offsetAndType, source.length + 1); // +1 because of eof-token\n        const balance = adoptBuffer.adoptBuffer(this.balance, source.length + 1);\n        let tokenCount = 0;\n        let balanceCloseType = 0;\n        let balanceStart = 0;\n        let firstCharOffset = -1;\n\n        // capture buffers\n        this.offsetAndType = null;\n        this.balance = null;\n\n        tokenize(source, (type, start, end) => {\n            switch (type) {\n                default:\n                    balance[tokenCount] = sourceLength;\n                    break;\n\n                case balanceCloseType: {\n                    let balancePrev = balanceStart & OFFSET_MASK;\n                    balanceStart = balance[balancePrev];\n                    balanceCloseType = balanceStart >> TYPE_SHIFT;\n                    balance[tokenCount] = balancePrev;\n                    balance[balancePrev++] = tokenCount;\n                    for (; balancePrev < tokenCount; balancePrev++) {\n                        if (balance[balancePrev] === sourceLength) {\n                            balance[balancePrev] = tokenCount;\n                        }\n                    }\n                    break;\n                }\n\n                case types.LeftParenthesis:\n                case types.Function:\n                case types.LeftSquareBracket:\n                case types.LeftCurlyBracket:\n                    balance[tokenCount] = balanceStart;\n                    balanceCloseType = balancePair.get(type);\n                    balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\n                    break;\n            }\n\n            offsetAndType[tokenCount++] = (type << TYPE_SHIFT) | end;\n            if (firstCharOffset === -1) {\n                firstCharOffset = start;\n            }\n        });\n\n        // finalize buffers\n        offsetAndType[tokenCount] = (types.EOF << TYPE_SHIFT) | sourceLength; // <EOF-token>\n        balance[tokenCount] = sourceLength;\n        balance[sourceLength] = sourceLength; // prevents false positive balance match with any token\n        while (balanceStart !== 0) {\n            const balancePrev = balanceStart & OFFSET_MASK;\n            balanceStart = balance[balancePrev];\n            balance[balancePrev] = sourceLength;\n        }\n\n        this.source = source;\n        this.firstCharOffset = firstCharOffset === -1 ? 0 : firstCharOffset;\n        this.tokenCount = tokenCount;\n        this.offsetAndType = offsetAndType;\n        this.balance = balance;\n\n        this.reset();\n        this.next();\n    }\n\n    lookupType(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\n        }\n\n        return types.EOF;\n    }\n    lookupOffset(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\n        }\n\n        return this.source.length;\n    }\n    lookupValue(offset, referenceStr) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return utils.cmpStr(\n                this.source,\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\n                this.offsetAndType[offset] & OFFSET_MASK,\n                referenceStr\n            );\n        }\n\n        return false;\n    }\n    getTokenStart(tokenIndex) {\n        if (tokenIndex === this.tokenIndex) {\n            return this.tokenStart;\n        }\n\n        if (tokenIndex > 0) {\n            return tokenIndex < this.tokenCount\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\n        }\n\n        return this.firstCharOffset;\n    }\n    substrToCursor(start) {\n        return this.source.substring(start, this.tokenStart);\n    }\n\n    isBalanceEdge(pos) {\n        return this.balance[this.tokenIndex] < pos;\n    }\n    isDelim(code, offset) {\n        if (offset) {\n            return (\n                this.lookupType(offset) === types.Delim &&\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\n            );\n        }\n\n        return (\n            this.tokenType === types.Delim &&\n            this.source.charCodeAt(this.tokenStart) === code\n        );\n    }\n\n    skip(tokenCount) {\n        let next = this.tokenIndex + tokenCount;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.tokenIndex = this.tokenCount;\n            this.next();\n        }\n    }\n    next() {\n        let next = this.tokenIndex + 1;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.tokenEnd;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.eof = true;\n            this.tokenIndex = this.tokenCount;\n            this.tokenType = types.EOF;\n            this.tokenStart = this.tokenEnd = this.source.length;\n        }\n    }\n    skipSC() {\n        while (this.tokenType === types.WhiteSpace || this.tokenType === types.Comment) {\n            this.next();\n        }\n    }\n    skipUntilBalanced(startToken, stopConsume) {\n        let cursor = startToken;\n        let balanceEnd;\n        let offset;\n\n        loop:\n        for (; cursor < this.tokenCount; cursor++) {\n            balanceEnd = this.balance[cursor];\n\n            // stop scanning on balance edge that points to offset before start token\n            if (balanceEnd < startToken) {\n                break loop;\n            }\n\n            offset = cursor > 0 ? this.offsetAndType[cursor - 1] & OFFSET_MASK : this.firstCharOffset;\n\n            // check stop condition\n            switch (stopConsume(this.source.charCodeAt(offset))) {\n                case 1: // just stop\n                    break loop;\n\n                case 2: // stop & included\n                    cursor++;\n                    break loop;\n\n                default:\n                    // fast forward to the end of balanced block\n                    if (this.balance[balanceEnd] === cursor) {\n                        cursor = balanceEnd;\n                    }\n            }\n        }\n\n        this.skip(cursor - this.tokenIndex);\n    }\n\n    forEachToken(fn) {\n        for (let i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {\n            const start = offset;\n            const item = this.offsetAndType[i];\n            const end = item & OFFSET_MASK;\n            const type = item >> TYPE_SHIFT;\n\n            offset = end;\n\n            fn(type, start, end, i);\n        }\n    }\n    dump() {\n        const tokens = new Array(this.tokenCount);\n\n        this.forEachToken((type, start, end, index) => {\n            tokens[index] = {\n                idx: index,\n                type: names[type],\n                chunk: this.source.substring(start, end),\n                balance: this.balance[index]\n            };\n        });\n\n        return tokens;\n    }\n}\n\nexports.TokenStream = TokenStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/tokenizer/TokenStream.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs":
/*!**************************************************************!*\
  !*** ./node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst MIN_SIZE = 16 * 1024;\n\nfunction adoptBuffer(buffer = null, size) {\n    if (buffer === null || buffer.length < size) {\n        return new Uint32Array(Math.max(size + 1024, MIN_SIZE));\n    }\n\n    return buffer;\n}\n\nexports.adoptBuffer = adoptBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3Rva2VuaXplci9hZG9wdC1idWZmZXIuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy90b2tlbml6ZXIvYWRvcHQtYnVmZmVyLmNqcz8wNzEzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTUlOX1NJWkUgPSAxNiAqIDEwMjQ7XG5cbmZ1bmN0aW9uIGFkb3B0QnVmZmVyKGJ1ZmZlciA9IG51bGwsIHNpemUpIHtcbiAgICBpZiAoYnVmZmVyID09PSBudWxsIHx8IGJ1ZmZlci5sZW5ndGggPCBzaXplKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDMyQXJyYXkoTWF0aC5tYXgoc2l6ZSArIDEwMjQsIE1JTl9TSVpFKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1ZmZlcjtcbn1cblxuZXhwb3J0cy5hZG9wdEJ1ZmZlciA9IGFkb3B0QnVmZmVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs":
/*!***********************************************************************!*\
  !*** ./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst EOF = 0;\n\n// https://drafts.csswg.org/css-syntax-3/\n// § 4.2. Definitions\n\n// digit\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\nfunction isDigit(code) {\n    return code >= 0x0030 && code <= 0x0039;\n}\n\n// hex digit\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\nfunction isHexDigit(code) {\n    return (\n        isDigit(code) || // 0 .. 9\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\n    );\n}\n\n// uppercase letter\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\nfunction isUppercaseLetter(code) {\n    return code >= 0x0041 && code <= 0x005A;\n}\n\n// lowercase letter\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\nfunction isLowercaseLetter(code) {\n    return code >= 0x0061 && code <= 0x007A;\n}\n\n// letter\n// An uppercase letter or a lowercase letter.\nfunction isLetter(code) {\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\n}\n\n// non-ASCII code point\n// A code point with a value equal to or greater than U+0080 <control>.\nfunction isNonAscii(code) {\n    return code >= 0x0080;\n}\n\n// name-start code point\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\nfunction isNameStart(code) {\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\n}\n\n// name code point\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\nfunction isName(code) {\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\n}\n\n// non-printable code point\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\nfunction isNonPrintable(code) {\n    return (\n        (code >= 0x0000 && code <= 0x0008) ||\n        (code === 0x000B) ||\n        (code >= 0x000E && code <= 0x001F) ||\n        (code === 0x007F)\n    );\n}\n\n// newline\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\n// as they are converted to U+000A LINE FEED during preprocessing.\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\nfunction isNewline(code) {\n    return code === 0x000A || code === 0x000D || code === 0x000C;\n}\n\n// whitespace\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\nfunction isWhiteSpace(code) {\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\n}\n\n// § 4.3.8. Check if two code points are a valid escape\nfunction isValidEscape(first, second) {\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\n    if (first !== 0x005C) {\n        return false;\n    }\n\n    // Otherwise, if the second code point is a newline or EOF, return false.\n    if (isNewline(second) || second === EOF) {\n        return false;\n    }\n\n    // Otherwise, return true.\n    return true;\n}\n\n// § 4.3.9. Check if three code points would start an identifier\nfunction isIdentifierStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002D HYPHEN-MINUS\n    if (first === 0x002D) {\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\n        return (\n            isNameStart(second) ||\n            second === 0x002D ||\n            isValidEscape(second, third)\n        );\n    }\n\n    // name-start code point\n    if (isNameStart(first)) {\n        // Return true.\n        return true;\n    }\n\n    // U+005C REVERSE SOLIDUS (\\)\n    if (first === 0x005C) {\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\n        return isValidEscape(first, second);\n    }\n\n    // anything else\n    // Return false.\n    return false;\n}\n\n// § 4.3.10. Check if three code points would start a number\nfunction isNumberStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002B PLUS SIGN (+)\n    // U+002D HYPHEN-MINUS (-)\n    if (first === 0x002B || first === 0x002D) {\n        // If the second code point is a digit, return true.\n        if (isDigit(second)) {\n            return 2;\n        }\n\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\n        // and the third code point is a digit, return true.\n        // Otherwise, return false.\n        return second === 0x002E && isDigit(third) ? 3 : 0;\n    }\n\n    // U+002E FULL STOP (.)\n    if (first === 0x002E) {\n        // If the second code point is a digit, return true. Otherwise, return false.\n        return isDigit(second) ? 2 : 0;\n    }\n\n    // digit\n    if (isDigit(first)) {\n        // Return true.\n        return 1;\n    }\n\n    // anything else\n    // Return false.\n    return 0;\n}\n\n//\n// Misc\n//\n\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\nfunction isBOM(code) {\n    // UTF-16BE\n    if (code === 0xFEFF) {\n        return 1;\n    }\n\n    // UTF-16LE\n    if (code === 0xFFFE) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// Fast code category\n// Only ASCII code points has a special meaning, that's why we define a maps for 0..127 codes only\nconst CATEGORY = new Array(0x80);\nconst EofCategory = 0x80;\nconst WhiteSpaceCategory = 0x82;\nconst DigitCategory = 0x83;\nconst NameStartCategory = 0x84;\nconst NonPrintableCategory = 0x85;\n\nfor (let i = 0; i < CATEGORY.length; i++) {\n    CATEGORY[i] =\n        isWhiteSpace(i) && WhiteSpaceCategory ||\n        isDigit(i) && DigitCategory ||\n        isNameStart(i) && NameStartCategory ||\n        isNonPrintable(i) && NonPrintableCategory ||\n        i || EofCategory;\n}\n\nfunction charCodeCategory(code) {\n    return code < 0x80 ? CATEGORY[code] : NameStartCategory;\n}\n\nexports.DigitCategory = DigitCategory;\nexports.EofCategory = EofCategory;\nexports.NameStartCategory = NameStartCategory;\nexports.NonPrintableCategory = NonPrintableCategory;\nexports.WhiteSpaceCategory = WhiteSpaceCategory;\nexports.charCodeCategory = charCodeCategory;\nexports.isBOM = isBOM;\nexports.isDigit = isDigit;\nexports.isHexDigit = isHexDigit;\nexports.isIdentifierStart = isIdentifierStart;\nexports.isLetter = isLetter;\nexports.isLowercaseLetter = isLowercaseLetter;\nexports.isName = isName;\nexports.isNameStart = isNameStart;\nexports.isNewline = isNewline;\nexports.isNonAscii = isNonAscii;\nexports.isNonPrintable = isNonPrintable;\nexports.isNumberStart = isNumberStart;\nexports.isUppercaseLetter = isUppercaseLetter;\nexports.isValidEscape = isValidEscape;\nexports.isWhiteSpace = isWhiteSpace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/tokenizer/index.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/tokenizer/index.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst types = __webpack_require__(/*! ./types.cjs */ \"./node_modules/css-tree/cjs/tokenizer/types.cjs\");\nconst charCodeDefinitions = __webpack_require__(/*! ./char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst utils = __webpack_require__(/*! ./utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\n\nfunction tokenize(source, onToken) {\n    function getCharCode(offset) {\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\n    }\n\n    // § 4.3.3. Consume a numeric token\n    function consumeNumericToken() {\n        // Consume a number and let number be the result.\n        offset = utils.consumeNumber(source, offset);\n\n        // If the next 3 input code points would start an identifier, then:\n        if (charCodeDefinitions.isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\n            // Consume a name. Set the <dimension-token>’s unit to the returned value.\n            // Return the <dimension-token>.\n            type = types.Dimension;\n            offset = utils.consumeName(source, offset);\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\n        if (getCharCode(offset) === 0x0025) {\n            // Create a <percentage-token> with the same value as number, and return it.\n            type = types.Percentage;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\n        type = types.Number;\n    }\n\n    // § 4.3.4. Consume an ident-like token\n    function consumeIdentLikeToken() {\n        const nameStartOffset = offset;\n\n        // Consume a name, and let string be the result.\n        offset = utils.consumeName(source, offset);\n\n        // If string’s value is an ASCII case-insensitive match for \"url\",\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        if (utils.cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\n            // While the next two input code points are whitespace, consume the next input code point.\n            offset = utils.findWhiteSpaceEnd(source, offset + 1);\n\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\n            // then create a <function-token> with its value set to string and return it.\n            if (getCharCode(offset) === 0x0022 ||\n                getCharCode(offset) === 0x0027) {\n                type = types.Function;\n                offset = nameStartOffset + 4;\n                return;\n            }\n\n            // Otherwise, consume a url token, and return it.\n            consumeUrlToken();\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        // Create a <function-token> with its value set to string and return it.\n        if (getCharCode(offset) === 0x0028) {\n            type = types.Function;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create an <ident-token> with its value set to string and return it.\n        type = types.Ident;\n    }\n\n    // § 4.3.5. Consume a string token\n    function consumeStringToken(endingCodePoint) {\n        // This algorithm may be called with an ending code point, which denotes the code point\n        // that ends the string. If an ending code point is not specified,\n        // the current input code point is used.\n        if (!endingCodePoint) {\n            endingCodePoint = getCharCode(offset++);\n        }\n\n        // Initially create a <string-token> with its value set to the empty string.\n        type = types.String;\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeDefinitions.charCodeCategory(code)) {\n                // ending code point\n                case endingCodePoint:\n                    // Return the <string-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <string-token>.\n                    // return;\n\n                // newline\n                case charCodeDefinitions.WhiteSpaceCategory:\n                    if (charCodeDefinitions.isNewline(code)) {\n                        // This is a parse error. Reconsume the current input code point,\n                        // create a <bad-string-token>, and return it.\n                        offset += utils.getNewlineLength(source, offset, code);\n                        type = types.BadString;\n                        return;\n                    }\n                    break;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the next input code point is EOF, do nothing.\n                    if (offset === source.length - 1) {\n                        break;\n                    }\n\n                    const nextCode = getCharCode(offset + 1);\n\n                    // Otherwise, if the next input code point is a newline, consume it.\n                    if (charCodeDefinitions.isNewline(nextCode)) {\n                        offset += utils.getNewlineLength(source, offset + 1, nextCode);\n                    } else if (charCodeDefinitions.isValidEscape(code, nextCode)) {\n                        // Otherwise, (the stream starts with a valid escape) consume\n                        // an escaped code point and append the returned code point to\n                        // the <string-token>’s value.\n                        offset = utils.consumeEscaped(source, offset) - 1;\n                    }\n                    break;\n\n                // anything else\n                // Append the current input code point to the <string-token>’s value.\n            }\n        }\n    }\n\n    // § 4.3.6. Consume a url token\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\n    // This algorithm also assumes that it’s being called to consume an \"unquoted\" value, like url(foo).\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\n    // automatically handles this distinction; this algorithm shouldn’t be called directly otherwise.\n    function consumeUrlToken() {\n        // Initially create a <url-token> with its value set to the empty string.\n        type = types.Url;\n\n        // Consume as much whitespace as possible.\n        offset = utils.findWhiteSpaceEnd(source, offset);\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeDefinitions.charCodeCategory(code)) {\n                // U+0029 RIGHT PARENTHESIS ())\n                case 0x0029:\n                    // Return the <url-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <url-token>.\n                    // return;\n\n                // whitespace\n                case charCodeDefinitions.WhiteSpaceCategory:\n                    // Consume as much whitespace as possible.\n                    offset = utils.findWhiteSpaceEnd(source, offset);\n\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\n                    // consume it and return the <url-token>\n                    // (if EOF was encountered, this is a parse error);\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\n                        if (offset < source.length) {\n                            offset++;\n                        }\n                        return;\n                    }\n\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\n                    // and return it.\n                    offset = utils.consumeBadUrlRemnants(source, offset);\n                    type = types.BadUrl;\n                    return;\n\n                // U+0022 QUOTATION MARK (\")\n                // U+0027 APOSTROPHE (')\n                // U+0028 LEFT PARENTHESIS (()\n                // non-printable code point\n                case 0x0022:\n                case 0x0027:\n                case 0x0028:\n                case charCodeDefinitions.NonPrintableCategory:\n                    // This is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = utils.consumeBadUrlRemnants(source, offset);\n                    type = types.BadUrl;\n                    return;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the stream starts with a valid escape, consume an escaped code point and\n                    // append the returned code point to the <url-token>’s value.\n                    if (charCodeDefinitions.isValidEscape(code, getCharCode(offset + 1))) {\n                        offset = utils.consumeEscaped(source, offset) - 1;\n                        break;\n                    }\n\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = utils.consumeBadUrlRemnants(source, offset);\n                    type = types.BadUrl;\n                    return;\n\n                // anything else\n                // Append the current input code point to the <url-token>’s value.\n            }\n        }\n    }\n\n    // ensure source is a string\n    source = String(source || '');\n\n    const sourceLength = source.length;\n    let start = charCodeDefinitions.isBOM(getCharCode(0));\n    let offset = start;\n    let type;\n\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\n    // § 4.3.1. Consume a token\n    while (offset < sourceLength) {\n        const code = source.charCodeAt(offset);\n\n        switch (charCodeDefinitions.charCodeCategory(code)) {\n            // whitespace\n            case charCodeDefinitions.WhiteSpaceCategory:\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\n                type = types.WhiteSpace;\n                offset = utils.findWhiteSpaceEnd(source, offset + 1);\n                break;\n\n            // U+0022 QUOTATION MARK (\")\n            case 0x0022:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0023 NUMBER SIGN (#)\n            case 0x0023:\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\n                if (charCodeDefinitions.isName(getCharCode(offset + 1)) || charCodeDefinitions.isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // Create a <hash-token>.\n                    type = types.Hash;\n\n                    // If the next 3 input code points would start an identifier, set the <hash-token>’s type flag to \"id\".\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    //     // TODO: set id flag\n                    // }\n\n                    // Consume a name, and set the <hash-token>’s value to the returned string.\n                    offset = utils.consumeName(source, offset + 1);\n\n                    // Return the <hash-token>.\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = types.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0027 APOSTROPHE (')\n            case 0x0027:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0028 LEFT PARENTHESIS (()\n            case 0x0028:\n                // Return a <(-token>.\n                type = types.LeftParenthesis;\n                offset++;\n                break;\n\n            // U+0029 RIGHT PARENTHESIS ())\n            case 0x0029:\n                // Return a <)-token>.\n                type = types.RightParenthesis;\n                offset++;\n                break;\n\n            // U+002B PLUS SIGN (+)\n            case 0x002B:\n                // If the input stream starts with a number, ...\n                if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = types.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+002C COMMA (,)\n            case 0x002C:\n                // Return a <comma-token>.\n                type = types.Comma;\n                offset++;\n                break;\n\n            // U+002D HYPHEN-MINUS (-)\n            case 0x002D:\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\n                if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\n                    if (getCharCode(offset + 1) === 0x002D &&\n                        getCharCode(offset + 2) === 0x003E) {\n                        type = types.CDC;\n                        offset = offset + 3;\n                    } else {\n                        // Otherwise, if the input stream starts with an identifier, ...\n                        if (charCodeDefinitions.isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\n                            consumeIdentLikeToken();\n                        } else {\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\n                            type = types.Delim;\n                            offset++;\n                        }\n                    }\n                }\n                break;\n\n            // U+002E FULL STOP (.)\n            case 0x002E:\n                // If the input stream starts with a number, ...\n                if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = types.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+002F SOLIDUS (/)\n            case 0x002F:\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\n                if (getCharCode(offset + 1) === 0x002A) {\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\n                    type = types.Comment;\n                    offset = source.indexOf('*/', offset + 2);\n                    offset = offset === -1 ? source.length : offset + 2;\n                } else {\n                    type = types.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+003A COLON (:)\n            case 0x003A:\n                // Return a <colon-token>.\n                type = types.Colon;\n                offset++;\n                break;\n\n            // U+003B SEMICOLON (;)\n            case 0x003B:\n                // Return a <semicolon-token>.\n                type = types.Semicolon;\n                offset++;\n                break;\n\n            // U+003C LESS-THAN SIGN (<)\n            case 0x003C:\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\n                if (getCharCode(offset + 1) === 0x0021 &&\n                    getCharCode(offset + 2) === 0x002D &&\n                    getCharCode(offset + 3) === 0x002D) {\n                    // ... consume them and return a <CDO-token>.\n                    type = types.CDO;\n                    offset = offset + 4;\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = types.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0040 COMMERCIAL AT (@)\n            case 0x0040:\n                // If the next 3 input code points would start an identifier, ...\n                if (charCodeDefinitions.isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\n                    type = types.AtKeyword;\n                    offset = utils.consumeName(source, offset + 1);\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = types.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+005B LEFT SQUARE BRACKET ([)\n            case 0x005B:\n                // Return a <[-token>.\n                type = types.LeftSquareBracket;\n                offset++;\n                break;\n\n            // U+005C REVERSE SOLIDUS (\\)\n            case 0x005C:\n                // If the input stream starts with a valid escape, ...\n                if (charCodeDefinitions.isValidEscape(code, getCharCode(offset + 1))) {\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\n                    consumeIdentLikeToken();\n                } else {\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\n                    type = types.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+005D RIGHT SQUARE BRACKET (])\n            case 0x005D:\n                // Return a <]-token>.\n                type = types.RightSquareBracket;\n                offset++;\n                break;\n\n            // U+007B LEFT CURLY BRACKET ({)\n            case 0x007B:\n                // Return a <{-token>.\n                type = types.LeftCurlyBracket;\n                offset++;\n                break;\n\n            // U+007D RIGHT CURLY BRACKET (})\n            case 0x007D:\n                // Return a <}-token>.\n                type = types.RightCurlyBracket;\n                offset++;\n                break;\n\n            // digit\n            case charCodeDefinitions.DigitCategory:\n                // Reconsume the current input code point, consume a numeric token, and return it.\n                consumeNumericToken();\n                break;\n\n            // name-start code point\n            case charCodeDefinitions.NameStartCategory:\n                // Reconsume the current input code point, consume an ident-like token, and return it.\n                consumeIdentLikeToken();\n                break;\n\n                // EOF\n                // case EofCategory:\n                // Return an <EOF-token>.\n                // break;\n\n            // anything else\n            default:\n                // Return a <delim-token> with its value set to the current input code point.\n                type = types.Delim;\n                offset++;\n        }\n\n        // put token to stream\n        onToken(type, start, start = offset);\n    }\n}\n\nexports.AtKeyword = types.AtKeyword;\nexports.BadString = types.BadString;\nexports.BadUrl = types.BadUrl;\nexports.CDC = types.CDC;\nexports.CDO = types.CDO;\nexports.Colon = types.Colon;\nexports.Comma = types.Comma;\nexports.Comment = types.Comment;\nexports.Delim = types.Delim;\nexports.Dimension = types.Dimension;\nexports.EOF = types.EOF;\nexports.Function = types.Function;\nexports.Hash = types.Hash;\nexports.Ident = types.Ident;\nexports.LeftCurlyBracket = types.LeftCurlyBracket;\nexports.LeftParenthesis = types.LeftParenthesis;\nexports.LeftSquareBracket = types.LeftSquareBracket;\nexports.Number = types.Number;\nexports.Percentage = types.Percentage;\nexports.RightCurlyBracket = types.RightCurlyBracket;\nexports.RightParenthesis = types.RightParenthesis;\nexports.RightSquareBracket = types.RightSquareBracket;\nexports.Semicolon = types.Semicolon;\nexports.String = types.String;\nexports.Url = types.Url;\nexports.WhiteSpace = types.WhiteSpace;\nexports.tokenTypes = types;\nexports.DigitCategory = charCodeDefinitions.DigitCategory;\nexports.EofCategory = charCodeDefinitions.EofCategory;\nexports.NameStartCategory = charCodeDefinitions.NameStartCategory;\nexports.NonPrintableCategory = charCodeDefinitions.NonPrintableCategory;\nexports.WhiteSpaceCategory = charCodeDefinitions.WhiteSpaceCategory;\nexports.charCodeCategory = charCodeDefinitions.charCodeCategory;\nexports.isBOM = charCodeDefinitions.isBOM;\nexports.isDigit = charCodeDefinitions.isDigit;\nexports.isHexDigit = charCodeDefinitions.isHexDigit;\nexports.isIdentifierStart = charCodeDefinitions.isIdentifierStart;\nexports.isLetter = charCodeDefinitions.isLetter;\nexports.isLowercaseLetter = charCodeDefinitions.isLowercaseLetter;\nexports.isName = charCodeDefinitions.isName;\nexports.isNameStart = charCodeDefinitions.isNameStart;\nexports.isNewline = charCodeDefinitions.isNewline;\nexports.isNonAscii = charCodeDefinitions.isNonAscii;\nexports.isNonPrintable = charCodeDefinitions.isNonPrintable;\nexports.isNumberStart = charCodeDefinitions.isNumberStart;\nexports.isUppercaseLetter = charCodeDefinitions.isUppercaseLetter;\nexports.isValidEscape = charCodeDefinitions.isValidEscape;\nexports.isWhiteSpace = charCodeDefinitions.isWhiteSpace;\nexports.cmpChar = utils.cmpChar;\nexports.cmpStr = utils.cmpStr;\nexports.consumeBadUrlRemnants = utils.consumeBadUrlRemnants;\nexports.consumeEscaped = utils.consumeEscaped;\nexports.consumeName = utils.consumeName;\nexports.consumeNumber = utils.consumeNumber;\nexports.decodeEscaped = utils.decodeEscaped;\nexports.findDecimalNumberEnd = utils.findDecimalNumberEnd;\nexports.findWhiteSpaceEnd = utils.findWhiteSpaceEnd;\nexports.findWhiteSpaceStart = utils.findWhiteSpaceStart;\nexports.getNewlineLength = utils.getNewlineLength;\nexports.tokenize = tokenize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/tokenizer/index.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/tokenizer/names.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/tokenizer/names.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst tokenNames = [\n    'EOF-token',\n    'ident-token',\n    'function-token',\n    'at-keyword-token',\n    'hash-token',\n    'string-token',\n    'bad-string-token',\n    'url-token',\n    'bad-url-token',\n    'delim-token',\n    'number-token',\n    'percentage-token',\n    'dimension-token',\n    'whitespace-token',\n    'CDO-token',\n    'CDC-token',\n    'colon-token',\n    'semicolon-token',\n    'comma-token',\n    '[-token',\n    ']-token',\n    '(-token',\n    ')-token',\n    '{-token',\n    '}-token'\n];\n\nmodule.exports = tokenNames;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3Rva2VuaXplci9uYW1lcy5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3Rva2VuaXplci9uYW1lcy5janM/YjJiYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHRva2VuTmFtZXMgPSBbXG4gICAgJ0VPRi10b2tlbicsXG4gICAgJ2lkZW50LXRva2VuJyxcbiAgICAnZnVuY3Rpb24tdG9rZW4nLFxuICAgICdhdC1rZXl3b3JkLXRva2VuJyxcbiAgICAnaGFzaC10b2tlbicsXG4gICAgJ3N0cmluZy10b2tlbicsXG4gICAgJ2JhZC1zdHJpbmctdG9rZW4nLFxuICAgICd1cmwtdG9rZW4nLFxuICAgICdiYWQtdXJsLXRva2VuJyxcbiAgICAnZGVsaW0tdG9rZW4nLFxuICAgICdudW1iZXItdG9rZW4nLFxuICAgICdwZXJjZW50YWdlLXRva2VuJyxcbiAgICAnZGltZW5zaW9uLXRva2VuJyxcbiAgICAnd2hpdGVzcGFjZS10b2tlbicsXG4gICAgJ0NETy10b2tlbicsXG4gICAgJ0NEQy10b2tlbicsXG4gICAgJ2NvbG9uLXRva2VuJyxcbiAgICAnc2VtaWNvbG9uLXRva2VuJyxcbiAgICAnY29tbWEtdG9rZW4nLFxuICAgICdbLXRva2VuJyxcbiAgICAnXS10b2tlbicsXG4gICAgJygtdG9rZW4nLFxuICAgICcpLXRva2VuJyxcbiAgICAney10b2tlbicsXG4gICAgJ30tdG9rZW4nXG5dO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHRva2VuTmFtZXM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/tokenizer/names.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/tokenizer/types.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/tokenizer/types.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// CSS Syntax Module Level 3\n// https://www.w3.org/TR/css-syntax-3/\nconst EOF = 0;                 // <EOF-token>\nconst Ident = 1;               // <ident-token>\nconst Function = 2;            // <function-token>\nconst AtKeyword = 3;           // <at-keyword-token>\nconst Hash = 4;                // <hash-token>\nconst String = 5;              // <string-token>\nconst BadString = 6;           // <bad-string-token>\nconst Url = 7;                 // <url-token>\nconst BadUrl = 8;              // <bad-url-token>\nconst Delim = 9;               // <delim-token>\nconst Number = 10;             // <number-token>\nconst Percentage = 11;         // <percentage-token>\nconst Dimension = 12;          // <dimension-token>\nconst WhiteSpace = 13;         // <whitespace-token>\nconst CDO = 14;                // <CDO-token>\nconst CDC = 15;                // <CDC-token>\nconst Colon = 16;              // <colon-token>     :\nconst Semicolon = 17;          // <semicolon-token> ;\nconst Comma = 18;              // <comma-token>     ,\nconst LeftSquareBracket = 19;  // <[-token>\nconst RightSquareBracket = 20; // <]-token>\nconst LeftParenthesis = 21;    // <(-token>\nconst RightParenthesis = 22;   // <)-token>\nconst LeftCurlyBracket = 23;   // <{-token>\nconst RightCurlyBracket = 24;  // <}-token>\nconst Comment = 25;\n\nexports.AtKeyword = AtKeyword;\nexports.BadString = BadString;\nexports.BadUrl = BadUrl;\nexports.CDC = CDC;\nexports.CDO = CDO;\nexports.Colon = Colon;\nexports.Comma = Comma;\nexports.Comment = Comment;\nexports.Delim = Delim;\nexports.Dimension = Dimension;\nexports.EOF = EOF;\nexports.Function = Function;\nexports.Hash = Hash;\nexports.Ident = Ident;\nexports.LeftCurlyBracket = LeftCurlyBracket;\nexports.LeftParenthesis = LeftParenthesis;\nexports.LeftSquareBracket = LeftSquareBracket;\nexports.Number = Number;\nexports.Percentage = Percentage;\nexports.RightCurlyBracket = RightCurlyBracket;\nexports.RightParenthesis = RightParenthesis;\nexports.RightSquareBracket = RightSquareBracket;\nexports.Semicolon = Semicolon;\nexports.String = String;\nexports.Url = Url;\nexports.WhiteSpace = WhiteSpace;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3Rva2VuaXplci90eXBlcy5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3Rva2VuaXplci90eXBlcy5janM/Zjk2NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIENTUyBTeW50YXggTW9kdWxlIExldmVsIDNcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9jc3Mtc3ludGF4LTMvXG5jb25zdCBFT0YgPSAwOyAgICAgICAgICAgICAgICAgLy8gPEVPRi10b2tlbj5cbmNvbnN0IElkZW50ID0gMTsgICAgICAgICAgICAgICAvLyA8aWRlbnQtdG9rZW4+XG5jb25zdCBGdW5jdGlvbiA9IDI7ICAgICAgICAgICAgLy8gPGZ1bmN0aW9uLXRva2VuPlxuY29uc3QgQXRLZXl3b3JkID0gMzsgICAgICAgICAgIC8vIDxhdC1rZXl3b3JkLXRva2VuPlxuY29uc3QgSGFzaCA9IDQ7ICAgICAgICAgICAgICAgIC8vIDxoYXNoLXRva2VuPlxuY29uc3QgU3RyaW5nID0gNTsgICAgICAgICAgICAgIC8vIDxzdHJpbmctdG9rZW4+XG5jb25zdCBCYWRTdHJpbmcgPSA2OyAgICAgICAgICAgLy8gPGJhZC1zdHJpbmctdG9rZW4+XG5jb25zdCBVcmwgPSA3OyAgICAgICAgICAgICAgICAgLy8gPHVybC10b2tlbj5cbmNvbnN0IEJhZFVybCA9IDg7ICAgICAgICAgICAgICAvLyA8YmFkLXVybC10b2tlbj5cbmNvbnN0IERlbGltID0gOTsgICAgICAgICAgICAgICAvLyA8ZGVsaW0tdG9rZW4+XG5jb25zdCBOdW1iZXIgPSAxMDsgICAgICAgICAgICAgLy8gPG51bWJlci10b2tlbj5cbmNvbnN0IFBlcmNlbnRhZ2UgPSAxMTsgICAgICAgICAvLyA8cGVyY2VudGFnZS10b2tlbj5cbmNvbnN0IERpbWVuc2lvbiA9IDEyOyAgICAgICAgICAvLyA8ZGltZW5zaW9uLXRva2VuPlxuY29uc3QgV2hpdGVTcGFjZSA9IDEzOyAgICAgICAgIC8vIDx3aGl0ZXNwYWNlLXRva2VuPlxuY29uc3QgQ0RPID0gMTQ7ICAgICAgICAgICAgICAgIC8vIDxDRE8tdG9rZW4+XG5jb25zdCBDREMgPSAxNTsgICAgICAgICAgICAgICAgLy8gPENEQy10b2tlbj5cbmNvbnN0IENvbG9uID0gMTY7ICAgICAgICAgICAgICAvLyA8Y29sb24tdG9rZW4+ICAgICA6XG5jb25zdCBTZW1pY29sb24gPSAxNzsgICAgICAgICAgLy8gPHNlbWljb2xvbi10b2tlbj4gO1xuY29uc3QgQ29tbWEgPSAxODsgICAgICAgICAgICAgIC8vIDxjb21tYS10b2tlbj4gICAgICxcbmNvbnN0IExlZnRTcXVhcmVCcmFja2V0ID0gMTk7ICAvLyA8Wy10b2tlbj5cbmNvbnN0IFJpZ2h0U3F1YXJlQnJhY2tldCA9IDIwOyAvLyA8XS10b2tlbj5cbmNvbnN0IExlZnRQYXJlbnRoZXNpcyA9IDIxOyAgICAvLyA8KC10b2tlbj5cbmNvbnN0IFJpZ2h0UGFyZW50aGVzaXMgPSAyMjsgICAvLyA8KS10b2tlbj5cbmNvbnN0IExlZnRDdXJseUJyYWNrZXQgPSAyMzsgICAvLyA8ey10b2tlbj5cbmNvbnN0IFJpZ2h0Q3VybHlCcmFja2V0ID0gMjQ7ICAvLyA8fS10b2tlbj5cbmNvbnN0IENvbW1lbnQgPSAyNTtcblxuZXhwb3J0cy5BdEtleXdvcmQgPSBBdEtleXdvcmQ7XG5leHBvcnRzLkJhZFN0cmluZyA9IEJhZFN0cmluZztcbmV4cG9ydHMuQmFkVXJsID0gQmFkVXJsO1xuZXhwb3J0cy5DREMgPSBDREM7XG5leHBvcnRzLkNETyA9IENETztcbmV4cG9ydHMuQ29sb24gPSBDb2xvbjtcbmV4cG9ydHMuQ29tbWEgPSBDb21tYTtcbmV4cG9ydHMuQ29tbWVudCA9IENvbW1lbnQ7XG5leHBvcnRzLkRlbGltID0gRGVsaW07XG5leHBvcnRzLkRpbWVuc2lvbiA9IERpbWVuc2lvbjtcbmV4cG9ydHMuRU9GID0gRU9GO1xuZXhwb3J0cy5GdW5jdGlvbiA9IEZ1bmN0aW9uO1xuZXhwb3J0cy5IYXNoID0gSGFzaDtcbmV4cG9ydHMuSWRlbnQgPSBJZGVudDtcbmV4cG9ydHMuTGVmdEN1cmx5QnJhY2tldCA9IExlZnRDdXJseUJyYWNrZXQ7XG5leHBvcnRzLkxlZnRQYXJlbnRoZXNpcyA9IExlZnRQYXJlbnRoZXNpcztcbmV4cG9ydHMuTGVmdFNxdWFyZUJyYWNrZXQgPSBMZWZ0U3F1YXJlQnJhY2tldDtcbmV4cG9ydHMuTnVtYmVyID0gTnVtYmVyO1xuZXhwb3J0cy5QZXJjZW50YWdlID0gUGVyY2VudGFnZTtcbmV4cG9ydHMuUmlnaHRDdXJseUJyYWNrZXQgPSBSaWdodEN1cmx5QnJhY2tldDtcbmV4cG9ydHMuUmlnaHRQYXJlbnRoZXNpcyA9IFJpZ2h0UGFyZW50aGVzaXM7XG5leHBvcnRzLlJpZ2h0U3F1YXJlQnJhY2tldCA9IFJpZ2h0U3F1YXJlQnJhY2tldDtcbmV4cG9ydHMuU2VtaWNvbG9uID0gU2VtaWNvbG9uO1xuZXhwb3J0cy5TdHJpbmcgPSBTdHJpbmc7XG5leHBvcnRzLlVybCA9IFVybDtcbmV4cG9ydHMuV2hpdGVTcGFjZSA9IFdoaXRlU3BhY2U7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/tokenizer/types.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/tokenizer/utils.cjs":
/*!*******************************************************!*\
  !*** ./node_modules/css-tree/cjs/tokenizer/utils.cjs ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst charCodeDefinitions = __webpack_require__(/*! ./char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\n\nfunction getCharCode(source, offset) {\n    return offset < source.length ? source.charCodeAt(offset) : 0;\n}\n\nfunction getNewlineLength(source, offset, code) {\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\n        return 2;\n    }\n\n    return 1;\n}\n\nfunction cmpChar(testStr, offset, referenceCode) {\n    let code = testStr.charCodeAt(offset);\n\n    // code.toLowerCase() for A..Z\n    if (charCodeDefinitions.isUppercaseLetter(code)) {\n        code = code | 32;\n    }\n\n    return code === referenceCode;\n}\n\nfunction cmpStr(testStr, start, end, referenceStr) {\n    if (end - start !== referenceStr.length) {\n        return false;\n    }\n\n    if (start < 0 || end > testStr.length) {\n        return false;\n    }\n\n    for (let i = start; i < end; i++) {\n        const referenceCode = referenceStr.charCodeAt(i - start);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for A..Z\n        if (charCodeDefinitions.isUppercaseLetter(testCode)) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction findWhiteSpaceStart(source, offset) {\n    for (; offset >= 0; offset--) {\n        if (!charCodeDefinitions.isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset + 1;\n}\n\nfunction findWhiteSpaceEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!charCodeDefinitions.isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\nfunction findDecimalNumberEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!charCodeDefinitions.isDigit(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\nfunction consumeEscaped(source, offset) {\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\n    // that the next input code point has already been verified to be part of a valid escape.\n    offset += 2;\n\n    // hex digit\n    if (charCodeDefinitions.isHexDigit(getCharCode(source, offset - 1))) {\n        // Consume as many hex digits as possible, but no more than 5.\n        // Note that this means 1-6 hex digits have been consumed in total.\n        for (const maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\n            if (!charCodeDefinitions.isHexDigit(getCharCode(source, offset))) {\n                break;\n            }\n        }\n\n        // If the next input code point is whitespace, consume it as well.\n        const code = getCharCode(source, offset);\n        if (charCodeDefinitions.isWhiteSpace(code)) {\n            offset += getNewlineLength(source, offset, code);\n        }\n    }\n\n    return offset;\n}\n\n// §4.3.11. Consume a name\n// Note: This algorithm does not do the verification of the first few code points that are necessary\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\n// ensure that the stream starts with an identifier before calling this algorithm.\nfunction consumeName(source, offset) {\n    // Let result initially be an empty string.\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // name code point\n        if (charCodeDefinitions.isName(code)) {\n            // Append the code point to result.\n            continue;\n        }\n\n        // the stream starts with a valid escape\n        if (charCodeDefinitions.isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point. Append the returned code point to result.\n            offset = consumeEscaped(source, offset) - 1;\n            continue;\n        }\n\n        // anything else\n        // Reconsume the current input code point. Return result.\n        break;\n    }\n\n    return offset;\n}\n\n// §4.3.12. Consume a number\nfunction consumeNumber(source, offset) {\n    let code = source.charCodeAt(offset);\n\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\n    // consume it and append it to repr.\n    if (code === 0x002B || code === 0x002D) {\n        code = source.charCodeAt(offset += 1);\n    }\n\n    // 3. While the next input code point is a digit, consume it and append it to repr.\n    if (charCodeDefinitions.isDigit(code)) {\n        offset = findDecimalNumberEnd(source, offset + 1);\n        code = source.charCodeAt(offset);\n    }\n\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\n    if (code === 0x002E && charCodeDefinitions.isDigit(source.charCodeAt(offset + 1))) {\n        // 4.1 Consume them.\n        // 4.2 Append them to repr.\n        offset += 2;\n\n        // 4.3 Set type to \"number\".\n        // TODO\n\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\n\n        offset = findDecimalNumberEnd(source, offset);\n    }\n\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\n    if (cmpChar(source, offset, 101 /* e */)) {\n        let sign = 0;\n        code = source.charCodeAt(offset + 1);\n\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\n        if (code === 0x002D || code === 0x002B) {\n            sign = 1;\n            code = source.charCodeAt(offset + 2);\n        }\n\n        // ... followed by a digit\n        if (charCodeDefinitions.isDigit(code)) {\n            // 5.1 Consume them.\n            // 5.2 Append them to repr.\n\n            // 5.3 Set type to \"number\".\n            // TODO\n\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.14. Consume the remnants of a bad url\n// ... its sole use is to consume enough of the input stream to reach a recovery point\n// where normal tokenizing can resume.\nfunction consumeBadUrlRemnants(source, offset) {\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // U+0029 RIGHT PARENTHESIS ())\n        // EOF\n        if (code === 0x0029) {\n            // Return.\n            offset++;\n            break;\n        }\n\n        if (charCodeDefinitions.isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point.\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\n            // without ending the <bad-url-token>. This is otherwise identical to\n            // the \"anything else\" clause.\n            offset = consumeEscaped(source, offset);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\n// Note: This algorithm assumes that escaped is valid without leading U+005C REVERSE SOLIDUS (\\)\nfunction decodeEscaped(escaped) {\n    // Single char escaped that's not a hex digit\n    if (escaped.length === 1 && !charCodeDefinitions.isHexDigit(escaped.charCodeAt(0))) {\n        return escaped[0];\n    }\n\n    // Interpret the hex digits as a hexadecimal number.\n    let code = parseInt(escaped, 16);\n\n    if (\n        (code === 0) ||                       // If this number is zero,\n        (code >= 0xD800 && code <= 0xDFFF) || // or is for a surrogate,\n        (code > 0x10FFFF)                     // or is greater than the maximum allowed code point\n    ) {\n        // ... return U+FFFD REPLACEMENT CHARACTER\n        code = 0xFFFD;\n    }\n\n    // Otherwise, return the code point with that value.\n    return String.fromCodePoint(code);\n}\n\nexports.cmpChar = cmpChar;\nexports.cmpStr = cmpStr;\nexports.consumeBadUrlRemnants = consumeBadUrlRemnants;\nexports.consumeEscaped = consumeEscaped;\nexports.consumeName = consumeName;\nexports.consumeNumber = consumeNumber;\nexports.decodeEscaped = decodeEscaped;\nexports.findDecimalNumberEnd = findDecimalNumberEnd;\nexports.findWhiteSpaceEnd = findWhiteSpaceEnd;\nexports.findWhiteSpaceStart = findWhiteSpaceStart;\nexports.getNewlineLength = getNewlineLength;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/tokenizer/utils.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/utils/List.cjs":
/*!**************************************************!*\
  !*** ./node_modules/css-tree/cjs/utils/List.cjs ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n//\n//                              list\n//                            ┌──────┐\n//             ┌──────────────┼─head │\n//             │              │ tail─┼──────────────┐\n//             │              └──────┘              │\n//             ▼                                    ▼\n//            item        item        item        item\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\n//          │ data │    │ data │    │ data │    │ data │\n//          └──────┘    └──────┘    └──────┘    └──────┘\n//\n\nlet releasedCursors = null;\n\nclass List {\n    static createItem(data) {\n        return {\n            prev: null,\n            next: null,\n            data\n        };\n    }\n\n    constructor() {\n        this.head = null;\n        this.tail = null;\n        this.cursor = null;\n    }\n    createItem(data) {\n        return List.createItem(data);\n    }\n\n    // cursor helpers\n    allocateCursor(prev, next) {\n        let cursor;\n\n        if (releasedCursors !== null) {\n            cursor = releasedCursors;\n            releasedCursors = releasedCursors.cursor;\n            cursor.prev = prev;\n            cursor.next = next;\n            cursor.cursor = this.cursor;\n        } else {\n            cursor = {\n                prev,\n                next,\n                cursor: this.cursor\n            };\n        }\n\n        this.cursor = cursor;\n\n        return cursor;\n    }\n    releaseCursor() {\n        const { cursor } = this;\n\n        this.cursor = cursor.cursor;\n        cursor.prev = null;\n        cursor.next = null;\n        cursor.cursor = releasedCursors;\n        releasedCursors = cursor;\n    }\n    updateCursors(prevOld, prevNew, nextOld, nextNew) {\n        let { cursor } = this;\n\n        while (cursor !== null) {\n            if (cursor.prev === prevOld) {\n                cursor.prev = prevNew;\n            }\n\n            if (cursor.next === nextOld) {\n                cursor.next = nextNew;\n            }\n\n            cursor = cursor.cursor;\n        }\n    }\n    *[Symbol.iterator]() {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            yield cursor.data;\n        }\n    }\n\n    // getters\n    get size() {\n        let size = 0;\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            size++;\n        }\n\n        return size;\n    }\n    get isEmpty() {\n        return this.head === null;\n    }\n    get first() {\n        return this.head && this.head.data;\n    }\n    get last() {\n        return this.tail && this.tail.data;\n    }\n\n    // convertors\n    fromArray(array) {\n        let cursor = null;\n        this.head = null;\n\n        for (let data of array) {\n            const item = List.createItem(data);\n\n            if (cursor !== null) {\n                cursor.next = item;\n            } else {\n                this.head = item;\n            }\n\n            item.prev = cursor;\n            cursor = item;\n        }\n\n        this.tail = cursor;\n        return this;\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return [...this];\n    }\n\n    // array-like methods\n    forEach(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(null, this.head);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    forEachRight(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(this.tail, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    reduce(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(null, this.head);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.next !== null) {\n            item = cursor.next;\n            cursor.next = item.next;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    reduceRight(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(this.tail, null);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.prev !== null) {\n            item = cursor.prev;\n            cursor.prev = item.prev;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    some(fn, thisArg = this) {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n    map(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            result.appendData(fn.call(thisArg, cursor.data, cursor, this));\n        }\n\n        return result;\n    }\n    filter(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                result.appendData(cursor.data);\n            }\n        }\n\n        return result;\n    }\n\n    nextUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(null, start);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    prevUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(start, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n\n    // mutation\n    clear() {\n        this.head = null;\n        this.tail = null;\n    }\n    copy() {\n        const result = new List();\n\n        for (let data of this) {\n            result.appendData(data);\n        }\n\n        return result;\n    }\n    prepend(item) {\n        //      head\n        //    ^\n        // item\n        this.updateCursors(null, item, this.head, item);\n\n        // insert to the beginning of the list\n        if (this.head !== null) {\n            // new item <- first item\n            this.head.prev = item;\n            // new item -> first item\n            item.next = this.head;\n        } else {\n            // if list has no head, then it also has no tail\n            // in this case tail points to the new item\n            this.tail = item;\n        }\n\n        // head always points to new item\n        this.head = item;\n        return this;\n    }\n    prependData(data) {\n        return this.prepend(List.createItem(data));\n    }\n    append(item) {\n        return this.insert(item);\n    }\n    appendData(data) {\n        return this.insert(List.createItem(data));\n    }\n    insert(item, before = null) {\n        if (before !== null) {\n            // prev   before\n            //      ^\n            //     item\n            this.updateCursors(before.prev, item, before, item);\n\n            if (before.prev === null) {\n                // insert to the beginning of list\n                if (this.head !== before) {\n                    throw new Error('before doesn\\'t belong to list');\n                }\n                // since head points to before therefore list doesn't empty\n                // no need to check tail\n                this.head = item;\n                before.prev = item;\n                item.next = before;\n                this.updateCursors(null, item);\n            } else {\n                // insert between two items\n                before.prev.next = item;\n                item.prev = before.prev;\n                before.prev = item;\n                item.next = before;\n            }\n        } else {\n            // tail\n            //      ^\n            //      item\n            this.updateCursors(this.tail, item, null, item);\n\n            // insert to the ending of the list\n            if (this.tail !== null) {\n                // last item -> new item\n                this.tail.next = item;\n                // last item <- new item\n                item.prev = this.tail;\n            } else {\n                // if list has no tail, then it also has no head\n                // in this case head points to new item\n                this.head = item;\n            }\n\n            // tail always points to new item\n            this.tail = item;\n        }\n\n        return this;\n    }\n    insertData(data, before) {\n        return this.insert(List.createItem(data), before);\n    }\n    remove(item) {\n        //      item\n        //       ^\n        // prev     next\n        this.updateCursors(item, item.prev, item, item.next);\n\n        if (item.prev !== null) {\n            item.prev.next = item.next;\n        } else {\n            if (this.head !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.head = item.next;\n        }\n\n        if (item.next !== null) {\n            item.next.prev = item.prev;\n        } else {\n            if (this.tail !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.tail = item.prev;\n        }\n\n        item.prev = null;\n        item.next = null;\n\n        return item;\n    }\n    push(data) {\n        this.insert(List.createItem(data));\n    }\n    pop() {\n        return this.tail !== null ? this.remove(this.tail) : null;\n    }\n    unshift(data) {\n        this.prepend(List.createItem(data));\n    }\n    shift() {\n        return this.head !== null ? this.remove(this.head) : null;\n    }\n    prependList(list) {\n        return this.insertList(list, this.head);\n    }\n    appendList(list) {\n        return this.insertList(list);\n    }\n    insertList(list, before) {\n        // ignore empty lists\n        if (list.head === null) {\n            return this;\n        }\n\n        if (before !== undefined && before !== null) {\n            this.updateCursors(before.prev, list.tail, before, list.head);\n\n            // insert in the middle of dist list\n            if (before.prev !== null) {\n                // before.prev <-> list.head\n                before.prev.next = list.head;\n                list.head.prev = before.prev;\n            } else {\n                this.head = list.head;\n            }\n\n            before.prev = list.tail;\n            list.tail.next = before;\n        } else {\n            this.updateCursors(this.tail, list.tail, null, list.head);\n\n            // insert to end of the list\n            if (this.tail !== null) {\n                // if destination list has a tail, then it also has a head,\n                // but head doesn't change\n                // dest tail -> source head\n                this.tail.next = list.head;\n                // dest tail <- source head\n                list.head.prev = this.tail;\n            } else {\n                // if list has no a tail, then it also has no a head\n                // in this case points head to new item\n                this.head = list.head;\n            }\n\n            // tail always start point to new item\n            this.tail = list.tail;\n        }\n\n        list.head = null;\n        list.tail = null;\n        return this;\n    }\n    replace(oldItem, newItemOrList) {\n        if ('head' in newItemOrList) {\n            this.insertList(newItemOrList, oldItem);\n        } else {\n            this.insert(newItemOrList, oldItem);\n        }\n\n        this.remove(oldItem);\n    }\n}\n\nexports.List = List;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/utils/List.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/utils/clone.cjs":
/*!***************************************************!*\
  !*** ./node_modules/css-tree/cjs/utils/clone.cjs ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst List = __webpack_require__(/*! ./List.cjs */ \"./node_modules/css-tree/cjs/utils/List.cjs\");\n\nfunction clone(node) {\n    const result = {};\n\n    for (const key in node) {\n        let value = node[key];\n\n        if (value) {\n            if (Array.isArray(value) || value instanceof List.List) {\n                value = value.map(clone);\n            } else if (value.constructor === Object) {\n                value = clone(value);\n            }\n        }\n\n        result[key] = value;\n    }\n\n    return result;\n}\n\nexports.clone = clone;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3V0aWxzL2Nsb25lLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvdXRpbHMvY2xvbmUuY2pzP2Y4NDAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBMaXN0ID0gcmVxdWlyZSgnLi9MaXN0LmNqcycpO1xuXG5mdW5jdGlvbiBjbG9uZShub2RlKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG5cbiAgICBmb3IgKGNvbnN0IGtleSBpbiBub2RlKSB7XG4gICAgICAgIGxldCB2YWx1ZSA9IG5vZGVba2V5XTtcblxuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSB8fCB2YWx1ZSBpbnN0YW5jZW9mIExpc3QuTGlzdCkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUubWFwKGNsb25lKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUuY29uc3RydWN0b3IgPT09IE9iamVjdCkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gY2xvbmUodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnRzLmNsb25lID0gY2xvbmU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/utils/clone.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/utils/create-custom-error.cjs":
/*!*****************************************************************!*\
  !*** ./node_modules/css-tree/cjs/utils/create-custom-error.cjs ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction createCustomError(name, message) {\n    // use Object.create(), because some VMs prevent setting line/column otherwise\n    // (iOS Safari 10 even throws an exception)\n    const error = Object.create(SyntaxError.prototype);\n    const errorStack = new Error();\n\n    return Object.assign(error, {\n        name,\n        message,\n        get stack() {\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, `${name}: ${message}\\n`);\n        }\n    });\n}\n\nexports.createCustomError = createCustomError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3V0aWxzL2NyZWF0ZS1jdXN0b20tZXJyb3IuY2pzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Nqcy91dGlscy9jcmVhdGUtY3VzdG9tLWVycm9yLmNqcz85YTZhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY3JlYXRlQ3VzdG9tRXJyb3IobmFtZSwgbWVzc2FnZSkge1xuICAgIC8vIHVzZSBPYmplY3QuY3JlYXRlKCksIGJlY2F1c2Ugc29tZSBWTXMgcHJldmVudCBzZXR0aW5nIGxpbmUvY29sdW1uIG90aGVyd2lzZVxuICAgIC8vIChpT1MgU2FmYXJpIDEwIGV2ZW4gdGhyb3dzIGFuIGV4Y2VwdGlvbilcbiAgICBjb25zdCBlcnJvciA9IE9iamVjdC5jcmVhdGUoU3ludGF4RXJyb3IucHJvdG90eXBlKTtcbiAgICBjb25zdCBlcnJvclN0YWNrID0gbmV3IEVycm9yKCk7XG5cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlcnJvciwge1xuICAgICAgICBuYW1lLFxuICAgICAgICBtZXNzYWdlLFxuICAgICAgICBnZXQgc3RhY2soKSB7XG4gICAgICAgICAgICByZXR1cm4gKGVycm9yU3RhY2suc3RhY2sgfHwgJycpLnJlcGxhY2UoL14oLitcXG4pezEsM30vLCBgJHtuYW1lfTogJHttZXNzYWdlfVxcbmApO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbmV4cG9ydHMuY3JlYXRlQ3VzdG9tRXJyb3IgPSBjcmVhdGVDdXN0b21FcnJvcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/utils/create-custom-error.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/utils/ident.cjs":
/*!***************************************************!*\
  !*** ./node_modules/css-tree/cjs/utils/ident.cjs ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst charCodeDefinitions = __webpack_require__(/*! ../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst utils = __webpack_require__(/*! ../tokenizer/utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nfunction decode(str) {\n    const end = str.length - 1;\n    let decoded = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = utils.consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-an-identifier\n// § 2.1. Common Serializing Idioms\nfunction encode(str) {\n    let encoded = '';\n\n    // If the character is the first character and is a \"-\" (U+002D),\n    // and there is no second character, then the escaped character.\n    // Note: That's means a single dash string \"-\" return as escaped dash,\n    // so move the condition out of the main loop\n    if (str.length === 1 && str.charCodeAt(0) === 0x002D) {\n        return '\\\\-';\n    }\n\n    // To serialize an identifier means to create a string represented\n    // by the concatenation of, for each character of the identifier:\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        if (\n            // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F ...\n            // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n            code <= 0x001F || code === 0x007F ||\n            // [or] ... is in the range [0-9] (U+0030 to U+0039),\n            (code >= 0x0030 && code <= 0x0039 && (\n                // If the character is the first character ...\n                i === 0 ||\n                // If the character is the second character ... and the first character is a \"-\" (U+002D)\n                i === 1 && str.charCodeAt(0) === 0x002D\n            ))\n        ) {\n            // ... then the character escaped as code point.\n            encoded += '\\\\' + code.toString(16) + ' ';\n            continue;\n        }\n\n        // If the character is not handled by one of the above rules and is greater\n        // than or equal to U+0080, is \"-\" (U+002D) or \"_\" (U+005F), or is in one\n        // of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to U+005A),\n        // or \\[a-z] (U+0061 to U+007A), then the character itself.\n        if (charCodeDefinitions.isName(code)) {\n            encoded += str.charAt(i);\n        } else {\n            // Otherwise, the escaped character.\n            encoded += '\\\\' + str.charAt(i);\n        }\n    }\n\n    return encoded;\n}\n\nexports.decode = decode;\nexports.encode = encode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3V0aWxzL2lkZW50LmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvdXRpbHMvaWRlbnQuY2pzPzFiZGEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBjaGFyQ29kZURlZmluaXRpb25zID0gcmVxdWlyZSgnLi4vdG9rZW5pemVyL2NoYXItY29kZS1kZWZpbml0aW9ucy5janMnKTtcbmNvbnN0IHV0aWxzID0gcmVxdWlyZSgnLi4vdG9rZW5pemVyL3V0aWxzLmNqcycpO1xuXG5jb25zdCBSRVZFUlNFX1NPTElEVVMgPSAweDAwNWM7IC8vIFUrMDA1QyBSRVZFUlNFIFNPTElEVVMgKFxcKVxuXG5mdW5jdGlvbiBkZWNvZGUoc3RyKSB7XG4gICAgY29uc3QgZW5kID0gc3RyLmxlbmd0aCAtIDE7XG4gICAgbGV0IGRlY29kZWQgPSAnJztcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBjb2RlID0gc3RyLmNoYXJDb2RlQXQoaSk7XG5cbiAgICAgICAgaWYgKGNvZGUgPT09IFJFVkVSU0VfU09MSURVUykge1xuICAgICAgICAgICAgLy8gc3BlY2lhbCBjYXNlIGF0IHRoZSBlbmRpbmdcbiAgICAgICAgICAgIGlmIChpID09PSBlbmQpIHtcbiAgICAgICAgICAgICAgICAvLyBpZiB0aGUgbmV4dCBpbnB1dCBjb2RlIHBvaW50IGlzIEVPRiwgZG8gbm90aGluZ1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb2RlID0gc3RyLmNoYXJDb2RlQXQoKytpKTtcblxuICAgICAgICAgICAgLy8gY29uc3VtZSBlc2NhcGVkXG4gICAgICAgICAgICBpZiAoY2hhckNvZGVEZWZpbml0aW9ucy5pc1ZhbGlkRXNjYXBlKFJFVkVSU0VfU09MSURVUywgY29kZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlc2NhcGVTdGFydCA9IGkgLSAxO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVzY2FwZUVuZCA9IHV0aWxzLmNvbnN1bWVFc2NhcGVkKHN0ciwgZXNjYXBlU3RhcnQpO1xuXG4gICAgICAgICAgICAgICAgaSA9IGVzY2FwZUVuZCAtIDE7XG4gICAgICAgICAgICAgICAgZGVjb2RlZCArPSB1dGlscy5kZWNvZGVFc2NhcGVkKHN0ci5zdWJzdHJpbmcoZXNjYXBlU3RhcnQgKyAxLCBlc2NhcGVFbmQpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gXFxyXFxuXG4gICAgICAgICAgICAgICAgaWYgKGNvZGUgPT09IDB4MDAwZCAmJiBzdHIuY2hhckNvZGVBdChpICsgMSkgPT09IDB4MDAwYSkge1xuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVjb2RlZCArPSBzdHJbaV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGVjb2RlZDtcbn1cblxuLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzc29tLyNzZXJpYWxpemUtYW4taWRlbnRpZmllclxuLy8gwqcgMi4xLiBDb21tb24gU2VyaWFsaXppbmcgSWRpb21zXG5mdW5jdGlvbiBlbmNvZGUoc3RyKSB7XG4gICAgbGV0IGVuY29kZWQgPSAnJztcblxuICAgIC8vIElmIHRoZSBjaGFyYWN0ZXIgaXMgdGhlIGZpcnN0IGNoYXJhY3RlciBhbmQgaXMgYSBcIi1cIiAoVSswMDJEKSxcbiAgICAvLyBhbmQgdGhlcmUgaXMgbm8gc2Vjb25kIGNoYXJhY3RlciwgdGhlbiB0aGUgZXNjYXBlZCBjaGFyYWN0ZXIuXG4gICAgLy8gTm90ZTogVGhhdCdzIG1lYW5zIGEgc2luZ2xlIGRhc2ggc3RyaW5nIFwiLVwiIHJldHVybiBhcyBlc2NhcGVkIGRhc2gsXG4gICAgLy8gc28gbW92ZSB0aGUgY29uZGl0aW9uIG91dCBvZiB0aGUgbWFpbiBsb29wXG4gICAgaWYgKHN0ci5sZW5ndGggPT09IDEgJiYgc3RyLmNoYXJDb2RlQXQoMCkgPT09IDB4MDAyRCkge1xuICAgICAgICByZXR1cm4gJ1xcXFwtJztcbiAgICB9XG5cbiAgICAvLyBUbyBzZXJpYWxpemUgYW4gaWRlbnRpZmllciBtZWFucyB0byBjcmVhdGUgYSBzdHJpbmcgcmVwcmVzZW50ZWRcbiAgICAvLyBieSB0aGUgY29uY2F0ZW5hdGlvbiBvZiwgZm9yIGVhY2ggY2hhcmFjdGVyIG9mIHRoZSBpZGVudGlmaWVyOlxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGNvZGUgPSBzdHIuY2hhckNvZGVBdChpKTtcblxuICAgICAgICAvLyBJZiB0aGUgY2hhcmFjdGVyIGlzIE5VTEwgKFUrMDAwMCksIHRoZW4gdGhlIFJFUExBQ0VNRU5UIENIQVJBQ1RFUiAoVStGRkZEKS5cbiAgICAgICAgaWYgKGNvZGUgPT09IDB4MDAwMCkge1xuICAgICAgICAgICAgZW5jb2RlZCArPSAnXFx1RkZGRCc7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIC8vIElmIHRoZSBjaGFyYWN0ZXIgaXMgaW4gdGhlIHJhbmdlIFtcXDEtXFwxZl0gKFUrMDAwMSB0byBVKzAwMUYpIG9yIGlzIFUrMDA3RiAuLi5cbiAgICAgICAgICAgIC8vIE5vdGU6IERvIG5vdCBjb21wYXJlIHdpdGggMHgwMDAxIHNpbmNlIDB4MDAwMCBpcyBwcmVjZXNzZWQgYmVmb3JlXG4gICAgICAgICAgICBjb2RlIDw9IDB4MDAxRiB8fCBjb2RlID09PSAweDAwN0YgfHxcbiAgICAgICAgICAgIC8vIFtvcl0gLi4uIGlzIGluIHRoZSByYW5nZSBbMC05XSAoVSswMDMwIHRvIFUrMDAzOSksXG4gICAgICAgICAgICAoY29kZSA+PSAweDAwMzAgJiYgY29kZSA8PSAweDAwMzkgJiYgKFxuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBjaGFyYWN0ZXIgaXMgdGhlIGZpcnN0IGNoYXJhY3RlciAuLi5cbiAgICAgICAgICAgICAgICBpID09PSAwIHx8XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIGNoYXJhY3RlciBpcyB0aGUgc2Vjb25kIGNoYXJhY3RlciAuLi4gYW5kIHRoZSBmaXJzdCBjaGFyYWN0ZXIgaXMgYSBcIi1cIiAoVSswMDJEKVxuICAgICAgICAgICAgICAgIGkgPT09IDEgJiYgc3RyLmNoYXJDb2RlQXQoMCkgPT09IDB4MDAyRFxuICAgICAgICAgICAgKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgICAvLyAuLi4gdGhlbiB0aGUgY2hhcmFjdGVyIGVzY2FwZWQgYXMgY29kZSBwb2ludC5cbiAgICAgICAgICAgIGVuY29kZWQgKz0gJ1xcXFwnICsgY29kZS50b1N0cmluZygxNikgKyAnICc7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElmIHRoZSBjaGFyYWN0ZXIgaXMgbm90IGhhbmRsZWQgYnkgb25lIG9mIHRoZSBhYm92ZSBydWxlcyBhbmQgaXMgZ3JlYXRlclxuICAgICAgICAvLyB0aGFuIG9yIGVxdWFsIHRvIFUrMDA4MCwgaXMgXCItXCIgKFUrMDAyRCkgb3IgXCJfXCIgKFUrMDA1RiksIG9yIGlzIGluIG9uZVxuICAgICAgICAvLyBvZiB0aGUgcmFuZ2VzIFswLTldIChVKzAwMzAgdG8gVSswMDM5KSwgW0EtWl0gKFUrMDA0MSB0byBVKzAwNUEpLFxuICAgICAgICAvLyBvciBcXFthLXpdIChVKzAwNjEgdG8gVSswMDdBKSwgdGhlbiB0aGUgY2hhcmFjdGVyIGl0c2VsZi5cbiAgICAgICAgaWYgKGNoYXJDb2RlRGVmaW5pdGlvbnMuaXNOYW1lKGNvZGUpKSB7XG4gICAgICAgICAgICBlbmNvZGVkICs9IHN0ci5jaGFyQXQoaSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBPdGhlcndpc2UsIHRoZSBlc2NhcGVkIGNoYXJhY3Rlci5cbiAgICAgICAgICAgIGVuY29kZWQgKz0gJ1xcXFwnICsgc3RyLmNoYXJBdChpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBlbmNvZGVkO1xufVxuXG5leHBvcnRzLmRlY29kZSA9IGRlY29kZTtcbmV4cG9ydHMuZW5jb2RlID0gZW5jb2RlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/utils/ident.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/utils/names.cjs":
/*!***************************************************!*\
  !*** ./node_modules/css-tree/cjs/utils/names.cjs ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst keywords = new Map();\nconst properties = new Map();\nconst HYPHENMINUS = 45; // '-'.charCodeAt()\n\nconst keyword = getKeywordDescriptor;\nconst property = getPropertyDescriptor;\nconst vendorPrefix = getVendorPrefix;\nfunction isCustomProperty(str, offset) {\n    offset = offset || 0;\n\n    return str.length - offset >= 2 &&\n           str.charCodeAt(offset) === HYPHENMINUS &&\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\n}\n\nfunction getVendorPrefix(str, offset) {\n    offset = offset || 0;\n\n    // verdor prefix should be at least 3 chars length\n    if (str.length - offset >= 3) {\n        // vendor prefix starts with hyper minus following non-hyper minus\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\n            // vendor prefix should contain a hyper minus at the ending\n            const secondDashIndex = str.indexOf('-', offset + 2);\n\n            if (secondDashIndex !== -1) {\n                return str.substring(offset, secondDashIndex + 1);\n            }\n        }\n    }\n\n    return '';\n}\n\nfunction getKeywordDescriptor(keyword) {\n    if (keywords.has(keyword)) {\n        return keywords.get(keyword);\n    }\n\n    const name = keyword.toLowerCase();\n    let descriptor = keywords.get(name);\n\n    if (descriptor === undefined) {\n        const custom = isCustomProperty(name, 0);\n        const vendor = !custom ? getVendorPrefix(name, 0) : '';\n        descriptor = Object.freeze({\n            basename: name.substr(vendor.length),\n            name,\n            prefix: vendor,\n            vendor,\n            custom\n        });\n    }\n\n    keywords.set(keyword, descriptor);\n\n    return descriptor;\n}\n\nfunction getPropertyDescriptor(property) {\n    if (properties.has(property)) {\n        return properties.get(property);\n    }\n\n    let name = property;\n    let hack = property[0];\n\n    if (hack === '/') {\n        hack = property[1] === '/' ? '//' : '/';\n    } else if (hack !== '_' &&\n               hack !== '*' &&\n               hack !== '$' &&\n               hack !== '#' &&\n               hack !== '+' &&\n               hack !== '&') {\n        hack = '';\n    }\n\n    const custom = isCustomProperty(name, hack.length);\n\n    // re-use result when possible (the same as for lower case)\n    if (!custom) {\n        name = name.toLowerCase();\n        if (properties.has(name)) {\n            const descriptor = properties.get(name);\n            properties.set(property, descriptor);\n            return descriptor;\n        }\n    }\n\n    const vendor = !custom ? getVendorPrefix(name, hack.length) : '';\n    const prefix = name.substr(0, hack.length + vendor.length);\n    const descriptor = Object.freeze({\n        basename: name.substr(prefix.length),\n        name: name.substr(hack.length),\n        hack,\n        vendor,\n        prefix,\n        custom\n    });\n\n    properties.set(property, descriptor);\n\n    return descriptor;\n}\n\nexports.isCustomProperty = isCustomProperty;\nexports.keyword = keyword;\nexports.property = property;\nexports.vendorPrefix = vendorPrefix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3V0aWxzL25hbWVzLmNqcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtdHJlZS9janMvdXRpbHMvbmFtZXMuY2pzP2JjOTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBrZXl3b3JkcyA9IG5ldyBNYXAoKTtcbmNvbnN0IHByb3BlcnRpZXMgPSBuZXcgTWFwKCk7XG5jb25zdCBIWVBIRU5NSU5VUyA9IDQ1OyAvLyAnLScuY2hhckNvZGVBdCgpXG5cbmNvbnN0IGtleXdvcmQgPSBnZXRLZXl3b3JkRGVzY3JpcHRvcjtcbmNvbnN0IHByb3BlcnR5ID0gZ2V0UHJvcGVydHlEZXNjcmlwdG9yO1xuY29uc3QgdmVuZG9yUHJlZml4ID0gZ2V0VmVuZG9yUHJlZml4O1xuZnVuY3Rpb24gaXNDdXN0b21Qcm9wZXJ0eShzdHIsIG9mZnNldCkge1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgcmV0dXJuIHN0ci5sZW5ndGggLSBvZmZzZXQgPj0gMiAmJlxuICAgICAgICAgICBzdHIuY2hhckNvZGVBdChvZmZzZXQpID09PSBIWVBIRU5NSU5VUyAmJlxuICAgICAgICAgICBzdHIuY2hhckNvZGVBdChvZmZzZXQgKyAxKSA9PT0gSFlQSEVOTUlOVVM7XG59XG5cbmZ1bmN0aW9uIGdldFZlbmRvclByZWZpeChzdHIsIG9mZnNldCkge1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgLy8gdmVyZG9yIHByZWZpeCBzaG91bGQgYmUgYXQgbGVhc3QgMyBjaGFycyBsZW5ndGhcbiAgICBpZiAoc3RyLmxlbmd0aCAtIG9mZnNldCA+PSAzKSB7XG4gICAgICAgIC8vIHZlbmRvciBwcmVmaXggc3RhcnRzIHdpdGggaHlwZXIgbWludXMgZm9sbG93aW5nIG5vbi1oeXBlciBtaW51c1xuICAgICAgICBpZiAoc3RyLmNoYXJDb2RlQXQob2Zmc2V0KSA9PT0gSFlQSEVOTUlOVVMgJiZcbiAgICAgICAgICAgIHN0ci5jaGFyQ29kZUF0KG9mZnNldCArIDEpICE9PSBIWVBIRU5NSU5VUykge1xuICAgICAgICAgICAgLy8gdmVuZG9yIHByZWZpeCBzaG91bGQgY29udGFpbiBhIGh5cGVyIG1pbnVzIGF0IHRoZSBlbmRpbmdcbiAgICAgICAgICAgIGNvbnN0IHNlY29uZERhc2hJbmRleCA9IHN0ci5pbmRleE9mKCctJywgb2Zmc2V0ICsgMik7XG5cbiAgICAgICAgICAgIGlmIChzZWNvbmREYXNoSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0ci5zdWJzdHJpbmcob2Zmc2V0LCBzZWNvbmREYXNoSW5kZXggKyAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiAnJztcbn1cblxuZnVuY3Rpb24gZ2V0S2V5d29yZERlc2NyaXB0b3Ioa2V5d29yZCkge1xuICAgIGlmIChrZXl3b3Jkcy5oYXMoa2V5d29yZCkpIHtcbiAgICAgICAgcmV0dXJuIGtleXdvcmRzLmdldChrZXl3b3JkKTtcbiAgICB9XG5cbiAgICBjb25zdCBuYW1lID0ga2V5d29yZC50b0xvd2VyQ2FzZSgpO1xuICAgIGxldCBkZXNjcmlwdG9yID0ga2V5d29yZHMuZ2V0KG5hbWUpO1xuXG4gICAgaWYgKGRlc2NyaXB0b3IgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBjdXN0b20gPSBpc0N1c3RvbVByb3BlcnR5KG5hbWUsIDApO1xuICAgICAgICBjb25zdCB2ZW5kb3IgPSAhY3VzdG9tID8gZ2V0VmVuZG9yUHJlZml4KG5hbWUsIDApIDogJyc7XG4gICAgICAgIGRlc2NyaXB0b3IgPSBPYmplY3QuZnJlZXplKHtcbiAgICAgICAgICAgIGJhc2VuYW1lOiBuYW1lLnN1YnN0cih2ZW5kb3IubGVuZ3RoKSxcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBwcmVmaXg6IHZlbmRvcixcbiAgICAgICAgICAgIHZlbmRvcixcbiAgICAgICAgICAgIGN1c3RvbVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBrZXl3b3Jkcy5zZXQoa2V5d29yZCwgZGVzY3JpcHRvcik7XG5cbiAgICByZXR1cm4gZGVzY3JpcHRvcjtcbn1cblxuZnVuY3Rpb24gZ2V0UHJvcGVydHlEZXNjcmlwdG9yKHByb3BlcnR5KSB7XG4gICAgaWYgKHByb3BlcnRpZXMuaGFzKHByb3BlcnR5KSkge1xuICAgICAgICByZXR1cm4gcHJvcGVydGllcy5nZXQocHJvcGVydHkpO1xuICAgIH1cblxuICAgIGxldCBuYW1lID0gcHJvcGVydHk7XG4gICAgbGV0IGhhY2sgPSBwcm9wZXJ0eVswXTtcblxuICAgIGlmIChoYWNrID09PSAnLycpIHtcbiAgICAgICAgaGFjayA9IHByb3BlcnR5WzFdID09PSAnLycgPyAnLy8nIDogJy8nO1xuICAgIH0gZWxzZSBpZiAoaGFjayAhPT0gJ18nICYmXG4gICAgICAgICAgICAgICBoYWNrICE9PSAnKicgJiZcbiAgICAgICAgICAgICAgIGhhY2sgIT09ICckJyAmJlxuICAgICAgICAgICAgICAgaGFjayAhPT0gJyMnICYmXG4gICAgICAgICAgICAgICBoYWNrICE9PSAnKycgJiZcbiAgICAgICAgICAgICAgIGhhY2sgIT09ICcmJykge1xuICAgICAgICBoYWNrID0gJyc7XG4gICAgfVxuXG4gICAgY29uc3QgY3VzdG9tID0gaXNDdXN0b21Qcm9wZXJ0eShuYW1lLCBoYWNrLmxlbmd0aCk7XG5cbiAgICAvLyByZS11c2UgcmVzdWx0IHdoZW4gcG9zc2libGUgKHRoZSBzYW1lIGFzIGZvciBsb3dlciBjYXNlKVxuICAgIGlmICghY3VzdG9tKSB7XG4gICAgICAgIG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLmhhcyhuYW1lKSkge1xuICAgICAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IHByb3BlcnRpZXMuZ2V0KG5hbWUpO1xuICAgICAgICAgICAgcHJvcGVydGllcy5zZXQocHJvcGVydHksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgcmV0dXJuIGRlc2NyaXB0b3I7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCB2ZW5kb3IgPSAhY3VzdG9tID8gZ2V0VmVuZG9yUHJlZml4KG5hbWUsIGhhY2subGVuZ3RoKSA6ICcnO1xuICAgIGNvbnN0IHByZWZpeCA9IG5hbWUuc3Vic3RyKDAsIGhhY2subGVuZ3RoICsgdmVuZG9yLmxlbmd0aCk7XG4gICAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5mcmVlemUoe1xuICAgICAgICBiYXNlbmFtZTogbmFtZS5zdWJzdHIocHJlZml4Lmxlbmd0aCksXG4gICAgICAgIG5hbWU6IG5hbWUuc3Vic3RyKGhhY2subGVuZ3RoKSxcbiAgICAgICAgaGFjayxcbiAgICAgICAgdmVuZG9yLFxuICAgICAgICBwcmVmaXgsXG4gICAgICAgIGN1c3RvbVxuICAgIH0pO1xuXG4gICAgcHJvcGVydGllcy5zZXQocHJvcGVydHksIGRlc2NyaXB0b3IpO1xuXG4gICAgcmV0dXJuIGRlc2NyaXB0b3I7XG59XG5cbmV4cG9ydHMuaXNDdXN0b21Qcm9wZXJ0eSA9IGlzQ3VzdG9tUHJvcGVydHk7XG5leHBvcnRzLmtleXdvcmQgPSBrZXl3b3JkO1xuZXhwb3J0cy5wcm9wZXJ0eSA9IHByb3BlcnR5O1xuZXhwb3J0cy52ZW5kb3JQcmVmaXggPSB2ZW5kb3JQcmVmaXg7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/utils/names.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/utils/string.cjs":
/*!****************************************************!*\
  !*** ./node_modules/css-tree/cjs/utils/string.cjs ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst charCodeDefinitions = __webpack_require__(/*! ../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst utils = __webpack_require__(/*! ../tokenizer/utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;  // \"\nconst APOSTROPHE = 0x0027;      // '\n\nfunction decode(str) {\n    const len = str.length;\n    const firstChar = str.charCodeAt(0);\n    const start = firstChar === QUOTATION_MARK || firstChar === APOSTROPHE ? 1 : 0;\n    const end = start === 1 && len > 1 && str.charCodeAt(len - 1) === firstChar ? len - 2 : len - 1;\n    let decoded = '';\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last quote as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = utils.consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-a-string\n// § 2.1. Common Serializing Idioms\nfunction encode(str, apostrophe) {\n    const quote = apostrophe ? '\\'' : '\"';\n    const quoteCode = apostrophe ? APOSTROPHE : QUOTATION_MARK;\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        // If the character is '\"' (U+0022) or \"\\\" (U+005C), the escaped character.\n        if (code === quoteCode || code === REVERSE_SOLIDUS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && (charCodeDefinitions.isHexDigit(code) || charCodeDefinitions.isWhiteSpace(code))) {\n                encoded += ' ';\n            }\n\n            // Otherwise, the character itself.\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return quote + encoded + quote;\n}\n\nexports.decode = decode;\nexports.encode = encode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3V0aWxzL3N0cmluZy5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3V0aWxzL3N0cmluZy5janM/MWE2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNoYXJDb2RlRGVmaW5pdGlvbnMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvdXRpbHMuY2pzJyk7XG5cbmNvbnN0IFJFVkVSU0VfU09MSURVUyA9IDB4MDA1YzsgLy8gVSswMDVDIFJFVkVSU0UgU09MSURVUyAoXFwpXG5jb25zdCBRVU9UQVRJT05fTUFSSyA9IDB4MDAyMjsgIC8vIFwiXG5jb25zdCBBUE9TVFJPUEhFID0gMHgwMDI3OyAgICAgIC8vICdcblxuZnVuY3Rpb24gZGVjb2RlKHN0cikge1xuICAgIGNvbnN0IGxlbiA9IHN0ci5sZW5ndGg7XG4gICAgY29uc3QgZmlyc3RDaGFyID0gc3RyLmNoYXJDb2RlQXQoMCk7XG4gICAgY29uc3Qgc3RhcnQgPSBmaXJzdENoYXIgPT09IFFVT1RBVElPTl9NQVJLIHx8IGZpcnN0Q2hhciA9PT0gQVBPU1RST1BIRSA/IDEgOiAwO1xuICAgIGNvbnN0IGVuZCA9IHN0YXJ0ID09PSAxICYmIGxlbiA+IDEgJiYgc3RyLmNoYXJDb2RlQXQobGVuIC0gMSkgPT09IGZpcnN0Q2hhciA/IGxlbiAtIDIgOiBsZW4gLSAxO1xuICAgIGxldCBkZWNvZGVkID0gJyc7XG5cbiAgICBmb3IgKGxldCBpID0gc3RhcnQ7IGkgPD0gZW5kOyBpKyspIHtcbiAgICAgICAgbGV0IGNvZGUgPSBzdHIuY2hhckNvZGVBdChpKTtcblxuICAgICAgICBpZiAoY29kZSA9PT0gUkVWRVJTRV9TT0xJRFVTKSB7XG4gICAgICAgICAgICAvLyBzcGVjaWFsIGNhc2UgYXQgdGhlIGVuZGluZ1xuICAgICAgICAgICAgaWYgKGkgPT09IGVuZCkge1xuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBuZXh0IGlucHV0IGNvZGUgcG9pbnQgaXMgRU9GLCBkbyBub3RoaW5nXG4gICAgICAgICAgICAgICAgLy8gb3RoZXJ3aXNlIGluY2x1ZGUgbGFzdCBxdW90ZSBhcyBlc2NhcGVkXG4gICAgICAgICAgICAgICAgaWYgKGkgIT09IGxlbiAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVjb2RlZCA9IHN0ci5zdWJzdHIoaSArIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29kZSA9IHN0ci5jaGFyQ29kZUF0KCsraSk7XG5cbiAgICAgICAgICAgIC8vIGNvbnN1bWUgZXNjYXBlZFxuICAgICAgICAgICAgaWYgKGNoYXJDb2RlRGVmaW5pdGlvbnMuaXNWYWxpZEVzY2FwZShSRVZFUlNFX1NPTElEVVMsIGNvZGUpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXNjYXBlU3RhcnQgPSBpIC0gMTtcbiAgICAgICAgICAgICAgICBjb25zdCBlc2NhcGVFbmQgPSB1dGlscy5jb25zdW1lRXNjYXBlZChzdHIsIGVzY2FwZVN0YXJ0KTtcblxuICAgICAgICAgICAgICAgIGkgPSBlc2NhcGVFbmQgLSAxO1xuICAgICAgICAgICAgICAgIGRlY29kZWQgKz0gdXRpbHMuZGVjb2RlRXNjYXBlZChzdHIuc3Vic3RyaW5nKGVzY2FwZVN0YXJ0ICsgMSwgZXNjYXBlRW5kKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFxcclxcblxuICAgICAgICAgICAgICAgIGlmIChjb2RlID09PSAweDAwMGQgJiYgc3RyLmNoYXJDb2RlQXQoaSArIDEpID09PSAweDAwMGEpIHtcbiAgICAgICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRlY29kZWQgKz0gc3RyW2ldO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRlY29kZWQ7XG59XG5cbi8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jc2VyaWFsaXplLWEtc3RyaW5nXG4vLyDCpyAyLjEuIENvbW1vbiBTZXJpYWxpemluZyBJZGlvbXNcbmZ1bmN0aW9uIGVuY29kZShzdHIsIGFwb3N0cm9waGUpIHtcbiAgICBjb25zdCBxdW90ZSA9IGFwb3N0cm9waGUgPyAnXFwnJyA6ICdcIic7XG4gICAgY29uc3QgcXVvdGVDb2RlID0gYXBvc3Ryb3BoZSA/IEFQT1NUUk9QSEUgOiBRVU9UQVRJT05fTUFSSztcbiAgICBsZXQgZW5jb2RlZCA9ICcnO1xuICAgIGxldCB3c0JlZm9yZUhleElzTmVlZGVkID0gZmFsc2U7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBjb2RlID0gc3RyLmNoYXJDb2RlQXQoaSk7XG5cbiAgICAgICAgLy8gSWYgdGhlIGNoYXJhY3RlciBpcyBOVUxMIChVKzAwMDApLCB0aGVuIHRoZSBSRVBMQUNFTUVOVCBDSEFSQUNURVIgKFUrRkZGRCkuXG4gICAgICAgIGlmIChjb2RlID09PSAweDAwMDApIHtcbiAgICAgICAgICAgIGVuY29kZWQgKz0gJ1xcdUZGRkQnO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJZiB0aGUgY2hhcmFjdGVyIGlzIGluIHRoZSByYW5nZSBbXFwxLVxcMWZdIChVKzAwMDEgdG8gVSswMDFGKSBvciBpcyBVKzAwN0YsXG4gICAgICAgIC8vIHRoZSBjaGFyYWN0ZXIgZXNjYXBlZCBhcyBjb2RlIHBvaW50LlxuICAgICAgICAvLyBOb3RlOiBEbyBub3QgY29tcGFyZSB3aXRoIDB4MDAwMSBzaW5jZSAweDAwMDAgaXMgcHJlY2Vzc2VkIGJlZm9yZVxuICAgICAgICBpZiAoY29kZSA8PSAweDAwMWYgfHwgY29kZSA9PT0gMHgwMDdGKSB7XG4gICAgICAgICAgICBlbmNvZGVkICs9ICdcXFxcJyArIGNvZGUudG9TdHJpbmcoMTYpO1xuICAgICAgICAgICAgd3NCZWZvcmVIZXhJc05lZWRlZCA9IHRydWU7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElmIHRoZSBjaGFyYWN0ZXIgaXMgJ1wiJyAoVSswMDIyKSBvciBcIlxcXCIgKFUrMDA1QyksIHRoZSBlc2NhcGVkIGNoYXJhY3Rlci5cbiAgICAgICAgaWYgKGNvZGUgPT09IHF1b3RlQ29kZSB8fCBjb2RlID09PSBSRVZFUlNFX1NPTElEVVMpIHtcbiAgICAgICAgICAgIGVuY29kZWQgKz0gJ1xcXFwnICsgc3RyLmNoYXJBdChpKTtcbiAgICAgICAgICAgIHdzQmVmb3JlSGV4SXNOZWVkZWQgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh3c0JlZm9yZUhleElzTmVlZGVkICYmIChjaGFyQ29kZURlZmluaXRpb25zLmlzSGV4RGlnaXQoY29kZSkgfHwgY2hhckNvZGVEZWZpbml0aW9ucy5pc1doaXRlU3BhY2UoY29kZSkpKSB7XG4gICAgICAgICAgICAgICAgZW5jb2RlZCArPSAnICc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIE90aGVyd2lzZSwgdGhlIGNoYXJhY3RlciBpdHNlbGYuXG4gICAgICAgICAgICBlbmNvZGVkICs9IHN0ci5jaGFyQXQoaSk7XG4gICAgICAgICAgICB3c0JlZm9yZUhleElzTmVlZGVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcXVvdGUgKyBlbmNvZGVkICsgcXVvdGU7XG59XG5cbmV4cG9ydHMuZGVjb2RlID0gZGVjb2RlO1xuZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGU7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/utils/string.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/utils/url.cjs":
/*!*************************************************!*\
  !*** ./node_modules/css-tree/cjs/utils/url.cjs ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst charCodeDefinitions = __webpack_require__(/*! ../tokenizer/char-code-definitions.cjs */ \"./node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs\");\nconst utils = __webpack_require__(/*! ../tokenizer/utils.cjs */ \"./node_modules/css-tree/cjs/tokenizer/utils.cjs\");\n\nconst SPACE = 0x0020;            // U+0020 SPACE\nconst REVERSE_SOLIDUS = 0x005c;  // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;   // \"\nconst APOSTROPHE = 0x0027;       // '\nconst LEFTPARENTHESIS = 0x0028;  // U+0028 LEFT PARENTHESIS (()\nconst RIGHTPARENTHESIS = 0x0029; // U+0029 RIGHT PARENTHESIS ())\n\nfunction decode(str) {\n    const len = str.length;\n    let start = 4; // length of \"url(\"\n    let end = str.charCodeAt(len - 1) === RIGHTPARENTHESIS ? len - 2 : len - 1;\n    let decoded = '';\n\n    while (start < end && charCodeDefinitions.isWhiteSpace(str.charCodeAt(start))) {\n        start++;\n    }\n\n    while (start < end && charCodeDefinitions.isWhiteSpace(str.charCodeAt(end))) {\n        end--;\n    }\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last left parenthesis as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = utils.consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\nfunction encode(str) {\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        if (code === SPACE ||\n            code === REVERSE_SOLIDUS ||\n            code === QUOTATION_MARK ||\n            code === APOSTROPHE ||\n            code === LEFTPARENTHESIS ||\n            code === RIGHTPARENTHESIS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && charCodeDefinitions.isHexDigit(code)) {\n                encoded += ' ';\n            }\n\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return 'url(' + encoded + ')';\n}\n\nexports.decode = decode;\nexports.encode = encode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3V0aWxzL3VybC5janMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvY2pzL3V0aWxzL3VybC5janM/M2M1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNoYXJDb2RlRGVmaW5pdGlvbnMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvY2hhci1jb2RlLWRlZmluaXRpb25zLmNqcycpO1xuY29uc3QgdXRpbHMgPSByZXF1aXJlKCcuLi90b2tlbml6ZXIvdXRpbHMuY2pzJyk7XG5cbmNvbnN0IFNQQUNFID0gMHgwMDIwOyAgICAgICAgICAgIC8vIFUrMDAyMCBTUEFDRVxuY29uc3QgUkVWRVJTRV9TT0xJRFVTID0gMHgwMDVjOyAgLy8gVSswMDVDIFJFVkVSU0UgU09MSURVUyAoXFwpXG5jb25zdCBRVU9UQVRJT05fTUFSSyA9IDB4MDAyMjsgICAvLyBcIlxuY29uc3QgQVBPU1RST1BIRSA9IDB4MDAyNzsgICAgICAgLy8gJ1xuY29uc3QgTEVGVFBBUkVOVEhFU0lTID0gMHgwMDI4OyAgLy8gVSswMDI4IExFRlQgUEFSRU5USEVTSVMgKCgpXG5jb25zdCBSSUdIVFBBUkVOVEhFU0lTID0gMHgwMDI5OyAvLyBVKzAwMjkgUklHSFQgUEFSRU5USEVTSVMgKCkpXG5cbmZ1bmN0aW9uIGRlY29kZShzdHIpIHtcbiAgICBjb25zdCBsZW4gPSBzdHIubGVuZ3RoO1xuICAgIGxldCBzdGFydCA9IDQ7IC8vIGxlbmd0aCBvZiBcInVybChcIlxuICAgIGxldCBlbmQgPSBzdHIuY2hhckNvZGVBdChsZW4gLSAxKSA9PT0gUklHSFRQQVJFTlRIRVNJUyA/IGxlbiAtIDIgOiBsZW4gLSAxO1xuICAgIGxldCBkZWNvZGVkID0gJyc7XG5cbiAgICB3aGlsZSAoc3RhcnQgPCBlbmQgJiYgY2hhckNvZGVEZWZpbml0aW9ucy5pc1doaXRlU3BhY2Uoc3RyLmNoYXJDb2RlQXQoc3RhcnQpKSkge1xuICAgICAgICBzdGFydCsrO1xuICAgIH1cblxuICAgIHdoaWxlIChzdGFydCA8IGVuZCAmJiBjaGFyQ29kZURlZmluaXRpb25zLmlzV2hpdGVTcGFjZShzdHIuY2hhckNvZGVBdChlbmQpKSkge1xuICAgICAgICBlbmQtLTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gc3RhcnQ7IGkgPD0gZW5kOyBpKyspIHtcbiAgICAgICAgbGV0IGNvZGUgPSBzdHIuY2hhckNvZGVBdChpKTtcblxuICAgICAgICBpZiAoY29kZSA9PT0gUkVWRVJTRV9TT0xJRFVTKSB7XG4gICAgICAgICAgICAvLyBzcGVjaWFsIGNhc2UgYXQgdGhlIGVuZGluZ1xuICAgICAgICAgICAgaWYgKGkgPT09IGVuZCkge1xuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBuZXh0IGlucHV0IGNvZGUgcG9pbnQgaXMgRU9GLCBkbyBub3RoaW5nXG4gICAgICAgICAgICAgICAgLy8gb3RoZXJ3aXNlIGluY2x1ZGUgbGFzdCBsZWZ0IHBhcmVudGhlc2lzIGFzIGVzY2FwZWRcbiAgICAgICAgICAgICAgICBpZiAoaSAhPT0gbGVuIC0gMSkge1xuICAgICAgICAgICAgICAgICAgICBkZWNvZGVkID0gc3RyLnN1YnN0cihpICsgMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb2RlID0gc3RyLmNoYXJDb2RlQXQoKytpKTtcblxuICAgICAgICAgICAgLy8gY29uc3VtZSBlc2NhcGVkXG4gICAgICAgICAgICBpZiAoY2hhckNvZGVEZWZpbml0aW9ucy5pc1ZhbGlkRXNjYXBlKFJFVkVSU0VfU09MSURVUywgY29kZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlc2NhcGVTdGFydCA9IGkgLSAxO1xuICAgICAgICAgICAgICAgIGNvbnN0IGVzY2FwZUVuZCA9IHV0aWxzLmNvbnN1bWVFc2NhcGVkKHN0ciwgZXNjYXBlU3RhcnQpO1xuXG4gICAgICAgICAgICAgICAgaSA9IGVzY2FwZUVuZCAtIDE7XG4gICAgICAgICAgICAgICAgZGVjb2RlZCArPSB1dGlscy5kZWNvZGVFc2NhcGVkKHN0ci5zdWJzdHJpbmcoZXNjYXBlU3RhcnQgKyAxLCBlc2NhcGVFbmQpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gXFxyXFxuXG4gICAgICAgICAgICAgICAgaWYgKGNvZGUgPT09IDB4MDAwZCAmJiBzdHIuY2hhckNvZGVBdChpICsgMSkgPT09IDB4MDAwYSkge1xuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVjb2RlZCArPSBzdHJbaV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGVjb2RlZDtcbn1cblxuZnVuY3Rpb24gZW5jb2RlKHN0cikge1xuICAgIGxldCBlbmNvZGVkID0gJyc7XG4gICAgbGV0IHdzQmVmb3JlSGV4SXNOZWVkZWQgPSBmYWxzZTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGNvZGUgPSBzdHIuY2hhckNvZGVBdChpKTtcblxuICAgICAgICAvLyBJZiB0aGUgY2hhcmFjdGVyIGlzIE5VTEwgKFUrMDAwMCksIHRoZW4gdGhlIFJFUExBQ0VNRU5UIENIQVJBQ1RFUiAoVStGRkZEKS5cbiAgICAgICAgaWYgKGNvZGUgPT09IDB4MDAwMCkge1xuICAgICAgICAgICAgZW5jb2RlZCArPSAnXFx1RkZGRCc7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElmIHRoZSBjaGFyYWN0ZXIgaXMgaW4gdGhlIHJhbmdlIFtcXDEtXFwxZl0gKFUrMDAwMSB0byBVKzAwMUYpIG9yIGlzIFUrMDA3RixcbiAgICAgICAgLy8gdGhlIGNoYXJhY3RlciBlc2NhcGVkIGFzIGNvZGUgcG9pbnQuXG4gICAgICAgIC8vIE5vdGU6IERvIG5vdCBjb21wYXJlIHdpdGggMHgwMDAxIHNpbmNlIDB4MDAwMCBpcyBwcmVjZXNzZWQgYmVmb3JlXG4gICAgICAgIGlmIChjb2RlIDw9IDB4MDAxZiB8fCBjb2RlID09PSAweDAwN0YpIHtcbiAgICAgICAgICAgIGVuY29kZWQgKz0gJ1xcXFwnICsgY29kZS50b1N0cmluZygxNik7XG4gICAgICAgICAgICB3c0JlZm9yZUhleElzTmVlZGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvZGUgPT09IFNQQUNFIHx8XG4gICAgICAgICAgICBjb2RlID09PSBSRVZFUlNFX1NPTElEVVMgfHxcbiAgICAgICAgICAgIGNvZGUgPT09IFFVT1RBVElPTl9NQVJLIHx8XG4gICAgICAgICAgICBjb2RlID09PSBBUE9TVFJPUEhFIHx8XG4gICAgICAgICAgICBjb2RlID09PSBMRUZUUEFSRU5USEVTSVMgfHxcbiAgICAgICAgICAgIGNvZGUgPT09IFJJR0hUUEFSRU5USEVTSVMpIHtcbiAgICAgICAgICAgIGVuY29kZWQgKz0gJ1xcXFwnICsgc3RyLmNoYXJBdChpKTtcbiAgICAgICAgICAgIHdzQmVmb3JlSGV4SXNOZWVkZWQgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh3c0JlZm9yZUhleElzTmVlZGVkICYmIGNoYXJDb2RlRGVmaW5pdGlvbnMuaXNIZXhEaWdpdChjb2RlKSkge1xuICAgICAgICAgICAgICAgIGVuY29kZWQgKz0gJyAnO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBlbmNvZGVkICs9IHN0ci5jaGFyQXQoaSk7XG4gICAgICAgICAgICB3c0JlZm9yZUhleElzTmVlZGVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gJ3VybCgnICsgZW5jb2RlZCArICcpJztcbn1cblxuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG5leHBvcnRzLmVuY29kZSA9IGVuY29kZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/utils/url.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/cjs/walker/create.cjs":
/*!*****************************************************!*\
  !*** ./node_modules/css-tree/cjs/walker/create.cjs ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nconst { hasOwnProperty } = Object.prototype;\nconst noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const walkers = [];\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        let fieldTypes = structure[key];\n        const walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(fieldTypes)) {\n            fieldTypes = [fieldTypes];\n        }\n\n        for (const fieldType of fieldTypes) {\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    const types = {};\n\n    for (const name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            const nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    const fields = config.fields.slice();\n    const contextName = config.context;\n    const useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk, walkReducer) {\n        let prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (const field of fields) {\n            const ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    var breakWalk = reverse\n                        ? ref.reduceRight(walkReducer, false)\n                        : ref.reduce(walkReducer, false);\n\n                    if (breakWalk) {\n                        return true;\n                    }\n                } else if (walk(ref)) {\n                    return true;\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap({\n    StyleSheet,\n    Atrule,\n    Rule,\n    Block,\n    DeclarationList\n}) {\n    return {\n        Atrule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Rule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Declaration: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block,\n            DeclarationList\n        }\n    };\n}\n\nfunction createWalker(config) {\n    const types = getTypesFromConfig(config);\n    const iteratorsNatural = {};\n    const iteratorsReverse = {};\n    const breakWalk = Symbol('break-walk');\n    const skipNode = Symbol('skip-node');\n\n    for (const name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    const fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    const fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    const walk = function(root, options) {\n        function walkNode(node, item, list) {\n            var enterRet = enter.call(context, node, item, list);\n\n            if (enterRet === breakWalk) {\n                return true;\n            }\n\n            if (enterRet === skipNode) {\n                return false;\n            }\n\n            if (iterators.hasOwnProperty(node.type)) {\n                if (iterators[node.type](node, context, walkNode, walkReducer)) {\n                    return true;\n                }\n            }\n\n            if (leave.call(context, node, item, list) === breakWalk) {\n                return true;\n            }\n\n            return false;\n        }\n\n        let enter = noop;\n        let leave = noop;\n        let iterators = iteratorsNatural;\n        let walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);\n        const context = {\n            break: breakWalk,\n            skip: skipNode,\n\n            root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).sort().join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        walkNode(root);\n    };\n\n    walk.break = breakWalk;\n    walk.skip = skipNode;\n\n    walk.find = function(ast, fn) {\n        let found = null;\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found = node;\n                return breakWalk;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        let found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter: function(node, item, list) {\n                if (fn.call(this, node, item, list)) {\n                    found = node;\n                    return breakWalk;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        const found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n}\n\nexports.createWalker = createWalker;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/cjs/walker/create.cjs\n");

/***/ }),

/***/ "./node_modules/css-tree/dist/data.js":
/*!********************************************!*\
  !*** ./node_modules/css-tree/dist/data.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    \"generic\": true,\n    \"types\": {\n        \"absolute-size\": \"xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large\",\n        \"alpha-value\": \"<number>|<percentage>\",\n        \"angle-percentage\": \"<angle>|<percentage>\",\n        \"angular-color-hint\": \"<angle-percentage>\",\n        \"angular-color-stop\": \"<color>&&<color-stop-angle>?\",\n        \"angular-color-stop-list\": \"[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>\",\n        \"animateable-feature\": \"scroll-position|contents|<custom-ident>\",\n        \"attachment\": \"scroll|fixed|local\",\n        \"attr()\": \"attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )\",\n        \"attr-matcher\": \"['~'|'|'|'^'|'$'|'*']? '='\",\n        \"attr-modifier\": \"i|s\",\n        \"attribute-selector\": \"'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'\",\n        \"auto-repeat\": \"repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"auto-track-list\": \"[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?\",\n        \"baseline-position\": \"[first|last]? baseline\",\n        \"basic-shape\": \"<inset()>|<circle()>|<ellipse()>|<polygon()>|<path()>\",\n        \"bg-image\": \"none|<image>\",\n        \"bg-layer\": \"<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"bg-position\": \"[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]\",\n        \"bg-size\": \"[<length-percentage>|auto]{1,2}|cover|contain\",\n        \"blur()\": \"blur( <length> )\",\n        \"blend-mode\": \"normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity\",\n        \"box\": \"border-box|padding-box|content-box\",\n        \"brightness()\": \"brightness( <number-percentage> )\",\n        \"calc()\": \"calc( <calc-sum> )\",\n        \"calc-sum\": \"<calc-product> [['+'|'-'] <calc-product>]*\",\n        \"calc-product\": \"<calc-value> ['*' <calc-value>|'/' <number>]*\",\n        \"calc-value\": \"<number>|<dimension>|<percentage>|( <calc-sum> )\",\n        \"cf-final-image\": \"<image>|<color>\",\n        \"cf-mixing-image\": \"<percentage>?&&<image>\",\n        \"circle()\": \"circle( [<shape-radius>]? [at <position>]? )\",\n        \"clamp()\": \"clamp( <calc-sum>#{3} )\",\n        \"class-selector\": \"'.' <ident-token>\",\n        \"clip-source\": \"<url>\",\n        \"color\": \"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hex-color>|<named-color>|currentcolor|<deprecated-system-color>\",\n        \"color-stop\": \"<color-stop-length>|<color-stop-angle>\",\n        \"color-stop-angle\": \"<angle-percentage>{1,2}\",\n        \"color-stop-length\": \"<length-percentage>{1,2}\",\n        \"color-stop-list\": \"[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>\",\n        \"combinator\": \"'>'|'+'|'~'|['||']\",\n        \"common-lig-values\": \"[common-ligatures|no-common-ligatures]\",\n        \"compat-auto\": \"searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button\",\n        \"composite-style\": \"clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor\",\n        \"compositing-operator\": \"add|subtract|intersect|exclude\",\n        \"compound-selector\": \"[<type-selector>? <subclass-selector>* [<pseudo-element-selector> <pseudo-class-selector>*]*]!\",\n        \"compound-selector-list\": \"<compound-selector>#\",\n        \"complex-selector\": \"<compound-selector> [<combinator>? <compound-selector>]*\",\n        \"complex-selector-list\": \"<complex-selector>#\",\n        \"conic-gradient()\": \"conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"contextual-alt-values\": \"[contextual|no-contextual]\",\n        \"content-distribution\": \"space-between|space-around|space-evenly|stretch\",\n        \"content-list\": \"[<string>|contents|<image>|<quote>|<target>|<leader()>|<attr()>|counter( <ident> , <'list-style-type'>? )]+\",\n        \"content-position\": \"center|start|end|flex-start|flex-end\",\n        \"content-replacement\": \"<image>\",\n        \"contrast()\": \"contrast( [<number-percentage>] )\",\n        \"counter()\": \"counter( <custom-ident> , <counter-style>? )\",\n        \"counter-style\": \"<counter-style-name>|symbols( )\",\n        \"counter-style-name\": \"<custom-ident>\",\n        \"counters()\": \"counters( <custom-ident> , <string> , <counter-style>? )\",\n        \"cross-fade()\": \"cross-fade( <cf-mixing-image> , <cf-final-image>? )\",\n        \"cubic-bezier-timing-function\": \"ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )\",\n        \"deprecated-system-color\": \"ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText\",\n        \"discretionary-lig-values\": \"[discretionary-ligatures|no-discretionary-ligatures]\",\n        \"display-box\": \"contents|none\",\n        \"display-inside\": \"flow|flow-root|table|flex|grid|ruby\",\n        \"display-internal\": \"table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container\",\n        \"display-legacy\": \"inline-block|inline-list-item|inline-table|inline-flex|inline-grid\",\n        \"display-listitem\": \"<display-outside>?&&[flow|flow-root]?&&list-item\",\n        \"display-outside\": \"block|inline|run-in\",\n        \"drop-shadow()\": \"drop-shadow( <length>{2,3} <color>? )\",\n        \"east-asian-variant-values\": \"[jis78|jis83|jis90|jis04|simplified|traditional]\",\n        \"east-asian-width-values\": \"[full-width|proportional-width]\",\n        \"element()\": \"element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )\",\n        \"ellipse()\": \"ellipse( [<shape-radius>{2}]? [at <position>]? )\",\n        \"ending-shape\": \"circle|ellipse\",\n        \"env()\": \"env( <custom-ident> , <declaration-value>? )\",\n        \"explicit-track-list\": \"[<line-names>? <track-size>]+ <line-names>?\",\n        \"family-name\": \"<string>|<custom-ident>+\",\n        \"feature-tag-value\": \"<string> [<integer>|on|off]?\",\n        \"feature-type\": \"@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation\",\n        \"feature-value-block\": \"<feature-type> '{' <feature-value-declaration-list> '}'\",\n        \"feature-value-block-list\": \"<feature-value-block>+\",\n        \"feature-value-declaration\": \"<custom-ident> : <integer>+ ;\",\n        \"feature-value-declaration-list\": \"<feature-value-declaration>\",\n        \"feature-value-name\": \"<custom-ident>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"filter-function\": \"<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>\",\n        \"filter-function-list\": \"[<filter-function>|<url>]+\",\n        \"final-bg-layer\": \"<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"fit-content()\": \"fit-content( [<length>|<percentage>] )\",\n        \"fixed-breadth\": \"<length-percentage>\",\n        \"fixed-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"fixed-size\": \"<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )\",\n        \"font-stretch-absolute\": \"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>\",\n        \"font-variant-css21\": \"[normal|small-caps]\",\n        \"font-weight-absolute\": \"normal|bold|<number [1,1000]>\",\n        \"frequency-percentage\": \"<frequency>|<percentage>\",\n        \"general-enclosed\": \"[<function-token> <any-value> )]|( <ident> <any-value> )\",\n        \"generic-family\": \"serif|sans-serif|cursive|fantasy|monospace|-apple-system\",\n        \"generic-name\": \"serif|sans-serif|cursive|fantasy|monospace\",\n        \"geometry-box\": \"<shape-box>|fill-box|stroke-box|view-box\",\n        \"gradient\": \"<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<-legacy-gradient>\",\n        \"grayscale()\": \"grayscale( <number-percentage> )\",\n        \"grid-line\": \"auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]\",\n        \"historical-lig-values\": \"[historical-ligatures|no-historical-ligatures]\",\n        \"hsl()\": \"hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hsla()\": \"hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hue\": \"<number>|<angle>\",\n        \"hue-rotate()\": \"hue-rotate( <angle> )\",\n        \"image\": \"<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>\",\n        \"image()\": \"image( <image-tags>? [<image-src>? , <color>?]! )\",\n        \"image-set()\": \"image-set( <image-set-option># )\",\n        \"image-set-option\": \"[<image>|<string>] [<resolution>||type( <string> )]\",\n        \"image-src\": \"<url>|<string>\",\n        \"image-tags\": \"ltr|rtl\",\n        \"inflexible-breadth\": \"<length>|<percentage>|min-content|max-content|auto\",\n        \"inset()\": \"inset( <length-percentage>{1,4} [round <'border-radius'>]? )\",\n        \"invert()\": \"invert( <number-percentage> )\",\n        \"keyframes-name\": \"<custom-ident>|<string>\",\n        \"keyframe-block\": \"<keyframe-selector># { <declaration-list> }\",\n        \"keyframe-block-list\": \"<keyframe-block>+\",\n        \"keyframe-selector\": \"from|to|<percentage>\",\n        \"leader()\": \"leader( <leader-type> )\",\n        \"leader-type\": \"dotted|solid|space|<string>\",\n        \"length-percentage\": \"<length>|<percentage>\",\n        \"line-names\": \"'[' <custom-ident>* ']'\",\n        \"line-name-list\": \"[<line-names>|<name-repeat>]+\",\n        \"line-style\": \"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n        \"line-width\": \"<length>|thin|medium|thick\",\n        \"linear-color-hint\": \"<length-percentage>\",\n        \"linear-color-stop\": \"<color> <color-stop-length>?\",\n        \"linear-gradient()\": \"linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"mask-layer\": \"<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>\",\n        \"mask-position\": \"[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?\",\n        \"mask-reference\": \"none|<image>|<mask-source>\",\n        \"mask-source\": \"<url>\",\n        \"masking-mode\": \"alpha|luminance|match-source\",\n        \"matrix()\": \"matrix( <number>#{6} )\",\n        \"matrix3d()\": \"matrix3d( <number>#{16} )\",\n        \"max()\": \"max( <calc-sum># )\",\n        \"media-and\": \"<media-in-parens> [and <media-in-parens>]+\",\n        \"media-condition\": \"<media-not>|<media-and>|<media-or>|<media-in-parens>\",\n        \"media-condition-without-or\": \"<media-not>|<media-and>|<media-in-parens>\",\n        \"media-feature\": \"( [<mf-plain>|<mf-boolean>|<mf-range>] )\",\n        \"media-in-parens\": \"( <media-condition> )|<media-feature>|<general-enclosed>\",\n        \"media-not\": \"not <media-in-parens>\",\n        \"media-or\": \"<media-in-parens> [or <media-in-parens>]+\",\n        \"media-query\": \"<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?\",\n        \"media-query-list\": \"<media-query>#\",\n        \"media-type\": \"<ident>\",\n        \"mf-boolean\": \"<mf-name>\",\n        \"mf-name\": \"<ident>\",\n        \"mf-plain\": \"<mf-name> : <mf-value>\",\n        \"mf-range\": \"<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>\",\n        \"mf-value\": \"<number>|<dimension>|<ident>|<ratio>\",\n        \"min()\": \"min( <calc-sum># )\",\n        \"minmax()\": \"minmax( [<length>|<percentage>|min-content|max-content|auto] , [<length>|<percentage>|<flex>|min-content|max-content|auto] )\",\n        \"named-color\": \"transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|<-non-standard-color>\",\n        \"namespace-prefix\": \"<ident>\",\n        \"ns-prefix\": \"[<ident-token>|'*']? '|'\",\n        \"number-percentage\": \"<number>|<percentage>\",\n        \"numeric-figure-values\": \"[lining-nums|oldstyle-nums]\",\n        \"numeric-fraction-values\": \"[diagonal-fractions|stacked-fractions]\",\n        \"numeric-spacing-values\": \"[proportional-nums|tabular-nums]\",\n        \"nth\": \"<an-plus-b>|even|odd\",\n        \"opacity()\": \"opacity( [<number-percentage>] )\",\n        \"overflow-position\": \"unsafe|safe\",\n        \"outline-radius\": \"<length>|<percentage>\",\n        \"page-body\": \"<declaration>? [; <page-body>]?|<page-margin-box> <page-body>\",\n        \"page-margin-box\": \"<page-margin-box-type> '{' <declaration-list> '}'\",\n        \"page-margin-box-type\": \"@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom\",\n        \"page-selector-list\": \"[<page-selector>#]?\",\n        \"page-selector\": \"<pseudo-page>+|<ident> <pseudo-page>*\",\n        \"page-size\": \"A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger\",\n        \"path()\": \"path( [<fill-rule> ,]? <string> )\",\n        \"paint()\": \"paint( <ident> , <declaration-value>? )\",\n        \"perspective()\": \"perspective( <length> )\",\n        \"polygon()\": \"polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )\",\n        \"position\": \"[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]\",\n        \"pseudo-class-selector\": \"':' <ident-token>|':' <function-token> <any-value> ')'\",\n        \"pseudo-element-selector\": \"':' <pseudo-class-selector>\",\n        \"pseudo-page\": \": [left|right|first|blank]\",\n        \"quote\": \"open-quote|close-quote|no-open-quote|no-close-quote\",\n        \"radial-gradient()\": \"radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"relative-selector\": \"<combinator>? <complex-selector>\",\n        \"relative-selector-list\": \"<relative-selector>#\",\n        \"relative-size\": \"larger|smaller\",\n        \"repeat-style\": \"repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}\",\n        \"repeating-linear-gradient()\": \"repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"repeating-radial-gradient()\": \"repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"rgb()\": \"rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )\",\n        \"rgba()\": \"rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )\",\n        \"rotate()\": \"rotate( [<angle>|<zero>] )\",\n        \"rotate3d()\": \"rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )\",\n        \"rotateX()\": \"rotateX( [<angle>|<zero>] )\",\n        \"rotateY()\": \"rotateY( [<angle>|<zero>] )\",\n        \"rotateZ()\": \"rotateZ( [<angle>|<zero>] )\",\n        \"saturate()\": \"saturate( <number-percentage> )\",\n        \"scale()\": \"scale( <number> , <number>? )\",\n        \"scale3d()\": \"scale3d( <number> , <number> , <number> )\",\n        \"scaleX()\": \"scaleX( <number> )\",\n        \"scaleY()\": \"scaleY( <number> )\",\n        \"scaleZ()\": \"scaleZ( <number> )\",\n        \"self-position\": \"center|start|end|self-start|self-end|flex-start|flex-end\",\n        \"shape-radius\": \"<length-percentage>|closest-side|farthest-side\",\n        \"skew()\": \"skew( [<angle>|<zero>] , [<angle>|<zero>]? )\",\n        \"skewX()\": \"skewX( [<angle>|<zero>] )\",\n        \"skewY()\": \"skewY( [<angle>|<zero>] )\",\n        \"sepia()\": \"sepia( <number-percentage> )\",\n        \"shadow\": \"inset?&&<length>{2,4}&&<color>?\",\n        \"shadow-t\": \"[<length>{2,3}&&<color>?]\",\n        \"shape\": \"rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )\",\n        \"shape-box\": \"<box>|margin-box\",\n        \"side-or-corner\": \"[left|right]||[top|bottom]\",\n        \"single-animation\": \"<time>||<easing-function>||<time>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]\",\n        \"single-animation-direction\": \"normal|reverse|alternate|alternate-reverse\",\n        \"single-animation-fill-mode\": \"none|forwards|backwards|both\",\n        \"single-animation-iteration-count\": \"infinite|<number>\",\n        \"single-animation-play-state\": \"running|paused\",\n        \"single-transition\": \"[none|<single-transition-property>]||<time>||<easing-function>||<time>\",\n        \"single-transition-property\": \"all|<custom-ident>\",\n        \"size\": \"closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}\",\n        \"step-position\": \"jump-start|jump-end|jump-none|jump-both|start|end\",\n        \"step-timing-function\": \"step-start|step-end|steps( <integer> [, <step-position>]? )\",\n        \"subclass-selector\": \"<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>\",\n        \"supports-condition\": \"not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*\",\n        \"supports-in-parens\": \"( <supports-condition> )|<supports-feature>|<general-enclosed>\",\n        \"supports-feature\": \"<supports-decl>|<supports-selector-fn>\",\n        \"supports-decl\": \"( <declaration> )\",\n        \"supports-selector-fn\": \"selector( <complex-selector> )\",\n        \"symbol\": \"<string>|<image>|<custom-ident>\",\n        \"target\": \"<target-counter()>|<target-counters()>|<target-text()>\",\n        \"target-counter()\": \"target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )\",\n        \"target-counters()\": \"target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )\",\n        \"target-text()\": \"target-text( [<string>|<url>] , [content|before|after|first-letter]? )\",\n        \"time-percentage\": \"<time>|<percentage>\",\n        \"easing-function\": \"linear|<cubic-bezier-timing-function>|<step-timing-function>\",\n        \"track-breadth\": \"<length-percentage>|<flex>|min-content|max-content|auto\",\n        \"track-list\": \"[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?\",\n        \"track-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <track-size>]+ <line-names>? )\",\n        \"track-size\": \"<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( [<length>|<percentage>] )\",\n        \"transform-function\": \"<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>\",\n        \"transform-list\": \"<transform-function>+\",\n        \"translate()\": \"translate( <length-percentage> , <length-percentage>? )\",\n        \"translate3d()\": \"translate3d( <length-percentage> , <length-percentage> , <length> )\",\n        \"translateX()\": \"translateX( <length-percentage> )\",\n        \"translateY()\": \"translateY( <length-percentage> )\",\n        \"translateZ()\": \"translateZ( <length> )\",\n        \"type-or-unit\": \"string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%\",\n        \"type-selector\": \"<wq-name>|<ns-prefix>? '*'\",\n        \"var()\": \"var( <custom-property-name> , <declaration-value>? )\",\n        \"viewport-length\": \"auto|<length-percentage>\",\n        \"visual-box\": \"content-box|padding-box|border-box\",\n        \"wq-name\": \"<ns-prefix>? <ident-token>\",\n        \"-legacy-gradient\": \"<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>\",\n        \"-legacy-linear-gradient\": \"-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-repeating-linear-gradient\": \"-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-linear-gradient-arguments\": \"[<angle>|<side-or-corner>]? , <color-stop-list>\",\n        \"-legacy-radial-gradient\": \"-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-repeating-radial-gradient\": \"-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-radial-gradient-arguments\": \"[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>\",\n        \"-legacy-radial-gradient-size\": \"closest-side|closest-corner|farthest-side|farthest-corner|contain|cover\",\n        \"-legacy-radial-gradient-shape\": \"circle|ellipse\",\n        \"-non-standard-font\": \"-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body\",\n        \"-non-standard-color\": \"-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text\",\n        \"-non-standard-image-rendering\": \"optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast\",\n        \"-non-standard-overflow\": \"-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable\",\n        \"-non-standard-width\": \"fill-available|min-intrinsic|intrinsic|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content|-webkit-min-content|-webkit-max-content\",\n        \"-webkit-gradient()\": \"-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )\",\n        \"-webkit-gradient-color-stop\": \"from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )\",\n        \"-webkit-gradient-point\": \"[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]\",\n        \"-webkit-gradient-radius\": \"<length>|<percentage>\",\n        \"-webkit-gradient-type\": \"linear|radial\",\n        \"-webkit-mask-box-repeat\": \"repeat|stretch|round\",\n        \"-webkit-mask-clip-style\": \"border|border-box|padding|padding-box|content|content-box|text\",\n        \"-ms-filter-function-list\": \"<-ms-filter-function>+\",\n        \"-ms-filter-function\": \"<-ms-filter-function-progid>|<-ms-filter-function-legacy>\",\n        \"-ms-filter-function-progid\": \"'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]\",\n        \"-ms-filter-function-legacy\": \"<ident-token>|<function-token> <any-value>? )\",\n        \"-ms-filter\": \"<string>\",\n        \"age\": \"child|young|old\",\n        \"attr-name\": \"<wq-name>\",\n        \"attr-fallback\": \"<any-value>\",\n        \"border-radius\": \"<length-percentage>{1,2}\",\n        \"bottom\": \"<length>|auto\",\n        \"generic-voice\": \"[<age>? <gender> <integer>?]\",\n        \"gender\": \"male|female|neutral\",\n        \"left\": \"<length>|auto\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"name-repeat\": \"repeat( [<positive-integer>|auto-fill] , <line-names>+ )\",\n        \"paint\": \"none|<color>|<url> [none|<color>]?|context-fill|context-stroke\",\n        \"ratio\": \"<integer> / <integer>\",\n        \"right\": \"<length>|auto\",\n        \"svg-length\": \"<percentage>|<length>|<number>\",\n        \"svg-writing-mode\": \"lr-tb|rl-tb|tb-rl|lr|rl|tb\",\n        \"top\": \"<length>|auto\",\n        \"track-group\": \"'(' [<string>* <track-minmax> <string>*]+ ')' ['[' <positive-integer> ']']?|<track-minmax>\",\n        \"track-list-v0\": \"[<string>* <track-group> <string>*]+|none\",\n        \"track-minmax\": \"minmax( <track-breadth> , <track-breadth> )|auto|<track-breadth>|fit-content\",\n        \"x\": \"<number>\",\n        \"y\": \"<number>\",\n        \"declaration\": \"<ident-token> : <declaration-value>? ['!' important]?\",\n        \"declaration-list\": \"[<declaration>? ';']* <declaration>?\",\n        \"url\": \"url( <string> <url-modifier>* )|<url-token>\",\n        \"url-modifier\": \"<ident>|<function-token> <any-value> )\",\n        \"number-zero-one\": \"<number [0,1]>\",\n        \"number-one-or-greater\": \"<number [1,∞]>\",\n        \"positive-integer\": \"<integer [0,∞]>\",\n        \"-non-standard-display\": \"-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box\"\n    },\n    \"properties\": {\n        \"--*\": \"<declaration-value>\",\n        \"-ms-accelerator\": \"false|true\",\n        \"-ms-block-progression\": \"tb|rl|bt|lr\",\n        \"-ms-content-zoom-chaining\": \"none|chained\",\n        \"-ms-content-zooming\": \"none|zoom\",\n        \"-ms-content-zoom-limit\": \"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\n        \"-ms-content-zoom-limit-max\": \"<percentage>\",\n        \"-ms-content-zoom-limit-min\": \"<percentage>\",\n        \"-ms-content-zoom-snap\": \"<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>\",\n        \"-ms-content-zoom-snap-points\": \"snapInterval( <percentage> , <percentage> )|snapList( <percentage># )\",\n        \"-ms-content-zoom-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-filter\": \"<string>\",\n        \"-ms-flow-from\": \"[none|<custom-ident>]#\",\n        \"-ms-flow-into\": \"[none|<custom-ident>]#\",\n        \"-ms-grid-columns\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-grid-rows\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-high-contrast-adjust\": \"auto|none\",\n        \"-ms-hyphenate-limit-chars\": \"auto|<integer>{1,3}\",\n        \"-ms-hyphenate-limit-lines\": \"no-limit|<integer>\",\n        \"-ms-hyphenate-limit-zone\": \"<percentage>|<length>\",\n        \"-ms-ime-align\": \"auto|after\",\n        \"-ms-overflow-style\": \"auto|none|scrollbar|-ms-autohiding-scrollbar\",\n        \"-ms-scrollbar-3dlight-color\": \"<color>\",\n        \"-ms-scrollbar-arrow-color\": \"<color>\",\n        \"-ms-scrollbar-base-color\": \"<color>\",\n        \"-ms-scrollbar-darkshadow-color\": \"<color>\",\n        \"-ms-scrollbar-face-color\": \"<color>\",\n        \"-ms-scrollbar-highlight-color\": \"<color>\",\n        \"-ms-scrollbar-shadow-color\": \"<color>\",\n        \"-ms-scrollbar-track-color\": \"<color>\",\n        \"-ms-scroll-chaining\": \"chained|none\",\n        \"-ms-scroll-limit\": \"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\n        \"-ms-scroll-limit-x-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-x-min\": \"<length>\",\n        \"-ms-scroll-limit-y-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-y-min\": \"<length>\",\n        \"-ms-scroll-rails\": \"none|railed\",\n        \"-ms-scroll-snap-points-x\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-points-y\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-scroll-snap-x\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\n        \"-ms-scroll-snap-y\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\n        \"-ms-scroll-translation\": \"none|vertical-to-horizontal\",\n        \"-ms-text-autospace\": \"none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\",\n        \"-ms-touch-select\": \"grippers|none\",\n        \"-ms-user-select\": \"none|element|text\",\n        \"-ms-wrap-flow\": \"auto|both|start|end|maximum|clear\",\n        \"-ms-wrap-margin\": \"<length>\",\n        \"-ms-wrap-through\": \"wrap|none\",\n        \"-moz-appearance\": \"none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized\",\n        \"-moz-binding\": \"<url>|none\",\n        \"-moz-border-bottom-colors\": \"<color>+|none\",\n        \"-moz-border-left-colors\": \"<color>+|none\",\n        \"-moz-border-right-colors\": \"<color>+|none\",\n        \"-moz-border-top-colors\": \"<color>+|none\",\n        \"-moz-context-properties\": \"none|[fill|fill-opacity|stroke|stroke-opacity]#\",\n        \"-moz-float-edge\": \"border-box|content-box|margin-box|padding-box\",\n        \"-moz-force-broken-image-icon\": \"0|1\",\n        \"-moz-image-region\": \"<shape>|auto\",\n        \"-moz-orient\": \"inline|block|horizontal|vertical\",\n        \"-moz-outline-radius\": \"<outline-radius>{1,4} [/ <outline-radius>{1,4}]?\",\n        \"-moz-outline-radius-bottomleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-bottomright\": \"<outline-radius>\",\n        \"-moz-outline-radius-topleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-topright\": \"<outline-radius>\",\n        \"-moz-stack-sizing\": \"ignore|stretch-to-fit\",\n        \"-moz-text-blink\": \"none|blink\",\n        \"-moz-user-focus\": \"ignore|normal|select-after|select-before|select-menu|select-same|select-all|none\",\n        \"-moz-user-input\": \"auto|none|enabled|disabled\",\n        \"-moz-user-modify\": \"read-only|read-write|write-only\",\n        \"-moz-window-dragging\": \"drag|no-drag\",\n        \"-moz-window-shadow\": \"default|menu|tooltip|sheet|none\",\n        \"-webkit-appearance\": \"none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button\",\n        \"-webkit-border-before\": \"<'border-width'>||<'border-style'>||<color>\",\n        \"-webkit-border-before-color\": \"<color>\",\n        \"-webkit-border-before-style\": \"<'border-style'>\",\n        \"-webkit-border-before-width\": \"<'border-width'>\",\n        \"-webkit-box-reflect\": \"[above|below|right|left]? <length>? <image>?\",\n        \"-webkit-line-clamp\": \"none|<integer>\",\n        \"-webkit-mask\": \"[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#\",\n        \"-webkit-mask-attachment\": \"<attachment>#\",\n        \"-webkit-mask-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-mask-composite\": \"<composite-style>#\",\n        \"-webkit-mask-image\": \"<mask-reference>#\",\n        \"-webkit-mask-origin\": \"[<box>|border|padding|content]#\",\n        \"-webkit-mask-position\": \"<position>#\",\n        \"-webkit-mask-position-x\": \"[<length-percentage>|left|center|right]#\",\n        \"-webkit-mask-position-y\": \"[<length-percentage>|top|center|bottom]#\",\n        \"-webkit-mask-repeat\": \"<repeat-style>#\",\n        \"-webkit-mask-repeat-x\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-repeat-y\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-size\": \"<bg-size>#\",\n        \"-webkit-overflow-scrolling\": \"auto|touch\",\n        \"-webkit-tap-highlight-color\": \"<color>\",\n        \"-webkit-text-fill-color\": \"<color>\",\n        \"-webkit-text-stroke\": \"<length>||<color>\",\n        \"-webkit-text-stroke-color\": \"<color>\",\n        \"-webkit-text-stroke-width\": \"<length>\",\n        \"-webkit-touch-callout\": \"default|none\",\n        \"-webkit-user-modify\": \"read-only|read-write|read-write-plaintext-only\",\n        \"accent-color\": \"auto|<color>\",\n        \"align-content\": \"normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>\",\n        \"align-items\": \"normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]\",\n        \"align-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>\",\n        \"align-tracks\": \"[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#\",\n        \"all\": \"initial|inherit|unset|revert\",\n        \"animation\": \"<single-animation>#\",\n        \"animation-delay\": \"<time>#\",\n        \"animation-direction\": \"<single-animation-direction>#\",\n        \"animation-duration\": \"<time>#\",\n        \"animation-fill-mode\": \"<single-animation-fill-mode>#\",\n        \"animation-iteration-count\": \"<single-animation-iteration-count>#\",\n        \"animation-name\": \"[none|<keyframes-name>]#\",\n        \"animation-play-state\": \"<single-animation-play-state>#\",\n        \"animation-timing-function\": \"<easing-function>#\",\n        \"appearance\": \"none|auto|textfield|menulist-button|<compat-auto>\",\n        \"aspect-ratio\": \"auto|<ratio>\",\n        \"azimuth\": \"<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards\",\n        \"backdrop-filter\": \"none|<filter-function-list>\",\n        \"backface-visibility\": \"visible|hidden\",\n        \"background\": \"[<bg-layer> ,]* <final-bg-layer>\",\n        \"background-attachment\": \"<attachment>#\",\n        \"background-blend-mode\": \"<blend-mode>#\",\n        \"background-clip\": \"<box>#\",\n        \"background-color\": \"<color>\",\n        \"background-image\": \"<bg-image>#\",\n        \"background-origin\": \"<box>#\",\n        \"background-position\": \"<bg-position>#\",\n        \"background-position-x\": \"[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#\",\n        \"background-position-y\": \"[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#\",\n        \"background-repeat\": \"<repeat-style>#\",\n        \"background-size\": \"<bg-size>#\",\n        \"block-overflow\": \"clip|ellipsis|<string>\",\n        \"block-size\": \"<'width'>\",\n        \"border\": \"<line-width>||<line-style>||<color>\",\n        \"border-block\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-color\": \"<'border-top-color'>{1,2}\",\n        \"border-block-style\": \"<'border-top-style'>\",\n        \"border-block-width\": \"<'border-top-width'>\",\n        \"border-block-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-end-color\": \"<'border-top-color'>\",\n        \"border-block-end-style\": \"<'border-top-style'>\",\n        \"border-block-end-width\": \"<'border-top-width'>\",\n        \"border-block-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-start-color\": \"<'border-top-color'>\",\n        \"border-block-start-style\": \"<'border-top-style'>\",\n        \"border-block-start-width\": \"<'border-top-width'>\",\n        \"border-bottom\": \"<line-width>||<line-style>||<color>\",\n        \"border-bottom-color\": \"<'border-top-color'>\",\n        \"border-bottom-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-style\": \"<line-style>\",\n        \"border-bottom-width\": \"<line-width>\",\n        \"border-collapse\": \"collapse|separate\",\n        \"border-color\": \"<color>{1,4}\",\n        \"border-end-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-end-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-image\": \"<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>\",\n        \"border-image-outset\": \"[<length>|<number>]{1,4}\",\n        \"border-image-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"border-image-slice\": \"<number-percentage>{1,4}&&fill?\",\n        \"border-image-source\": \"none|<image>\",\n        \"border-image-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"border-inline\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-color\": \"<'border-top-color'>{1,2}\",\n        \"border-inline-style\": \"<'border-top-style'>\",\n        \"border-inline-width\": \"<'border-top-width'>\",\n        \"border-inline-end-color\": \"<'border-top-color'>\",\n        \"border-inline-end-style\": \"<'border-top-style'>\",\n        \"border-inline-end-width\": \"<'border-top-width'>\",\n        \"border-inline-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-start-color\": \"<'border-top-color'>\",\n        \"border-inline-start-style\": \"<'border-top-style'>\",\n        \"border-inline-start-width\": \"<'border-top-width'>\",\n        \"border-left\": \"<line-width>||<line-style>||<color>\",\n        \"border-left-color\": \"<color>\",\n        \"border-left-style\": \"<line-style>\",\n        \"border-left-width\": \"<line-width>\",\n        \"border-radius\": \"<length-percentage>{1,4} [/ <length-percentage>{1,4}]?\",\n        \"border-right\": \"<line-width>||<line-style>||<color>\",\n        \"border-right-color\": \"<color>\",\n        \"border-right-style\": \"<line-style>\",\n        \"border-right-width\": \"<line-width>\",\n        \"border-spacing\": \"<length> <length>?\",\n        \"border-start-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-start-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-style\": \"<line-style>{1,4}\",\n        \"border-top\": \"<line-width>||<line-style>||<color>\",\n        \"border-top-color\": \"<color>\",\n        \"border-top-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-style\": \"<line-style>\",\n        \"border-top-width\": \"<line-width>\",\n        \"border-width\": \"<line-width>{1,4}\",\n        \"bottom\": \"<length>|<percentage>|auto\",\n        \"box-align\": \"start|center|end|baseline|stretch\",\n        \"box-decoration-break\": \"slice|clone\",\n        \"box-direction\": \"normal|reverse|inherit\",\n        \"box-flex\": \"<number>\",\n        \"box-flex-group\": \"<integer>\",\n        \"box-lines\": \"single|multiple\",\n        \"box-ordinal-group\": \"<integer>\",\n        \"box-orient\": \"horizontal|vertical|inline-axis|block-axis|inherit\",\n        \"box-pack\": \"start|center|end|justify\",\n        \"box-shadow\": \"none|<shadow>#\",\n        \"box-sizing\": \"content-box|border-box\",\n        \"break-after\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-before\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-inside\": \"auto|avoid|avoid-page|avoid-column|avoid-region\",\n        \"caption-side\": \"top|bottom|block-start|block-end|inline-start|inline-end\",\n        \"caret-color\": \"auto|<color>\",\n        \"clear\": \"none|left|right|both|inline-start|inline-end\",\n        \"clip\": \"<shape>|auto\",\n        \"clip-path\": \"<clip-source>|[<basic-shape>||<geometry-box>]|none\",\n        \"color\": \"<color>\",\n        \"color-adjust\": \"economy|exact\",\n        \"color-scheme\": \"normal|[light|dark|<custom-ident>]+\",\n        \"column-count\": \"<integer>|auto\",\n        \"column-fill\": \"auto|balance|balance-all\",\n        \"column-gap\": \"normal|<length-percentage>\",\n        \"column-rule\": \"<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>\",\n        \"column-rule-color\": \"<color>\",\n        \"column-rule-style\": \"<'border-style'>\",\n        \"column-rule-width\": \"<'border-width'>\",\n        \"column-span\": \"none|all\",\n        \"column-width\": \"<length>|auto\",\n        \"columns\": \"<'column-width'>||<'column-count'>\",\n        \"contain\": \"none|strict|content|[size||layout||style||paint]\",\n        \"content\": \"normal|none|[<content-replacement>|<content-list>] [/ <string>]?\",\n        \"content-visibility\": \"visible|auto|hidden\",\n        \"counter-increment\": \"[<custom-ident> <integer>?]+|none\",\n        \"counter-reset\": \"[<custom-ident> <integer>?]+|none\",\n        \"counter-set\": \"[<custom-ident> <integer>?]+|none\",\n        \"cursor\": \"[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]\",\n        \"direction\": \"ltr|rtl\",\n        \"display\": \"[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>\",\n        \"empty-cells\": \"show|hide\",\n        \"filter\": \"none|<filter-function-list>|<-ms-filter-function-list>\",\n        \"flex\": \"none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]\",\n        \"flex-basis\": \"content|<'width'>\",\n        \"flex-direction\": \"row|row-reverse|column|column-reverse\",\n        \"flex-flow\": \"<'flex-direction'>||<'flex-wrap'>\",\n        \"flex-grow\": \"<number>\",\n        \"flex-shrink\": \"<number>\",\n        \"flex-wrap\": \"nowrap|wrap|wrap-reverse\",\n        \"float\": \"left|right|none|inline-start|inline-end\",\n        \"font\": \"[[<'font-style'>||<font-variant-css21>||<'font-weight'>||<'font-stretch'>]? <'font-size'> [/ <'line-height'>]? <'font-family'>]|caption|icon|menu|message-box|small-caption|status-bar\",\n        \"font-family\": \"[<family-name>|<generic-family>]#\",\n        \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n        \"font-kerning\": \"auto|normal|none\",\n        \"font-language-override\": \"normal|<string>\",\n        \"font-optical-sizing\": \"auto|none\",\n        \"font-variation-settings\": \"normal|[<string> <number>]#\",\n        \"font-size\": \"<absolute-size>|<relative-size>|<length-percentage>\",\n        \"font-size-adjust\": \"none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]\",\n        \"font-smooth\": \"auto|never|always|<absolute-size>|<length>\",\n        \"font-stretch\": \"<font-stretch-absolute>\",\n        \"font-style\": \"normal|italic|oblique <angle>?\",\n        \"font-synthesis\": \"none|[weight||style||small-caps]\",\n        \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-alternates\": \"normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]\",\n        \"font-variant-caps\": \"normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps\",\n        \"font-variant-east-asian\": \"normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-ligatures\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]\",\n        \"font-variant-numeric\": \"normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]\",\n        \"font-variant-position\": \"normal|sub|super\",\n        \"font-weight\": \"<font-weight-absolute>|bolder|lighter\",\n        \"forced-color-adjust\": \"auto|none\",\n        \"gap\": \"<'row-gap'> <'column-gap'>?\",\n        \"grid\": \"<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>\",\n        \"grid-area\": \"<grid-line> [/ <grid-line>]{0,3}\",\n        \"grid-auto-columns\": \"<track-size>+\",\n        \"grid-auto-flow\": \"[row|column]||dense\",\n        \"grid-auto-rows\": \"<track-size>+\",\n        \"grid-column\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-column-end\": \"<grid-line>\",\n        \"grid-column-gap\": \"<length-percentage>\",\n        \"grid-column-start\": \"<grid-line>\",\n        \"grid-gap\": \"<'grid-row-gap'> <'grid-column-gap'>?\",\n        \"grid-row\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-row-end\": \"<grid-line>\",\n        \"grid-row-gap\": \"<length-percentage>\",\n        \"grid-row-start\": \"<grid-line>\",\n        \"grid-template\": \"none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?\",\n        \"grid-template-areas\": \"none|<string>+\",\n        \"grid-template-columns\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"grid-template-rows\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"hanging-punctuation\": \"none|[first||[force-end|allow-end]||last]\",\n        \"height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"hyphens\": \"none|manual|auto\",\n        \"image-orientation\": \"from-image|<angle>|[<angle>? flip]\",\n        \"image-rendering\": \"auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>\",\n        \"image-resolution\": \"[from-image||<resolution>]&&snap?\",\n        \"ime-mode\": \"auto|normal|active|inactive|disabled\",\n        \"initial-letter\": \"normal|[<number> <integer>?]\",\n        \"initial-letter-align\": \"[auto|alphabetic|hanging|ideographic]\",\n        \"inline-size\": \"<'width'>\",\n        \"inset\": \"<'top'>{1,4}\",\n        \"inset-block\": \"<'top'>{1,2}\",\n        \"inset-block-end\": \"<'top'>\",\n        \"inset-block-start\": \"<'top'>\",\n        \"inset-inline\": \"<'top'>{1,2}\",\n        \"inset-inline-end\": \"<'top'>\",\n        \"inset-inline-start\": \"<'top'>\",\n        \"isolation\": \"auto|isolate\",\n        \"justify-content\": \"normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]\",\n        \"justify-items\": \"normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]\",\n        \"justify-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]\",\n        \"justify-tracks\": \"[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#\",\n        \"left\": \"<length>|<percentage>|auto\",\n        \"letter-spacing\": \"normal|<length-percentage>\",\n        \"line-break\": \"auto|loose|normal|strict|anywhere\",\n        \"line-clamp\": \"none|<integer>\",\n        \"line-height\": \"normal|<number>|<length>|<percentage>\",\n        \"line-height-step\": \"<length>\",\n        \"list-style\": \"<'list-style-type'>||<'list-style-position'>||<'list-style-image'>\",\n        \"list-style-image\": \"<image>|none\",\n        \"list-style-position\": \"inside|outside\",\n        \"list-style-type\": \"<counter-style>|<string>|none\",\n        \"margin\": \"[<length>|<percentage>|auto]{1,4}\",\n        \"margin-block\": \"<'margin-left'>{1,2}\",\n        \"margin-block-end\": \"<'margin-left'>\",\n        \"margin-block-start\": \"<'margin-left'>\",\n        \"margin-bottom\": \"<length>|<percentage>|auto\",\n        \"margin-inline\": \"<'margin-left'>{1,2}\",\n        \"margin-inline-end\": \"<'margin-left'>\",\n        \"margin-inline-start\": \"<'margin-left'>\",\n        \"margin-left\": \"<length>|<percentage>|auto\",\n        \"margin-right\": \"<length>|<percentage>|auto\",\n        \"margin-top\": \"<length>|<percentage>|auto\",\n        \"margin-trim\": \"none|in-flow|all\",\n        \"mask\": \"<mask-layer>#\",\n        \"mask-border\": \"<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>\",\n        \"mask-border-mode\": \"luminance|alpha\",\n        \"mask-border-outset\": \"[<length>|<number>]{1,4}\",\n        \"mask-border-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"mask-border-slice\": \"<number-percentage>{1,4} fill?\",\n        \"mask-border-source\": \"none|<image>\",\n        \"mask-border-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"mask-clip\": \"[<geometry-box>|no-clip]#\",\n        \"mask-composite\": \"<compositing-operator>#\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"mask-mode\": \"<masking-mode>#\",\n        \"mask-origin\": \"<geometry-box>#\",\n        \"mask-position\": \"<position>#\",\n        \"mask-repeat\": \"<repeat-style>#\",\n        \"mask-size\": \"<bg-size>#\",\n        \"mask-type\": \"luminance|alpha\",\n        \"masonry-auto-flow\": \"[pack|next]||[definite-first|ordered]\",\n        \"math-style\": \"normal|compact\",\n        \"max-block-size\": \"<'max-width'>\",\n        \"max-height\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"max-inline-size\": \"<'max-width'>\",\n        \"max-lines\": \"none|<integer>\",\n        \"max-width\": \"none|<length-percentage>|min-content|max-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"min-block-size\": \"<'min-width'>\",\n        \"min-height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"min-inline-size\": \"<'min-width'>\",\n        \"min-width\": \"auto|<length-percentage>|min-content|max-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"mix-blend-mode\": \"<blend-mode>\",\n        \"object-fit\": \"fill|contain|cover|none|scale-down\",\n        \"object-position\": \"<position>\",\n        \"offset\": \"[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?\",\n        \"offset-anchor\": \"auto|<position>\",\n        \"offset-distance\": \"<length-percentage>\",\n        \"offset-path\": \"none|ray( [<angle>&&<size>&&contain?] )|<path()>|<url>|[<basic-shape>||<geometry-box>]\",\n        \"offset-position\": \"auto|<position>\",\n        \"offset-rotate\": \"[auto|reverse]||<angle>\",\n        \"opacity\": \"<alpha-value>\",\n        \"order\": \"<integer>\",\n        \"orphans\": \"<integer>\",\n        \"outline\": \"[<'outline-color'>||<'outline-style'>||<'outline-width'>]\",\n        \"outline-color\": \"<color>|invert\",\n        \"outline-offset\": \"<length>\",\n        \"outline-style\": \"auto|<'border-style'>\",\n        \"outline-width\": \"<line-width>\",\n        \"overflow\": \"[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>\",\n        \"overflow-anchor\": \"auto|none\",\n        \"overflow-block\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-clip-box\": \"padding-box|content-box\",\n        \"overflow-clip-margin\": \"<visual-box>||<length [0,∞]>\",\n        \"overflow-inline\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-wrap\": \"normal|break-word|anywhere\",\n        \"overflow-x\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-y\": \"visible|hidden|clip|scroll|auto\",\n        \"overscroll-behavior\": \"[contain|none|auto]{1,2}\",\n        \"overscroll-behavior-block\": \"contain|none|auto\",\n        \"overscroll-behavior-inline\": \"contain|none|auto\",\n        \"overscroll-behavior-x\": \"contain|none|auto\",\n        \"overscroll-behavior-y\": \"contain|none|auto\",\n        \"padding\": \"[<length>|<percentage>]{1,4}\",\n        \"padding-block\": \"<'padding-left'>{1,2}\",\n        \"padding-block-end\": \"<'padding-left'>\",\n        \"padding-block-start\": \"<'padding-left'>\",\n        \"padding-bottom\": \"<length>|<percentage>\",\n        \"padding-inline\": \"<'padding-left'>{1,2}\",\n        \"padding-inline-end\": \"<'padding-left'>\",\n        \"padding-inline-start\": \"<'padding-left'>\",\n        \"padding-left\": \"<length>|<percentage>\",\n        \"padding-right\": \"<length>|<percentage>\",\n        \"padding-top\": \"<length>|<percentage>\",\n        \"page-break-after\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-before\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-inside\": \"auto|avoid\",\n        \"paint-order\": \"normal|[fill||stroke||markers]\",\n        \"perspective\": \"none|<length>\",\n        \"perspective-origin\": \"<position>\",\n        \"place-content\": \"<'align-content'> <'justify-content'>?\",\n        \"place-items\": \"<'align-items'> <'justify-items'>?\",\n        \"place-self\": \"<'align-self'> <'justify-self'>?\",\n        \"pointer-events\": \"auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit\",\n        \"position\": \"static|relative|absolute|sticky|fixed|-webkit-sticky\",\n        \"quotes\": \"none|auto|[<string> <string>]+\",\n        \"resize\": \"none|both|horizontal|vertical|block|inline\",\n        \"right\": \"<length>|<percentage>|auto\",\n        \"rotate\": \"none|<angle>|[x|y|z|<number>{3}]&&<angle>\",\n        \"row-gap\": \"normal|<length-percentage>\",\n        \"ruby-align\": \"start|center|space-between|space-around\",\n        \"ruby-merge\": \"separate|collapse|auto\",\n        \"ruby-position\": \"[alternate||[over|under]]|inter-character\",\n        \"scale\": \"none|<number>{1,3}\",\n        \"scrollbar-color\": \"auto|<color>{2}\",\n        \"scrollbar-gutter\": \"auto|stable&&both-edges?\",\n        \"scrollbar-width\": \"auto|thin|none\",\n        \"scroll-behavior\": \"auto|smooth\",\n        \"scroll-margin\": \"<length>{1,4}\",\n        \"scroll-margin-block\": \"<length>{1,2}\",\n        \"scroll-margin-block-start\": \"<length>\",\n        \"scroll-margin-block-end\": \"<length>\",\n        \"scroll-margin-bottom\": \"<length>\",\n        \"scroll-margin-inline\": \"<length>{1,2}\",\n        \"scroll-margin-inline-start\": \"<length>\",\n        \"scroll-margin-inline-end\": \"<length>\",\n        \"scroll-margin-left\": \"<length>\",\n        \"scroll-margin-right\": \"<length>\",\n        \"scroll-margin-top\": \"<length>\",\n        \"scroll-padding\": \"[auto|<length-percentage>]{1,4}\",\n        \"scroll-padding-block\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-block-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-block-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-bottom\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-inline-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-left\": \"auto|<length-percentage>\",\n        \"scroll-padding-right\": \"auto|<length-percentage>\",\n        \"scroll-padding-top\": \"auto|<length-percentage>\",\n        \"scroll-snap-align\": \"[none|start|end|center]{1,2}\",\n        \"scroll-snap-coordinate\": \"none|<position>#\",\n        \"scroll-snap-destination\": \"<position>\",\n        \"scroll-snap-points-x\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-points-y\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-stop\": \"normal|always\",\n        \"scroll-snap-type\": \"none|[x|y|block|inline|both] [mandatory|proximity]?\",\n        \"scroll-snap-type-x\": \"none|mandatory|proximity\",\n        \"scroll-snap-type-y\": \"none|mandatory|proximity\",\n        \"shape-image-threshold\": \"<alpha-value>\",\n        \"shape-margin\": \"<length-percentage>\",\n        \"shape-outside\": \"none|[<shape-box>||<basic-shape>]|<image>\",\n        \"tab-size\": \"<integer>|<length>\",\n        \"table-layout\": \"auto|fixed\",\n        \"text-align\": \"start|end|left|right|center|justify|match-parent\",\n        \"text-align-last\": \"auto|start|end|left|right|center|justify\",\n        \"text-combine-upright\": \"none|all|[digits <integer>?]\",\n        \"text-decoration\": \"<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>\",\n        \"text-decoration-color\": \"<color>\",\n        \"text-decoration-line\": \"none|[underline||overline||line-through||blink]|spelling-error|grammar-error\",\n        \"text-decoration-skip\": \"none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]\",\n        \"text-decoration-skip-ink\": \"auto|all|none\",\n        \"text-decoration-style\": \"solid|double|dotted|dashed|wavy\",\n        \"text-decoration-thickness\": \"auto|from-font|<length>|<percentage>\",\n        \"text-emphasis\": \"<'text-emphasis-style'>||<'text-emphasis-color'>\",\n        \"text-emphasis-color\": \"<color>\",\n        \"text-emphasis-position\": \"[over|under]&&[right|left]\",\n        \"text-emphasis-style\": \"none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>\",\n        \"text-indent\": \"<length-percentage>&&hanging?&&each-line?\",\n        \"text-justify\": \"auto|inter-character|inter-word|none\",\n        \"text-orientation\": \"mixed|upright|sideways\",\n        \"text-overflow\": \"[clip|ellipsis|<string>]{1,2}\",\n        \"text-rendering\": \"auto|optimizeSpeed|optimizeLegibility|geometricPrecision\",\n        \"text-shadow\": \"none|<shadow-t>#\",\n        \"text-size-adjust\": \"none|auto|<percentage>\",\n        \"text-transform\": \"none|capitalize|uppercase|lowercase|full-width|full-size-kana\",\n        \"text-underline-offset\": \"auto|<length>|<percentage>\",\n        \"text-underline-position\": \"auto|from-font|[under||[left|right]]\",\n        \"top\": \"<length>|<percentage>|auto\",\n        \"touch-action\": \"auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation\",\n        \"transform\": \"none|<transform-list>\",\n        \"transform-box\": \"content-box|border-box|fill-box|stroke-box|view-box\",\n        \"transform-origin\": \"[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?\",\n        \"transform-style\": \"flat|preserve-3d\",\n        \"transition\": \"<single-transition>#\",\n        \"transition-delay\": \"<time>#\",\n        \"transition-duration\": \"<time>#\",\n        \"transition-property\": \"none|<single-transition-property>#\",\n        \"transition-timing-function\": \"<easing-function>#\",\n        \"translate\": \"none|<length-percentage> [<length-percentage> <length>?]?\",\n        \"unicode-bidi\": \"normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext\",\n        \"user-select\": \"auto|text|none|contain|all\",\n        \"vertical-align\": \"baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>\",\n        \"visibility\": \"visible|hidden|collapse\",\n        \"white-space\": \"normal|pre|nowrap|pre-wrap|pre-line|break-spaces\",\n        \"widows\": \"<integer>\",\n        \"width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|fit-content|-moz-fit-content|-webkit-fit-content\",\n        \"will-change\": \"auto|<animateable-feature>#\",\n        \"word-break\": \"normal|break-all|keep-all|break-word\",\n        \"word-spacing\": \"normal|<length>\",\n        \"word-wrap\": \"normal|break-word\",\n        \"writing-mode\": \"horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>\",\n        \"z-index\": \"auto|<integer>\",\n        \"zoom\": \"normal|reset|<number>|<percentage>\",\n        \"-moz-background-clip\": \"padding|border\",\n        \"-moz-border-radius-bottomleft\": \"<'border-bottom-left-radius'>\",\n        \"-moz-border-radius-bottomright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-border-radius-topleft\": \"<'border-top-left-radius'>\",\n        \"-moz-border-radius-topright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-control-character-visibility\": \"visible|hidden\",\n        \"-moz-osx-font-smoothing\": \"auto|grayscale\",\n        \"-moz-user-select\": \"none|text|all|-moz-none\",\n        \"-ms-flex-align\": \"start|end|center|baseline|stretch\",\n        \"-ms-flex-item-align\": \"auto|start|end|center|baseline|stretch\",\n        \"-ms-flex-line-pack\": \"start|end|center|justify|distribute|stretch\",\n        \"-ms-flex-negative\": \"<'flex-shrink'>\",\n        \"-ms-flex-pack\": \"start|end|center|justify|distribute\",\n        \"-ms-flex-order\": \"<integer>\",\n        \"-ms-flex-positive\": \"<'flex-grow'>\",\n        \"-ms-flex-preferred-size\": \"<'flex-basis'>\",\n        \"-ms-interpolation-mode\": \"nearest-neighbor|bicubic\",\n        \"-ms-grid-column-align\": \"start|end|center|stretch\",\n        \"-ms-grid-row-align\": \"start|end|center|stretch\",\n        \"-ms-hyphenate-limit-last\": \"none|always|column|page|spread\",\n        \"-webkit-background-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-column-break-after\": \"always|auto|avoid\",\n        \"-webkit-column-break-before\": \"always|auto|avoid\",\n        \"-webkit-column-break-inside\": \"always|auto|avoid\",\n        \"-webkit-font-smoothing\": \"auto|none|antialiased|subpixel-antialiased\",\n        \"-webkit-mask-box-image\": \"[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?\",\n        \"-webkit-print-color-adjust\": \"economy|exact\",\n        \"-webkit-text-security\": \"none|circle|disc|square\",\n        \"-webkit-user-drag\": \"none|element|auto\",\n        \"-webkit-user-select\": \"auto|none|text|all\",\n        \"alignment-baseline\": \"auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical\",\n        \"baseline-shift\": \"baseline|sub|super|<svg-length>\",\n        \"behavior\": \"<url>+\",\n        \"clip-rule\": \"nonzero|evenodd\",\n        \"cue\": \"<'cue-before'> <'cue-after'>?\",\n        \"cue-after\": \"<url> <decibel>?|none\",\n        \"cue-before\": \"<url> <decibel>?|none\",\n        \"dominant-baseline\": \"auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\",\n        \"fill\": \"<paint>\",\n        \"fill-opacity\": \"<number-zero-one>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"glyph-orientation-horizontal\": \"<angle>\",\n        \"glyph-orientation-vertical\": \"<angle>\",\n        \"kerning\": \"auto|<svg-length>\",\n        \"marker\": \"none|<url>\",\n        \"marker-end\": \"none|<url>\",\n        \"marker-mid\": \"none|<url>\",\n        \"marker-start\": \"none|<url>\",\n        \"pause\": \"<'pause-before'> <'pause-after'>?\",\n        \"pause-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"pause-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest\": \"<'rest-before'> <'rest-after'>?\",\n        \"rest-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"shape-rendering\": \"auto|optimizeSpeed|crispEdges|geometricPrecision\",\n        \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n        \"speak\": \"auto|none|normal\",\n        \"speak-as\": \"normal|spell-out||digits||[literal-punctuation|no-punctuation]\",\n        \"stroke\": \"<paint>\",\n        \"stroke-dasharray\": \"none|[<svg-length>+]#\",\n        \"stroke-dashoffset\": \"<svg-length>\",\n        \"stroke-linecap\": \"butt|round|square\",\n        \"stroke-linejoin\": \"miter|round|bevel\",\n        \"stroke-miterlimit\": \"<number-one-or-greater>\",\n        \"stroke-opacity\": \"<number-zero-one>\",\n        \"stroke-width\": \"<svg-length>\",\n        \"text-anchor\": \"start|middle|end\",\n        \"unicode-range\": \"<urange>#\",\n        \"voice-balance\": \"<number>|left|center|right|leftwards|rightwards\",\n        \"voice-duration\": \"auto|<time>\",\n        \"voice-family\": \"[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve\",\n        \"voice-pitch\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-range\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-rate\": \"[normal|x-slow|slow|medium|fast|x-fast]||<percentage>\",\n        \"voice-stress\": \"normal|strong|moderate|none|reduced\",\n        \"voice-volume\": \"silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]\"\n    },\n    \"atrules\": {\n        \"charset\": {\n            \"prelude\": \"<string>\",\n            \"descriptors\": null\n        },\n        \"counter-style\": {\n            \"prelude\": \"<counter-style-name>\",\n            \"descriptors\": {\n                \"additive-symbols\": \"[<integer>&&<symbol>]#\",\n                \"fallback\": \"<counter-style-name>\",\n                \"negative\": \"<symbol> <symbol>?\",\n                \"pad\": \"<integer>&&<symbol>\",\n                \"prefix\": \"<symbol>\",\n                \"range\": \"[[<integer>|infinite]{2}]#|auto\",\n                \"speak-as\": \"auto|bullets|numbers|words|spell-out|<counter-style-name>\",\n                \"suffix\": \"<symbol>\",\n                \"symbols\": \"<symbol>+\",\n                \"system\": \"cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]\"\n            }\n        },\n        \"document\": {\n            \"prelude\": \"[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#\",\n            \"descriptors\": null\n        },\n        \"font-face\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"ascent-override\": \"normal|<percentage>\",\n                \"descent-override\": \"normal|<percentage>\",\n                \"font-display\": \"[auto|block|swap|fallback|optional]\",\n                \"font-family\": \"<family-name>\",\n                \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n                \"font-variation-settings\": \"normal|[<string> <number>]#\",\n                \"font-stretch\": \"<font-stretch-absolute>{1,2}\",\n                \"font-style\": \"normal|italic|oblique <angle>{0,2}\",\n                \"font-weight\": \"<font-weight-absolute>{1,2}\",\n                \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n                \"line-gap-override\": \"normal|<percentage>\",\n                \"size-adjust\": \"<percentage>\",\n                \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n                \"unicode-range\": \"<urange>#\"\n            }\n        },\n        \"font-feature-values\": {\n            \"prelude\": \"<family-name>#\",\n            \"descriptors\": null\n        },\n        \"import\": {\n            \"prelude\": \"[<string>|<url>] [<media-query-list>]?\",\n            \"descriptors\": null\n        },\n        \"keyframes\": {\n            \"prelude\": \"<keyframes-name>\",\n            \"descriptors\": null\n        },\n        \"media\": {\n            \"prelude\": \"<media-query-list>\",\n            \"descriptors\": null\n        },\n        \"namespace\": {\n            \"prelude\": \"<namespace-prefix>? [<string>|<url>]\",\n            \"descriptors\": null\n        },\n        \"page\": {\n            \"prelude\": \"<page-selector-list>\",\n            \"descriptors\": {\n                \"bleed\": \"auto|<length>\",\n                \"marks\": \"none|[crop||cross]\",\n                \"size\": \"<length>{1,2}|auto|[<page-size>||[portrait|landscape]]\"\n            }\n        },\n        \"property\": {\n            \"prelude\": \"<custom-property-name>\",\n            \"descriptors\": {\n                \"syntax\": \"<string>\",\n                \"inherits\": \"true|false\",\n                \"initial-value\": \"<string>\"\n            }\n        },\n        \"supports\": {\n            \"prelude\": \"<supports-condition>\",\n            \"descriptors\": null\n        },\n        \"viewport\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"height\": \"<viewport-length>{1,2}\",\n                \"max-height\": \"<viewport-length>\",\n                \"max-width\": \"<viewport-length>\",\n                \"max-zoom\": \"auto|<number>|<percentage>\",\n                \"min-height\": \"<viewport-length>\",\n                \"min-width\": \"<viewport-length>\",\n                \"min-zoom\": \"auto|<number>|<percentage>\",\n                \"orientation\": \"auto|portrait|landscape\",\n                \"user-zoom\": \"zoom|fixed\",\n                \"viewport-fit\": \"auto|contain|cover\",\n                \"width\": \"<viewport-length>{1,2}\",\n                \"zoom\": \"auto|<number>|<percentage>\"\n            }\n        }\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-tree/dist/data.js\n");

/***/ }),

/***/ "./node_modules/css-tree/dist/version.js":
/*!***********************************************!*\
  !*** ./node_modules/css-tree/dist/version.js ***!
  \***********************************************/
/*! exports provided: version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\nconst version = \"2.0.0-dev\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLXRyZWUvZGlzdC92ZXJzaW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy10cmVlL2Rpc3QvdmVyc2lvbi5qcz9hYTY3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2ZXJzaW9uID0gXCIyLjAuMC1kZXZcIjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/css-tree/dist/version.js\n");

/***/ }),

/***/ "./node_modules/source-map/lib/mapping-list.js":
/*!*****************************************************!*\
  !*** ./node_modules/source-map/lib/mapping-list.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/source-map/lib/util.js\");\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc291cmNlLW1hcC9saWIvbWFwcGluZy1saXN0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NvdXJjZS1tYXAvbGliL21hcHBpbmctbGlzdC5qcz9iMTA4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIC0qLSBNb2RlOiBqczsganMtaW5kZW50LWxldmVsOiAyOyAtKi0gKi9cbi8qXG4gKiBDb3B5cmlnaHQgMjAxNCBNb3ppbGxhIEZvdW5kYXRpb24gYW5kIGNvbnRyaWJ1dG9yc1xuICogTGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgbGljZW5zZS4gU2VlIExJQ0VOU0Ugb3I6XG4gKiBodHRwOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvQlNELTMtQ2xhdXNlXG4gKi9cblxudmFyIHV0aWwgPSByZXF1aXJlKCcuL3V0aWwnKTtcblxuLyoqXG4gKiBEZXRlcm1pbmUgd2hldGhlciBtYXBwaW5nQiBpcyBhZnRlciBtYXBwaW5nQSB3aXRoIHJlc3BlY3QgdG8gZ2VuZXJhdGVkXG4gKiBwb3NpdGlvbi5cbiAqL1xuZnVuY3Rpb24gZ2VuZXJhdGVkUG9zaXRpb25BZnRlcihtYXBwaW5nQSwgbWFwcGluZ0IpIHtcbiAgLy8gT3B0aW1pemVkIGZvciBtb3N0IGNvbW1vbiBjYXNlXG4gIHZhciBsaW5lQSA9IG1hcHBpbmdBLmdlbmVyYXRlZExpbmU7XG4gIHZhciBsaW5lQiA9IG1hcHBpbmdCLmdlbmVyYXRlZExpbmU7XG4gIHZhciBjb2x1bW5BID0gbWFwcGluZ0EuZ2VuZXJhdGVkQ29sdW1uO1xuICB2YXIgY29sdW1uQiA9IG1hcHBpbmdCLmdlbmVyYXRlZENvbHVtbjtcbiAgcmV0dXJuIGxpbmVCID4gbGluZUEgfHwgbGluZUIgPT0gbGluZUEgJiYgY29sdW1uQiA+PSBjb2x1bW5BIHx8XG4gICAgICAgICB1dGlsLmNvbXBhcmVCeUdlbmVyYXRlZFBvc2l0aW9uc0luZmxhdGVkKG1hcHBpbmdBLCBtYXBwaW5nQikgPD0gMDtcbn1cblxuLyoqXG4gKiBBIGRhdGEgc3RydWN0dXJlIHRvIHByb3ZpZGUgYSBzb3J0ZWQgdmlldyBvZiBhY2N1bXVsYXRlZCBtYXBwaW5ncyBpbiBhXG4gKiBwZXJmb3JtYW5jZSBjb25zY2lvdXMgbWFubmVyLiBJdCB0cmFkZXMgYSBuZWdsaWJhYmxlIG92ZXJoZWFkIGluIGdlbmVyYWxcbiAqIGNhc2UgZm9yIGEgbGFyZ2Ugc3BlZWR1cCBpbiBjYXNlIG9mIG1hcHBpbmdzIGJlaW5nIGFkZGVkIGluIG9yZGVyLlxuICovXG5mdW5jdGlvbiBNYXBwaW5nTGlzdCgpIHtcbiAgdGhpcy5fYXJyYXkgPSBbXTtcbiAgdGhpcy5fc29ydGVkID0gdHJ1ZTtcbiAgLy8gU2VydmVzIGFzIGluZmltdW1cbiAgdGhpcy5fbGFzdCA9IHtnZW5lcmF0ZWRMaW5lOiAtMSwgZ2VuZXJhdGVkQ29sdW1uOiAwfTtcbn1cblxuLyoqXG4gKiBJdGVyYXRlIHRocm91Z2ggaW50ZXJuYWwgaXRlbXMuIFRoaXMgbWV0aG9kIHRha2VzIHRoZSBzYW1lIGFyZ3VtZW50cyB0aGF0XG4gKiBgQXJyYXkucHJvdG90eXBlLmZvckVhY2hgIHRha2VzLlxuICpcbiAqIE5PVEU6IFRoZSBvcmRlciBvZiB0aGUgbWFwcGluZ3MgaXMgTk9UIGd1YXJhbnRlZWQuXG4gKi9cbk1hcHBpbmdMaXN0LnByb3RvdHlwZS51bnNvcnRlZEZvckVhY2ggPVxuICBmdW5jdGlvbiBNYXBwaW5nTGlzdF9mb3JFYWNoKGFDYWxsYmFjaywgYVRoaXNBcmcpIHtcbiAgICB0aGlzLl9hcnJheS5mb3JFYWNoKGFDYWxsYmFjaywgYVRoaXNBcmcpO1xuICB9O1xuXG4vKipcbiAqIEFkZCB0aGUgZ2l2ZW4gc291cmNlIG1hcHBpbmcuXG4gKlxuICogQHBhcmFtIE9iamVjdCBhTWFwcGluZ1xuICovXG5NYXBwaW5nTGlzdC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gTWFwcGluZ0xpc3RfYWRkKGFNYXBwaW5nKSB7XG4gIGlmIChnZW5lcmF0ZWRQb3NpdGlvbkFmdGVyKHRoaXMuX2xhc3QsIGFNYXBwaW5nKSkge1xuICAgIHRoaXMuX2xhc3QgPSBhTWFwcGluZztcbiAgICB0aGlzLl9hcnJheS5wdXNoKGFNYXBwaW5nKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLl9zb3J0ZWQgPSBmYWxzZTtcbiAgICB0aGlzLl9hcnJheS5wdXNoKGFNYXBwaW5nKTtcbiAgfVxufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBmbGF0LCBzb3J0ZWQgYXJyYXkgb2YgbWFwcGluZ3MuIFRoZSBtYXBwaW5ncyBhcmUgc29ydGVkIGJ5XG4gKiBnZW5lcmF0ZWQgcG9zaXRpb24uXG4gKlxuICogV0FSTklORzogVGhpcyBtZXRob2QgcmV0dXJucyBpbnRlcm5hbCBkYXRhIHdpdGhvdXQgY29weWluZywgZm9yXG4gKiBwZXJmb3JtYW5jZS4gVGhlIHJldHVybiB2YWx1ZSBtdXN0IE5PVCBiZSBtdXRhdGVkLCBhbmQgc2hvdWxkIGJlIHRyZWF0ZWQgYXNcbiAqIGFuIGltbXV0YWJsZSBib3Jyb3cuIElmIHlvdSB3YW50IHRvIHRha2Ugb3duZXJzaGlwLCB5b3UgbXVzdCBtYWtlIHlvdXIgb3duXG4gKiBjb3B5LlxuICovXG5NYXBwaW5nTGlzdC5wcm90b3R5cGUudG9BcnJheSA9IGZ1bmN0aW9uIE1hcHBpbmdMaXN0X3RvQXJyYXkoKSB7XG4gIGlmICghdGhpcy5fc29ydGVkKSB7XG4gICAgdGhpcy5fYXJyYXkuc29ydCh1dGlsLmNvbXBhcmVCeUdlbmVyYXRlZFBvc2l0aW9uc0luZmxhdGVkKTtcbiAgICB0aGlzLl9zb3J0ZWQgPSB0cnVlO1xuICB9XG4gIHJldHVybiB0aGlzLl9hcnJheTtcbn07XG5cbmV4cG9ydHMuTWFwcGluZ0xpc3QgPSBNYXBwaW5nTGlzdDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/source-map/lib/mapping-list.js\n");

/***/ }),

/***/ "./node_modules/source-map/lib/source-map-generator.js":
/*!*************************************************************!*\
  !*** ./node_modules/source-map/lib/source-map-generator.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = __webpack_require__(/*! ./base64-vlq */ \"./node_modules/source-map/lib/base64-vlq.js\");\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/source-map/lib/util.js\");\nvar ArraySet = __webpack_require__(/*! ./array-set */ \"./node_modules/source-map/lib/array-set.js\").ArraySet;\nvar MappingList = __webpack_require__(/*! ./mapping-list */ \"./node_modules/source-map/lib/mapping-list.js\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/source-map/lib/source-map-generator.js\n");

/***/ })

}]);